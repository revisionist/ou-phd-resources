{
	"info": {
		"_postman_id": "84ea7023-dfeb-4c77-a0b0-27cc96ef0f28",
		"name": "AWAG Data",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "9715575"
	},
	"item": [
		{
			"name": "Simulation",
			"item": [
				{
					"name": "Susan",
					"item": [
						{
							"name": "Fetch",
							"item": [
								{
									"name": "Fetch (one): susan-work-team-general",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{agent-id-test-1}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "eb059f77-bb22-4dde-9607-{{agent_id_test_1}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/sim/get-sim-text?client_id={{agent_id_susan}}&category=susan-work-team-general&is_get_all=false",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"sim",
												"get-sim-text"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{agent_id_susan}}"
												},
												{
													"key": "category",
													"value": "susan-work-team-general"
												},
												{
													"key": "is_get_all",
													"value": "false"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Fetch (all): susan-work-team-general",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{agent-id-test-1}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "eb059f77-bb22-4dde-9607-{{agent_id_test_1}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/sim/get-all-sim-texts?client_id={{agent_id_susan}}&category=susan-tennis-chat&is_get_all=true",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"sim",
												"get-all-sim-texts"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{agent_id_susan}}"
												},
												{
													"key": "category",
													"value": "susan-tennis-chat"
												},
												{
													"key": "is_get_all",
													"value": "true"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Generate: susan-tennis",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{agent_id}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "eb059f77-bb22-4dde-9607-{{agent_id_test_1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "OpenAI-Auth-Token",
										"value": "{{openai_auth_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"use_history\": true,\r\n   \"openai_model\": \"{{openai_model_sim}}\",\r\n   \"dramatis_personae\": {{susan_tennis_dramatis_personae}},\r\n   \"entities\": {{susan_tennis_entities}},\r\n   \"XXXopenai_params\":{\r\n      \"temperature\":0.95,\r\n      \"top_p\":0,\r\n      \"frequency_penalty\":0.2,\r\n      \"presence_penalty\":0.2\r\n   },\r\n   \"topics\":[\r\n      {\r\n         \"category\":\"susan-tennis-club\",\r\n         \"enabled\": true,\r\n         \"items_multiplier\":3,\r\n         \"topic\":\"Chat forum within an English tennis club, Felpersham Tennis Club, that our fictional protagonist Susan Carter is member and co-organiser for.  Members are from the areas around the cathederal city of Felpersham in Borsetshire where the club is located, including Abridge village where Susan lives, the main county town of Borchester, Penny Hassett and Loxley Barrett.  Topics generally relate to tennis club business (fixtures, club elections and meetings, evants at the clubhouse etc.), discussion about professional and amateur tennis competitions and other things you might expect members of a tennis club to discuss. Chat will often veer to other topics including current affairs, but there will often be someone along to remind people to stick vaguely to the topic.  There is a 'no politics' rule that is sometimes broken but quickly reprimanded.  There are some general jokes and light banter.  The local rival club Darrington Tennis will often get a mention.  Generate a range of messages to reflect the above and other topics; avoid generating duplicates or overly similar repeated messages.  The tone of the messages should be informal British English with British spellings.\"\r\n      },\r\n      {\r\n         \"category\":\"susan-tennis-chat\",\r\n         \"enabled\": true,\r\n         \"items_multiplier\":2,\r\n         \"topic\":\"Chat between a group of friends who share an interest in tennis.  Our protagonist, susan, is a member of a tennis club which has its own discussion forum, but this is a separate group chat among friends.  People mostly come from the fictional village of Ambridge in the county of Borsetshire, UK, or nearby.  The group often meet at the tennis club where many are members (Felpersham Tennis Club) or village pub (The Bull) to socialise as well as actually playing tennis.  Tennis played is a mixture of social and competitive fixtures.  Topics often relate to tennis, but the chat will frequently veer to other topics including village gossip, current affairs and family news and you should generate a range of messages to reflect this.  Tennis-related discussion will often include arranging informal one to one or doubles matches, discussion about injuries or technique and speculating on the weather and court availability.  People may also mention locations in the main county town of Borchester, as well as, Penny Hassett, Loxley Barrett, Darrington, and the cathederal city of Felpersham where the club is based.  There are some general jokes and light banter; avoid generating duplicates or overly similar repeated messages.  The tone of the messages should be informal British English with British spellings.\"\r\n      }\r\n   ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/sim/gen-sim-text?client_id={{agent_id_susan}}&is_async=true&is_add=true&item_count=15",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"sim",
										"gen-sim-text"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{agent_id_susan}}"
										},
										{
											"key": "is_async",
											"value": "true"
										},
										{
											"key": "is_add",
											"value": "true"
										},
										{
											"key": "item_count",
											"value": "15"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Generate: susan-work",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{agent_id}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "eb059f77-bb22-4dde-9607-{{agent_id_test_1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "OpenAI-Auth-Token",
										"value": "{{openai_auth_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"use_history\": true,\r\n   \"openai_model\": \"{{openai_model_sim}}\",\r\n   \"dramatis_personae\": {{susan_work_dramatis_personae}},\r\n   \"entities\":{{susan_work_entities}},\r\n   \"XXopenai_params\":{\r\n      \"temperature\":0.95,\r\n      \"top_p\":0,\r\n      \"frequency_penalty\":0.2,\r\n      \"presence_penalty\":0.2\r\n   },\r\n   \"topics\":[\r\n      {\r\n         \"category\":\"susan-work-university-announce\",\r\n         \"enabled\": true,\r\n         \"items_multiplier\": 1,\r\n         \"topic\":\"Corporate messenger application chat within the employer of our fictional protagonist, Susan Carter. The messages are exclusively internal university announcements coming from the senior leadership team and PR office of the university that Susan works for, Borchester University.  Generate messages that come from all of the senior leaders in the provided list as well as from an anonymous PR account or from Alumni Relations.  Messages should occasionally refer to the university's academic achievements, rankings, campuses, faculty changes etc. Message content should be unique and not duplicated. Try and use a good range of content, making up names of internal and external entities such as campuses, buildings, research centres, funding bodies, business partnerships, alumni organisations and government entities.  The tone of the messages should be formal business British English with British spellings.\"\r\n      },\r\n      {\r\n         \"category\":\"susan-work-university-general\",\r\n         \"enabled\": true,\r\n         \"items_multiplier\": 2,\r\n         \"topic\":\"Workplace messenger application chat within the employer of our fictional protagonist, Susan Carter.  The chat is general workplace discussion within the university that Susan works for, Borchester University.  The chat is at the overall university staff level and not individual teams, so should mostly not refer to in-team topics.  Topics should include discussion about university announcements and courses, upcoming events, academic climate, general news (where appropriate for university staff discussion) and other items people might choose to share with anorganisation of this size. This group chat is intended for discussions aimed at the whole university administration - it is not the correct place for team discussions, technical support requests etc.  Messages should occasionally refer to the university's international operations, locations, facilities etc.  Some messages might be complaints, compliments or other discussion on univeristy policies, changes, facilities, catering etc. as well as some external events; avoid generating duplicates or overly similar repeated messages.  The tone of the messages should be informal/professional British English with British spellings.\"\r\n      },\r\n      {\r\n         \"category\":\"susan-work-team-general\",\r\n         \"enabled\": true,\r\n         \"items_multiplier\": 3,\r\n         \"topic\":\"Corporate messenger application chat for the work team of our fictional protagonist, Susan Carter.  The chat is general workplace discussion between members of Susan's team in the Undergraduate Admissions Office at Borchester University.  The team is half working in the office and half remote working (some people alternate between the two).  About half of the team is part-time.  Topics should include discussions about work (admissions queries, processes, asking for help or cover etc.), logistics, talking about out of work meetups and events and other topcis that you might expect a work team to discuss.  Some of the messages should imply a sense of urgency, such as a request for timely assistance, while most should be more relaxed.  While a list of some colleagues in other parts of the university is provided, you should also generate fictional names to reference in messages; avoid generating duplicates or overly similar repeated messages.  The tone of the messages should be informal British English with British spellings.\"\r\n      },\r\n      {\r\n         \"category\":\"susan-work-team-manager\",\r\n         \"enabled\": true,\r\n         \"items_multiplier\": 2,\r\n         \"topic\":\"Corporate messenger application chat between our fictional protagonist, Susan Carter and her manager Eleanor Baker, who heads up the Undergraduate Admissions Office at Borchester University where susan works.  It conly includes messages between Susan Carter and Eleanor Baker.  The team is half working in the office and half remote working (some people alternate between the two).  About half of the team is part-time.  This chat is just between Susan and her manager, and topics should include admissions-related discussions, logistics, and usual topics that a manager and their direct report might need to discuss.  Some of the messages should be of a type that would normally need a prompt or urgent response.  In this scenario, Susan is a solid performer at work, but has a high workload and not all of her colleagues pull their weight equally; avoid generating duplicates or overly similar repeated messages.  The tone of the messages should be informal/professional British English with British spellings.\"\r\n      }\r\n   ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/sim/gen-sim-text?client_id={{agent_id_susan}}&is_async=true&is_add=true&item_count=20",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"sim",
										"gen-sim-text"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{agent_id_susan}}"
										},
										{
											"key": "is_async",
											"value": "true"
										},
										{
											"key": "is_add",
											"value": "true"
										},
										{
											"key": "item_count",
											"value": "20"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Generate: susan-personal",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{agent_id}}",
											"type": "string"
										},
										{
											"key": "password",
											"value": "eb059f77-bb22-4dde-9607-{{agent_id_test_1}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "OpenAI-Auth-Token",
										"value": "{{openai_auth_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"use_history\": true,\r\n   \"openai_model\": \"{{openai_model_sim}}\",\r\n   \"dramatis_personae\": {{susan_personal_dramatis_personae}},\r\n   \"entities\":{{susan_personal_entities}},\r\n   \"topics\":[\r\n      {\r\n         \"category\":\"susan-village\",\r\n         \"enabled\": true,\r\n         \"items_multiplier\": 3,\r\n         \"topic\":\"General chat among residents of the fictional village of Ambridge in in the county of Borsetshire, UK, as seen by our protagonist, Susan Carter. The chat is a mostly lighthearted exchange between residents of Ambridge, covering topics including comings & goings around Ambridge, parking problems, postal service & parcel delivery (problems), recommendations for good tradespeople, social events, local crime and plenty of village gossip.  This chat is among a general village audience rather than one-to-one messages about individual arrangements.  A few of the messages should be of a nature that merits a prompts response, such as a request for assistance or information.  Nearby villages include Penny Hassett, Loxley Barrett, Darrington, Hollerton, Edgeley, Waterley Cross and Lakey Green.  The main local city is the cathederal city of Felpersham.  Some of these locations should occasionally be mentioned in messages.  In addition to the supplied list of people, you should make up identities as needed - the chat forum would contain maybe 50-30 members (although not all of these post messages often).  The tone of the messages should be informal British English.\"\r\n      },\r\n      {\r\n         \"category\":\"susan-family\",\r\n         \"enabled\": true,\r\n         \"items_multiplier\": 2,\r\n         \"topic\":\"General chat between members of a fictional British family, as seen by our protagonist, Susan Carter.  The chat is a lighthearted exchange between familiy members on a variety of topics, with some messages relating to logistics and meeting up but also plenty of village gossip.  A few of the messages should be of a nature that merits a prompts response, suh as a request for assistance or information.  Susan and Neil live in the village of Ambridge in Borsetshire, while family are dotted around local villages Penny Hassett, Loxley Barrett, Darrington, Hollerton, Edgeley, Waterley Cross and Lakey Green.  The main local city is the cathederal city of Felpersham.  The tone of the messages should be informal British English.\"\r\n      },\r\n      {\r\n         \"category\":\"susan-neil\",\r\n         \"enabled\": true,\r\n         \"items_multiplier\": 2,\r\n         \"topic\":\"Chat between our fictional protagonist, Susan Carter and her husband Neil.  The chat is a exchange a variety of topics, with some messages relating to logistics and meeting up but also discussing how their day is going and talking about family and work events.  Try and include reasonable variety.  Susan is an administrator in the Undergraduate Admissions Office at Borchester University, where she commutes to work 3 days a week and works from home 2 days.  Sometimes both Susan and Neil like to comment or complain about their day.  A small amount of messages should be of a type that might need a prompt or urgent response.  Susan and Neil live in the village of Ambridge, and Neil works with the pigs at nearby Berrow Farm, while family are dotted around local villages Ambridge, Penny Hassett, Loxley Barrett, Darrington, Hollerton, Edgeley, Waterley Cross and Lakey Green.  The main local city is the cathederal city of Felpersham.  The tone of the messages should be informal British English.\"\r\n      }\r\n   ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/sim/gen-sim-text?client_id={{agent_id_susan}}&is_async=true&is_add=true&item_count=15",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"sim",
										"gen-sim-text"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{agent_id_susan}}"
										},
										{
											"key": "is_async",
											"value": "true"
										},
										{
											"key": "is_add",
											"value": "true"
										},
										{
											"key": "item_count",
											"value": "15"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Last Job (Susan)",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "OpenAI-Auth-Token",
										"value": "{{openai_auth_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/sim/jobs/:job_id?client_id={{agent_id_susan}}",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"sim",
										"jobs",
										":job_id"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{agent_id_susan}}"
										}
									],
									"variable": [
										{
											"key": "job_id",
											"value": "{{last_job_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									"console.log(\"AWAG Data/Simulation/Susan\");\r",
									"console.log(\"function_sanitiseStringForJson: \" + pm.globals.get(\"function_sanitiseStringForJson\"));\r",
									"\r",
									"var currentAgent = pm.variables.get('current_agent');\r",
									"console.log(\"currentAgent: \" + currentAgent);\r",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Adam",
					"item": [
						{
							"name": "Fetch",
							"item": [
								{
									"name": "Fetch: adam-work-team-general",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/sim/get-sim-text?client_id={{agent_id_adam}}&category=adam-work-team-general&is_get_all=true",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"sim",
												"get-sim-text"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{agent_id_adam}}"
												},
												{
													"key": "category",
													"value": "adam-work-team-general"
												},
												{
													"key": "is_get_all",
													"value": "true"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Generate: adam-cycling",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "OpenAI-Auth-Token",
										"value": "{{openai_auth_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"use_history\": true,\r\n   \"openai_model\": \"{{openai_model_sim}}\",\r\n   \"dramatis_personae\": {{adam_cycling_dramatis_personae}},\r\n   \"entities\": {{adam_cycling_entities}},\r\n   \"XXXopenai_params\":{\r\n      \"temperature\":0.95,\r\n      \"top_p\":0,\r\n      \"frequency_penalty\":0.2,\r\n      \"presence_penalty\":0.2\r\n   },\r\n   \"topics\":[\r\n      {\r\n         \"category\":\"adam-cycling-club-general\",\r\n         \"enabled\": true,\r\n         \"items_multiplier\":3,\r\n         \"topic\":\"General chat between members of a fictional British cyling club the 'Borchester Wheelers ' (also called BWCC).  Club members mostly come from the fictional town of Borchester in Borsetshire, UK, or nearby.  Topics generally relate to all aspects of cycling but in particular club rides, cycle sport, cycle commuting, and maintenance.  For your reference, the club does its big cycle rides on a Sunday morning at 9am (people meet at the car park of a cafe called 'Spoke & Brew' as the club does not have a physical clubhouse).  Popular destinations for club rides include the villages/towns of Ambridge, Penny Hassett, Loxley Barrett, Darrington, Hollerton, Edgeley, Waterley Cross and Lakey Green, and sometimes as far afield as the cathederal city of Felpersham.  Club rides could be of the sporting, social or coffee shop variety, and there is a monthly new joiners ride. Some members commute to work by bike and occasionally meet to do their commutes together.  Doing laps of Borchester Park is a popular weekend and after work activity, although people often complain about the car traffic there.  Many members also cycle on the virtual platform Zwift, although there are different chat groups dedicated to this.  People will often discuss any professional cycle races that are happening at the time, as well as occasionally other sports such as rugby or football.  People will sometimes chide members to stay on topic if they stray too far into other sports.  Sometimes people will send messages reminding members to look at some topic posted on the club's web forum.  There are some general jokes and light banter.  The tone of the messages should be informal British English with British spellings.\"\r\n      },\r\n      {\r\n         \"category\":\"adam-cycling-club-zwift\",\r\n         \"enabled\": true,\r\n         \"items_multiplier\":2,\r\n         \"topic\":\"Chat between members of a fictional British cyling club the 'Borchester Wheelers ' (also called BWCC).  Club members mostly come from the fictional town of Borchester in Borsetshire, UK, or nearby.  This chat is specifically to discuss the virtual cycling platform Zwift, which many members use, and is not the place to discuss outdoor riding.  Main topics for Zwift include the Zwift Racing League (ZRL) where the club fields several teams, equipment, technical issues related to Zwift, and nutrition/hydration strategies (beetroot juice is popular).  Zwift racing is organised into categories A-C based on rider power/weight and this is often controversial, with people having been known to engage in 'sandbagging' so that they can compete in a lower category with more success.  Club members often joke with each other in a lighthearted way about sandbagging.  Other running jokes involve the excessive use of spreadsheets and the power or otherwise of various riders.  Many messages relate to organising people into teams to compete.  For your reference, the club does its big 'real life' cycle rides on Sundays - popular destinations for club rides include the villages/towns of Ambridge, Penny Hassett, Loxley Barrett, Darrington, Hollerton, Edgeley, Waterley Cross and Lakey Green, and sometimes as far afield as the cathederal city of Felpersham.  Sometimes non-Zwift messages appear in the chat, which is mostly tolerated.  There are some general jokes and light banter.  The tone of the messages should be informal British English with British spellings.\"\r\n      }\r\n   ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/sim/gen-sim-text?client_id={{agent_id_adam}}&is_async=true&is_add=true&item_count=20",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"sim",
										"gen-sim-text"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{agent_id_adam}}"
										},
										{
											"key": "is_async",
											"value": "true"
										},
										{
											"key": "is_add",
											"value": "true"
										},
										{
											"key": "item_count",
											"value": "20"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Generate: adam-work",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "OpenAI-Auth-Token",
										"value": "{{openai_auth_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"use_history\": true,\r\n   \"openai_model\": \"{{openai_model_sim}}\",\r\n   \"dramatis_personae\": {{adam_work_dramatis_personae}},\r\n   \"entities\":{{adam_work_entities}},\r\n   \"XXopenai_params\":{\r\n      \"temperature\":0.95,\r\n      \"top_p\":0,\r\n      \"frequency_penalty\":0.2,\r\n      \"presence_penalty\":0.2\r\n   },\r\n   \"topics\":[\r\n      {\r\n         \"category\":\"adam-work-company-announce\",\r\n         \"enabled\": true,\r\n         \"items_multiplier\": 1,\r\n         \"topic\":\"Corporate messenger application messages for the workplace of our fictional protagonist, Adam Macy.  The messages are exclusively internal coroprate announcements coming from the executive and senior leadership team of company that Adam works for, Borchester Software.  Generate messages that come from all of the exectives in the provided list.  Borchester Software is an international company with approximately 500 employees who are based mainly in the UK, USA, Canada, Japan and Germany.  Announcements can include (but are not limited to) industry topics, company-wide meetings, reminders about business conduct rules, customer contracts and acquisitions, new internal IT systems, and senior personnel changes.  Please ensure that each batch of generated content contains nessages that cover the whole range of topics.  While a list of some clients is provided, you should also generate fictional client names to reference in those messages that relate to clients.  You should also generate fictional internal team names to mention where necessary.  There must be variation in message topic and content; avoid re-using the same phrases.  The tone of the messages should be relatively formal business English with British spellings.\"\r\n      },\r\n      {\r\n         \"category\":\"adam-work-company-general\",\r\n         \"enabled\": true,\r\n         \"items_multiplier\": 2,\r\n         \"topic\":\"Corporate messenger application chat for the workplace of our fictional protagonist, Adam Macy.  The chat is general workplace discussion within company that Adam works for, Borchester Software (sometimes referred to by its initials), which is an international company with approximately 500 employees who are based mainly in the UK, USA, Canada, Japan and Germany.  Topics should include discussion about company announcements and products, upcoming events, business climate, general news (where appropriate for coroprate discussion) and other items people might choose to share with a company of this size.  This group chat is intended for discussions aimed at the whole company - it is not the correct place for team discussions, technical support requests, local office matters etc.   Message content should be unique and not duplicated.  While a list of some clients is provided, you should also generate fictional client names to reference in messages.  The tone of the messages should be informal/business English with British spellings.\"\r\n      },\r\n      {\r\n         \"category\":\"adam-work-team-general\",\r\n         \"enabled\": true,\r\n         \"items_multiplier\": 3,\r\n         \"topic\":\"Corporate messenger application chat for the work team of our fictional protagonist, Adam Macy.  The chat is general workplace discussion between members of the same IT consulting team that Adam is in.  The company that Adam works for is called Borchester Software (sometimes referred to by its initials) and his team of 10 people is called the Client Technology Group (CTG).  The team is spread all over. Topics should include client discussions, logistics, talking about out of work meetups and events, some office gossip and other topics that you might expect a distributed work team to discuss.  While a list of some clients is provided, you should also generate fictional client names to reference in messages.  Some of the messages should convey some sort of sense of urgency or need for a prompt response.  Message content should be unique and not duplicated.  The tone of the messages should be informal British English with British spellings.\"\r\n      },\r\n      {\r\n         \"category\":\"adam-work-team-manager\",\r\n         \"enabled\": true,\r\n         \"items_multiplier\": 2,\r\n         \"topic\":\"Corporate messenger application chat between our fictional protagonist, Adam Macy and his manager Charlotte Walker.  Adam works for Borchester Software (sometimes referred to by its initials) and is in a team of 10 people called the Client Technology Group (CTG), headed by Charlotte.  The team is spread all over.   This chat is just between Adam and his manager, and topics should include client discussions, logistics, and usual topics that a manager and their direct report might need to discuss.  In this scenario, Adam is a strong performer at work, but has a high workload with a lot of customer travel commitments.  While a list of some clients is provided, you should also generate fictional client names to reference in messages.  Some of the messages should convey some sort of sense of urgency or need for a prompt response.  The tone of the messages should be informal British English with British spellings.\"\r\n      },\r\n      {\r\n         \"category\":\"adam-work-team-client\",\r\n         \"enabled\": true,\r\n         \"items_multiplier\": 2,\r\n         \"topic\":\"Corporate messenger application chat for the work team of our fictional protagonist, Adam Macy.  The chat is workplace discussion between members of the same IT consulting team that Adam is in.  The company that Adam works for is called Borchester Software (sometimes referred to by its initials) and he is in a team of 10 people called the Client Technology Group (CTG).  The team is spread all over.  Other chats exist for more general topics, but this chat is specifically about issues, questions and logistics relating to client work.  For example, the team might talk about new client engagements, seek help with client technical problems or arrange meetings related to the clients.  Some of the messages should convey some sort of sense of urgency or need for a prompt response.  While a list of some clients is provided, you should also generate fictional client names to reference in messages.  The tone of the messages should be informal British English with British spellings.\"\r\n      }\r\n   ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/sim/gen-sim-text?client_id={{agent_id_adam}}&is_async=true&item_count=10",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"sim",
										"gen-sim-text"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{agent_id_adam}}"
										},
										{
											"key": "is_async",
											"value": "true"
										},
										{
											"key": "is_add",
											"value": "true",
											"disabled": true
										},
										{
											"key": "item_count",
											"value": "10"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Generate: adam-personal",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "OpenAI-Auth-Token",
										"value": "{{openai_auth_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"use_history\": true,\r\n   \"openai_model\": \"{{openai_model_sim}}\",\r\n   \"dramatis_personae\": {{adam_personal_dramatis_personae}},\r\n   \"entities\":{{adam_personal_entities}},\r\n   \"topics\":[\r\n      {\r\n         \"category\":\"adam-family-group-chat\",\r\n         \"enabled\": true,\r\n         \"items_multiplier\": 2,\r\n         \"topic\":\"General chat between members of a fictional British family, as seen by our protagonist, Adam Macy.  The chat is a lighthearted exchange between familiy members on a variety of topics, with some messages relating to logistics and meeting up.  Other topics might include village gossip, family personal and work happenings and milestones, and requests for assistance or favours, Adam and Ian live in the county town of Borchester in Borsetshire, while family are dotted around local villages Penny Hassett, Loxley Barrett, Darrington, Hollerton, Edgeley, Waterley Cross and Lakey Green.  The main local city is the cathederal city of Felpersham.  The tone of the messages should be informal British English with British spellings.\"\r\n      },\r\n      {\r\n         \"category\":\"adam-friends-chat\",\r\n         \"enabled\": true,\r\n         \"items_multiplier\": 2,\r\n         \"topic\":\"General chat between a group of friends of our protagonist, Adam Macy and his partner Ian Craig.  The chat is a lighthearted exchange between friends on a variety of topics that a group of young to middle aged adult friends might discuss.  This would include but is not limited to jokes, meeting arrangements, discussion about what people have been doing, world affairs and local gossip.  Adam and Ian live in the county town of Borchester in Borsetshire, while friends are dotted around local villages Ambridge, Penny Hassett, Loxley Barrett, Darrington, Hollerton, Edgeley, Waterley Cross and Lakey Green.  The main local city is the cathederal city of Felpersham.  Chat participants should be limited to only Adam, Ian and the supplied list of friends (not any family or work colleagues), although messages may refer to any individual.  The tone of the messages should be informal British English with some light banter using British spellings.\"\r\n      },\r\n      {\r\n         \"category\":\"adam-ian-chat\",\r\n         \"enabled\": true,\r\n         \"items_multiplier\": 1,\r\n         \"topic\":\"Chat between our fictional protagonist, Adam Macy and his civil partner Ian Craig.  The chat is a exchange a variety of topics, with some messages relating to logistics and meeting up but also discussing how their day is going and talking about family and work events/gossip.  Try and include reasonable variety.  Adam is an IT consultant, who often works long hours and has to travel, which sometimes causes tension.  Adam and Ian live in the county town of Borchester in Borsetshire, while family are dotted around local villages Ambridge, Penny Hassett, Loxley Barrett, Darrington, Hollerton, Edgeley, Waterley Cross and Lakey Green.  The main local city is the cathederal city of Felpersham.  The tone of the messages should be informal British English with British spellings.\"\r\n      }\r\n   ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/sim/gen-sim-text?client_id={{agent_id_susan}}&is_async=true&is_add=true&item_count=20",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"sim",
										"gen-sim-text"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{agent_id_susan}}"
										},
										{
											"key": "is_async",
											"value": "true"
										},
										{
											"key": "is_add",
											"value": "true"
										},
										{
											"key": "item_count",
											"value": "20"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Last Job (Adam)",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "OpenAI-Auth-Token",
										"value": "{{openai_auth_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/sim/jobs/:job_id?client_id={{agent_id_adam}}",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"sim",
										"jobs",
										":job_id"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{agent_id_adam}}"
										}
									],
									"variable": [
										{
											"key": "job_id",
											"value": "{{last_job_id}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Usha",
					"item": [
						{
							"name": "Fetch",
							"item": [
								{
									"name": "Fetch: usha-school-parents-chat",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/sim/get-sim-text?client_id={{agent_id_usha}}&category=usha-school-parents-chat&is_get_all=true",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"sim",
												"get-sim-text"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{agent_id_usha}}"
												},
												{
													"key": "category",
													"value": "usha-school-parents-chat"
												},
												{
													"key": "is_get_all",
													"value": "true"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Fetch: usha-riding-chat",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/sim/get-sim-text?client_id={{agent_id_usha}}&category=usha-riding-chat&is_get_all=true",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"sim",
												"get-sim-text"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{agent_id_usha}}"
												},
												{
													"key": "category",
													"value": "usha-riding-chat"
												},
												{
													"key": "is_get_all",
													"value": "true"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Fetch: usha-work-partners",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/sim/get-sim-text?client_id={{agent_id_usha}}&category=usha-work-partners&is_get_all=true",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"sim",
												"get-sim-text"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{agent_id_usha}}"
												},
												{
													"key": "category",
													"value": "usha-work-partners"
												},
												{
													"key": "is_get_all",
													"value": "true"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Generate: usha-riding",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "OpenAI-Auth-Token",
										"value": "{{openai_auth_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"use_history\": true,\r\n   \"openai_model\": \"{{openai_model_sim}}\",\r\n   \"dramatis_personae\": {{usha_riding_dramatis_personae}},\r\n   \"entities\": {{usha_riding_entities}},\r\n   \"XXXopenai_params\":{\r\n      \"temperature\":0.95,\r\n      \"top_p\":0,\r\n      \"frequency_penalty\":0.2,\r\n      \"presence_penalty\":0.2\r\n   },\r\n   \"topics\":[\r\n      {\r\n         \"category\":\"usha-riding-chat\",\r\n         \"enabled\": true,\r\n         \"items_multiplier\":1,\r\n         \"topic\":\"General chat between a group of friends with a shared interest in horse riding, including our protagonist Usha Franks.  Most of those on the chat are members of Felpersham Riding Club and some stable their horses there.  Club members mostly come from the fictional villages of Ambridge and Darrington in the county of Borsetshire, or nearby, although some come from the cathederal city of Felpersham where Usha practices as a solicitor.  This is a social chat between friends and acquaintances that share a common interest.  Topics generally relate to all aspects of recreational and competitive horse riding, with many messages also being about meeting up for rides.  Some but not all ride competitively (i.e. dressage), while most are social riders.  There are some non-horse related messages such as general jokes and light chat.  Message content should be unique and not duplicated. The tone of the messages should be informal British English with British spellings.\"\r\n      },\r\n      {\r\n         \"category\":\"usha-riding-stables\",\r\n         \"enabled\": true,\r\n         \"items_multiplier\":1,\r\n         \"topic\":\"General chat for people associated with Felpersham Riding Club and its stables, including our protagonist Usha Franks.  The chat is used for communication between members of Felpersham Riding Club and also for announcements and information from club officials and stable managers. Usha stables her horse there.  Club members mostly come from the fictional villages of Ambridge and Darrington in the county of Borsetshire, or nearby, although some come from the cathederal city of Felpersham where Usha practices as a solicitor.  Topics generally relate to all aspects of recreational and competitive horse riding, with many messages also being about club matters and announcements about competitions, events and happenings at the stables.  Message content should be unique and not duplicated. The tone of the messages should be informal British English with British spellings.\"\r\n      }\r\n   ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/sim/gen-sim-text?client_id={{agent_id_usha}}&is_async=true&is_add=true&item_count=40",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"sim",
										"gen-sim-text"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{agent_id_usha}}"
										},
										{
											"key": "is_async",
											"value": "true"
										},
										{
											"key": "is_add",
											"value": "true"
										},
										{
											"key": "item_count",
											"value": "40"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Generate: usha-work",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "OpenAI-Auth-Token",
										"value": "{{openai_auth_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"use_history\": true,\r\n   \"openai_model\": \"{{openai_model_sim}}\",\r\n   \"dramatis_personae\": {{usha_work_dramatis_personae}},\r\n   \"entities\":{{usha_work_entities}},\r\n   \"XXopenai_params\":{\r\n      \"temperature\":0.95,\r\n      \"top_p\":0,\r\n      \"frequency_penalty\":0.2,\r\n      \"presence_penalty\":0.2\r\n   },\r\n   \"topics\":[\r\n      {\r\n         \"category\":\"usha-work-office\",\r\n         \"enabled\": true,\r\n         \"items_multiplier\": 3,\r\n         \"topic\":\"Company messenger application chat at the Felpersham Law, the workplace of our fictional protagonist, Usha Franks.  This chat is general workplace discussion among staff.  Topics should include discussions related to work in general but not specific client details.  This can include cover, logistical arrangements, daily office opening and closing, lunch arrangements, work social events and other topcis that you might expect to be discussed in a small company.  While a list of some colleagues and clients is provided, you should also generate fictional names to reference in messages.  Usha herself lives in the nearby village of Ambridge.  Message content should be unique and not duplicated.  The tone of the messages should be informal British English with British spellings.\"\r\n      },\r\n      {\r\n         \"category\":\"usha-work-partners\",\r\n         \"enabled\": true,\r\n         \"items_multiplier\": 1,\r\n         \"topic\":\"Company messenger application chat at the Felpersham Law, the workplace of our fictional protagonist, Usha Franks.  This chat is discussion between the three partners including Usha.  Topics in this chat should include discussions related to the individuals work as partners of the practice.  This can include the strategy and performance of the partnership, staff issues, problems or opportunities with clients, concern about competitors and other leadership topics.  Discussion of client issues should be at a higher level rather than details, focussing only on things that might affect the client relationship - the partners have different areas of specialisation and would not generally discuss day to day client matters among themselves.  As it is a private chat between the three partners they will be candid about issues and people.  Some messages may concern social topics or trivia.  A subset of the messages should be of the type that might expect a prompt response.  While a list of some colleagues and clients is provided, you should also generate fictional names to reference in messages.  Usha herself lives in the nearby village of Ambridge.  Message content should be unique and not duplicated.  The tone of the messages should be informal British English with British spellings.\"\r\n      },\r\n      {\r\n         \"category\":\"usha-work-pa\",\r\n         \"enabled\": true,\r\n         \"items_multiplier\": 2,\r\n         \"topic\":\"Company messenger application chat at the Felpersham Law, the workplace of our fictional protagonist, Usha Franks.  This chat is discussion between Ushal and her personal assistant Evan Thomas.  Only include messages from these two people.  Topics in this chat should include discussions related to Usha's client work, organising her diary and other similar items that would come up between a partner in a solicitor's practice and her personal assistant.  Some messages may concern social topics or trivia.  A subset of the messages should be of the type that might expect a prompt response.  While a list of some colleagues and clients is provided, you should also generate fictional names to reference in messages.  Usha herself lives in the nearby village of Ambridge.  Message content should be unique and not duplicated.  The tone of the messages should be informal British English with British spellings.\"\r\n      },\r\n      {\r\n         \"category\":\"usha-work-clients\",\r\n         \"enabled\": true,\r\n         \"items_multiplier\": 2,\r\n         \"topic\":\"Business communications (email/messages) at the Felpersham Law, the workplace of our fictional protagonist, Usha Franks.  These messages are communications directly between Usha and various clients that she is working with.  Topics in this chat should include discussions related to the clients' cases and other similar items that would come up between a partner in a solicitor's practice and her clients  A few messages may concern social topics or trivia where Usha has a long relationship with the client.  A subset of the messages should be of the type that might expect a prompt response.  While a list of some colleagues and clients is provided, you should also generate fictional names to reference in messages.  Usha herself lives in the nearby village of Ambridge.  Message content should be unique and not duplicated.  Ensure that you produce incoming messages from clients.  The tone of the messages should be British English with British spellings.\"\r\n      }\r\n   ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/sim/gen-sim-text?client_id={{agent_id_usha}}&is_async=true&is_add=true&item_count=50",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"sim",
										"gen-sim-text"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{agent_id_usha}}"
										},
										{
											"key": "is_async",
											"value": "true"
										},
										{
											"key": "is_add",
											"value": "true"
										},
										{
											"key": "item_count",
											"value": "50"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Generate: usha-personal",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "OpenAI-Auth-Token",
										"value": "{{openai_auth_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"use_history\": true,\r\n   \"openai_model\": \"{{openai_model_sim}}\",\r\n   \"dramatis_personae\": {{usha_personal_dramatis_personae}},\r\n   \"entities\":{{usha_personal_entities}},\r\n   \"topics\":[\r\n      {\r\n         \"category\":\"usha-family-close\",\r\n         \"enabled\": true,\r\n         \"items_multiplier\": 1,\r\n         \"topic\":\"General chat between members of a fictional British family, as seen by our protagonist, Usha Franks.  The chat is a lighthearted exchange between immediate familiy members Usha, Alan, Amy and Ravi - do not include messages from any other people.  Amy and Ravi should refer to Usha and Alan as 'Mum' and 'Dad'.  Topics include anything a family might discuss, but can also include village gossip, family personal and work happenings and milestones, and requests for assistance or favours. Usha and Alan live in the village of Ambridge, while wider family and friends are dotted around local villages Penny Hassett, Loxley Barrett, Darrington, Hollerton, Edgeley, Waterley Cross and Lakey Green.  The main local city is the cathederal city of Felpersham where Usha woks as a partner in Felpersham Law.  The tone of the messages should be informal British English with British spellings.\"\r\n      },\r\n      {\r\n         \"category\":\"usha-family-wide\",\r\n         \"enabled\": true,\r\n         \"items_multiplier\": 1,\r\n         \"topic\":\"General chat between members of a fictional British family, as seen by our protagonist, Usha Franks.  The chat is a lighthearted exchange between immediate familiy members Uaha, Alan, Amy and Ravi and wider family members including Deepak, Shiv and Satya - do not include messages from non-family.  Topics include anything a family might discuss, but can also include village gossip, family personal and work happenings and milestones, and requests for assistance or favours. Usha and Alan live in the village of Ambridge, while wider family and friends are dotted around local villages Penny Hassett, Loxley Barrett, Darrington, Hollerton, Edgeley, Waterley Cross and Lakey Green.  The main local city is the cathederal city of Felpersham where Usha woks as a partner in Felpersham Law.  Message content should be unique and not duplicated.  The tone of the messages should be informal British English with British spellings.\"\r\n      },\r\n      {\r\n         \"category\":\"usha-village\",\r\n         \"enabled\": true,\r\n         \"items_multiplier\": 2,\r\n         \"topic\":\"General chat among residents of the fictional village of Ambridge in in the county of Borsetshire, UK, as seen by our protagonist, Usha Franks. The chat is a mostly lighthearted exchange between residents of Ambridge, covering topics including comings & goings around Ambridge, parking problems, postal service & parcel delivery (problems), recommendations for good tradespeople, social events, local crime and plenty of village gossip.  This chat is among a general village audience rather than one-to-one messages about individual arrangements.  A few of the messages should be of a nature that merits a prompts response, such as a request for assistance or information.  Nearby villages include Penny Hassett, Loxley Barrett, Darrington, Hollerton, Edgeley, Waterley Cross and Lakey Green.  The main local city is the cathederal city of Felpersham.  Some of these locations should occasionally be mentioned in messages.  In addition to the supplied list of people, you should make up identities as needed - the chat forum would contain maybe 50-30 members (although not all of these post messages often).  Message content should be unique and not duplicated.  The tone of the messages should be informal British English with British spelling.\"\r\n      },\r\n      {\r\n         \"category\":\"usha-school-comms\",\r\n         \"enabled\": true,\r\n         \"items_multiplier\": 1,\r\n         \"topic\":\"Messages originating from the school Felpersham Grammar in Felpersham, Borsetshire, UK, where our protagonist, Usha Franks sends her children. All messages are announcements and notices from school leaders or the school office, directed at parents with children at the school.  In addition to the supplied list of people, you should make up identities as needed.  Message content should be unique and not duplicated.  The tone of the messages should be relatively formal British English with British spelling.\"\r\n      },\r\n      {\r\n         \"category\":\"usha-school-parents-chat\",\r\n         \"enabled\": true,\r\n         \"items_multiplier\": 2,\r\n         \"topic\":\"Messenger chat between parents with children attending Felpersham Grammar Scool in Felpersham, Borsetshire, UK, where our protagonist, Usha Franks sends her children.  This is a chat group independent of the school where parents can discuss school and other topcis.  This could include compliments or more often complaints about the school as well as sharing helpful information and coordinating things.  Sometimes the parents group meets up in Felpersham cafes.  There are some occasional jokes and off topic discussion.  Some parents have a less positive outlook than others and tend to complain, while others are more positive - generate a mix of positive and negative comments.  Only parents are in this chat - neither Usha'snor anyone else's children are on it.  Message content should be unique and not duplicated.  The tone of the messages should be informal British English with British spelling.\"\r\n      }\r\n\r\n\r\n   ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/sim/gen-sim-text?client_id={{agent_id_usha}}&is_async=true&is_add=true&item_count=50",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"sim",
										"gen-sim-text"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{agent_id_usha}}"
										},
										{
											"key": "is_async",
											"value": "true"
										},
										{
											"key": "is_add",
											"value": "true"
										},
										{
											"key": "item_count",
											"value": "50"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Last Job (Usha)",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "OpenAI-Auth-Token",
										"value": "{{openai_auth_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/sim/jobs/:job_id?client_id={{agent_id_usha}}",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"sim",
										"jobs",
										":job_id"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{agent_id_usha}}"
										}
									],
									"variable": [
										{
											"key": "job_id",
											"value": "{{last_job_id}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									"console.log(\"AWAG Data/Simulation/Usha\");",
									"console.log(\"function_sanitiseStringForJson: \" + pm.globals.get(\"function_sanitiseStringForJson\"));",
									"",
									"var currentAgent = 'usha'",
									"",
									"pm.variables.set('current_agent', currentAgent);",
									"",
									"",
									"//var currentAgent = pm.variables.get('current_agent');",
									"//console.log(\"currentAgent: \" + currentAgent);",
									"",
									"",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Phoebe",
					"item": [
						{
							"name": "Fetch",
							"item": [
								{
									"name": "Fetch: phoebe-work-fasttrack",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/sim/get-sim-text?client_id={{agent_id_phoebe}}&category=phoebe-work-fasttrack&is_get_all=true",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"sim",
												"get-sim-text"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{agent_id_phoebe}}"
												},
												{
													"key": "category",
													"value": "phoebe-work-fasttrack"
												},
												{
													"key": "is_get_all",
													"value": "true"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Fetch: phoebe-work-manager",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/sim/get-sim-text?client_id={{agent_id_phoebe}}&category=phoebe-work-manager&is_get_all=true",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"sim",
												"get-sim-text"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{agent_id_phoebe}}"
												},
												{
													"key": "category",
													"value": "phoebe-work-manager"
												},
												{
													"key": "is_get_all",
													"value": "true"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Fetch: phoebe-friends-university",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/sim/get-sim-text?client_id={{agent_id_phoebe}}&category=phoebe-friends-university&is_get_all=true",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"sim",
												"get-sim-text"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{agent_id_phoebe}}"
												},
												{
													"key": "category",
													"value": "phoebe-friends-university"
												},
												{
													"key": "is_get_all",
													"value": "true"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Generate: phoebe-work",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "OpenAI-Auth-Token",
										"value": "{{openai_auth_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"use_history\": true,\r\n   \"openai_model\": \"{{openai_model_sim}}\",\r\n   \"dramatis_personae\": {{phoebe_work_dramatis_personae}},\r\n   \"entities\":{{phoebe_work_entities}},\r\n   \"XXopenai_params\":{\r\n      \"temperature\":0.95,\r\n      \"top_p\":0,\r\n      \"frequency_penalty\":0.2,\r\n      \"presence_penalty\":0.2\r\n   },\r\n   \"topics\":[\r\n      {\r\n         \"category\":\"phoebe-work-team\",\r\n         \"enabled\": true,\r\n         \"items_multiplier\": 2,\r\n         \"topic\":\"Company messenger application chat at Brightstone Accountancy Firm, the workplace of our fictional protagonist, Phoebe Aldridge.  This chat is general workplace discussion among members of Phoebe's immediate work team, consisting of her manager and fellow fast-track graduates.  Topics should include discussions related to work in general but not specific client details.  This can include client-related discussions such as requests for help, lunch arrangements, work social events and other topics that you might expect to be discussed in a team within a large London accountancy firm.  While a list of some colleagues and clients is provided, you should also generate fictional names to reference in messages.  Phoebe lives in London, where the company has its main offices.  Message content should be unique and not duplicated.  The tone of the messages should be informal British English with British spellings.\"\r\n      },\r\n      {\r\n         \"category\":\"phoebe-work-fasttrack\",\r\n         \"enabled\": true,\r\n         \"items_multiplier\": 2,\r\n         \"topic\":\"Company messenger application chat at Brightstone Accountancy Firm, the workplace of our fictional protagonist, Phoebe Aldridge.  This chat is workplace discussion relating to the fast track programme that Phoebe is on.  Members of the chat include fast track participants, mentors, and administrators.  Topics should relate to the programme and include requests for advice, discussion of experiences, talk about job rotations, and social gatherings.  Include in the messages some announcements from fast track leadership or administrators; these announcements should range from low importance to high importance/urgent.  While a list of some colleagues and clients is provided, you should also generate fictional names to reference in messages.  Phoebe lives in London, where the company has its main offices.  Message content should be unique and not duplicated.  The tone of the messages should be informal British English with British spellings.\"\r\n      },\r\n      {\r\n         \"category\":\"phoebe-work-manager\",\r\n         \"enabled\": true,\r\n         \"items_multiplier\": 2,\r\n         \"topic\":\"Company messenger application chat at Brightstone Accountancy Firm, the workplace of our fictional protagonist, Phoebe Aldridge.  This chat is workplace discussion between Phoebe and her manager Megan Foster.  Include only messages by Phoebe and Megan in this chat.  Topics should be the usual ones you would expect an employee and manager to discuss.  Messages should range from low importance to high importance/urgent.  While a list of some colleagues and clients is provided, you should also generate fictional names to reference in messages.  Phoebe lives in London, where the company has its main offices; she sometimes needs to travel for work.  Message content should be unique and not duplicated.  The tone of the messages should be informal British English with British spellings.\"\r\n      },\r\n      {\r\n         \"category\":\"phoebe-work-announce\",\r\n         \"enabled\": true,\r\n         \"items_multiplier\": 1,\r\n         \"topic\":\"Company messenger application chat at Brightstone Accountancy Firm, the workplace of our fictional protagonist, Phoebe Aldridge.  This chat is company-wide internal announcements, with messages only coming from senior leadership (or their assistants) or an impersonal announcements account.  Topics include client-related announcements (i.e. new clients, project successes), senior appointments, compliance-related communications, recognising individual successes etc.  Messages should range from low importance to high importance/urgent.  While a list of some colleagues and clients is provided, you should also generate fictional names to reference in messages.  Message content should be unique and not duplicated.  The tone of the messages should be formal British business English with British spellings.\"\r\n      }\r\n   ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/sim/gen-sim-text?client_id={{agent_id_phoebe}}&is_async=true&is_add=true&item_count=50",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"sim",
										"gen-sim-text"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{agent_id_phoebe}}"
										},
										{
											"key": "is_async",
											"value": "true"
										},
										{
											"key": "is_add",
											"value": "true"
										},
										{
											"key": "item_count",
											"value": "50"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Generate: phoebe-personal",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "OpenAI-Auth-Token",
										"value": "{{openai_auth_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"use_history\": true,\r\n   \"openai_model\": \"{{openai_model_sim}}\",\r\n   \"dramatis_personae\": {{phoebe_personal_dramatis_personae}},\r\n   \"entities\":{{phoebe_personal_entities}},\r\n   \"topics\":[\r\n      {\r\n         \"category\":\"phoebe-friends-university\",\r\n         \"enabled\": true,\r\n         \"items_multiplier\": 1,\r\n         \"topic\":\"General chat between a group of friends who all studied together at Borsetshire University and graduated two years ago.  This close group of friends stays in touch - mainly via this chat - and sometimes organises meetings.  They discuss how each other’s careers and personal lives are doing.  Topics are wide-ranging, including general jokes and light chat in addition to talking about what they are doing or arranging to meet.  Message content should be unique and not duplicated. The tone of the messages should be informal British English with British spellings.\"\r\n      },\r\n      {\r\n         \"category\":\"phoebe-friends-work\",\r\n         \"enabled\": true,\r\n         \"items_multiplier\": 2,\r\n         \"topic\":\"General chat between a small group of friends who currently work together at Brightstone Accountancy Firm, the workplace of our fictional protagonist, Phoebe Aldridge.  This chat is outside of normal work channels and can include arrangements to meet up and office gossip as well as general jokes and light chat.  Message content should be unique and not duplicated. The tone of the messages should be informal British English with British spellings.\"\r\n      },\r\n      {\r\n         \"category\":\"phoebe-family-chat\",\r\n         \"enabled\": true,\r\n         \"items_multiplier\": 2,\r\n         \"topic\":\"General chat between members of a fictional British family, as seen by our protagonist, Phoebe Aldridge.  The chat is a lighthearted exchange between immediate family members Phoebe, Brian, Jennifer, Debbie, Adam, Kate and Alice, and also wider family members.  Do not include messages from non-family.  Topics include anything a family might discuss, but can also include village gossip, family personal and work happenings and milestones, and requests for assistance or favours. While Phoebe lives in London now, most of the family live in the village of Ambridge, while wider family and friends are dotted around local villages Penny Hassett, Loxley Barrett, Darrington, Hollerton, Edgeley, Waterley Cross and Lakey Green.  The main local city is the cathedral city of Felpersham where Usha works as a partner in Felpersham Law.  Message content should be unique and not duplicated.  The tone of the messages should be informal British English with British spellings.\"\r\n      }\r\n   ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/sim/gen-sim-text?client_id={{agent_id_phoebe}}&is_async=true&is_add=true&item_count=50",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"sim",
										"gen-sim-text"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{agent_id_phoebe}}"
										},
										{
											"key": "is_async",
											"value": "true"
										},
										{
											"key": "is_add",
											"value": "true"
										},
										{
											"key": "item_count",
											"value": "50"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Last Job (Phoebe)",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "OpenAI-Auth-Token",
										"value": "{{openai_auth_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/sim/jobs/:job_id?client_id={{agent_id_usha}}",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"sim",
										"jobs",
										":job_id"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{agent_id_usha}}"
										}
									],
									"variable": [
										{
											"key": "job_id",
											"value": "{{last_job_id}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Kenton",
					"item": [
						{
							"name": "kenton-work-company-general",
							"item": [
								{
									"name": "kenton-work-company-general G&A",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "OpenAI-Auth-Token",
												"value": "{{openai_auth_token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"category\":\"kenton-work-company-general\",\r\n   \"items\":5,\r\n   \"topic\":\"{{kenton_work_company_general_topic}}\",\r\n   \"dramatis_personae\":{{kenton_work_dramatis_personae}},\r\n   \"entities\":{{kenton_work_entities}}\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/sim/gen-and-add-dummy-text?client_id={{agent_id_kenton}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"sim",
												"gen-and-add-dummy-text"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{agent_id_kenton}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "kenton-work-company-general G",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "OpenAI-Auth-Token",
												"value": "{{openai_auth_token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"category\":\"kenton-work-company-general\",\r\n   \"items\":5,\r\n   \"topic\":\"{{kenton_work_company_general_topic}}\",\r\n   \"dramatis_personae\":{{kenton_work_dramatis_personae}},\r\n   \"entities\":{{kenton_work_entities}}\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/sim/gen-dummy-text?client_id={{agent_id_kenton}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"sim",
												"gen-dummy-text"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{agent_id_kenton}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "kenton-work-company-general F",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/sim/get-all-dummy-texts?client_id={{agent_id_kenton}}&category=kenton-work-company-general",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"sim",
												"get-all-dummy-texts"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{agent_id_kenton}}"
												},
												{
													"key": "category",
													"value": "kenton-work-company-general"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "kenton-work-company-announce",
							"item": [
								{
									"name": "kenton-work-company-announce G&A",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "OpenAI-Auth-Token",
												"value": "{{openai_auth_token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"category\":\"kenton-work-company-announce\",\r\n   \"items\":15,\r\n   \"topic\":\"{{kenton_work_company_announce_topic}}\",\r\n   \"dramatis_personae\":{{kenton_work_dramatis_personae}},\r\n   \"entities\":{{kenton_work_entities}}\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/sim/gen-and-add-dummy-text?client_id={{agent_id_kenton}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"sim",
												"gen-and-add-dummy-text"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{agent_id_kenton}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "kenton-work-company-announce G",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "OpenAI-Auth-Token",
												"value": "{{openai_auth_token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"category\":\"kenton-work-company-announce\",\r\n   \"items\":5,\r\n   \"topic\":\"{{kenton_work_company_announce_topic}}\",\r\n   \"dramatis_personae\":{{kenton_work_dramatis_personae}},\r\n   \"entities\":{{kenton_work_entities}}\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/sim/gen-dummy-text?client_id={{agent_id_kenton}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"sim",
												"gen-dummy-text"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{agent_id_kenton}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "kenton-work-company-announce F",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/sim/get-all-dummy-texts?client_id={{agent_id_kenton}}&category=kenton-work-company-announce",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"sim",
												"get-all-dummy-texts"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{agent_id_kenton}}"
												},
												{
													"key": "category",
													"value": "kenton-work-company-announce"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "kenton-work-team-general",
							"item": [
								{
									"name": "kenton-work-team-general G&A",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "OpenAI-Auth-Token",
												"value": "{{openai_auth_token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"category\":\"kenton-work-team-general\",\r\n   \"items\":5,\r\n   \"topic\":\"{{kenton_work_team_general_topic}}\",\r\n   \"dramatis_personae\":{{kenton_work_dramatis_personae}},\r\n   \"entities\":{{kenton_work_entities}}\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/sim/gen-and-add-dummy-text?client_id={{agent_id_kenton}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"sim",
												"gen-and-add-dummy-text"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{agent_id_kenton}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "kenton-work-team-general G",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "OpenAI-Auth-Token",
												"value": "{{openai_auth_token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"category\":\"kenton-work-team-general\",\r\n   \"items\":5,\r\n   \"topic\":\"{{kenton_work_team_general_topic}}\",\r\n   \"dramatis_personae\":{{kenton_work_dramatis_personae}},\r\n   \"entities\":{{kenton_work_entities}}\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/sim/gen-dummy-text?client_id={{agent_id_kenton}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"sim",
												"gen-dummy-text"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{agent_id_kenton}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "kenton-work-team-general F",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/sim/get-all-dummy-texts?client_id={{agent_id_kenton}}&category=kenton-work-team-general",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"sim",
												"get-all-dummy-texts"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{agent_id_kenton}}"
												},
												{
													"key": "category",
													"value": "kenton-work-team-general"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "kenton-work-team-manager",
							"item": [
								{
									"name": "kenton-work-team-manager G&A",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "OpenAI-Auth-Token",
												"value": "{{openai_auth_token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"category\":\"kenton-work-team-manager\",\r\n   \"items\":12,\r\n   \"topic\":\"{{kenton_work_team_manager_topic}}\",\r\n   \"dramatis_personae\":{{kenton_work_dramatis_personae}},\r\n   \"entities\":{{kenton_work_entities}}\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/sim/gen-and-add-dummy-text?client_id={{agent_id_kenton}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"sim",
												"gen-and-add-dummy-text"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{agent_id_kenton}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "kenton-work-team-manager G",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "OpenAI-Auth-Token",
												"value": "{{openai_auth_token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"category\":\"kenton-work-team-manager\",\r\n   \"items\":5,\r\n   \"topic\":\"{{kenton_work_team_manager_topic}}\",\r\n   \"dramatis_personae\":{{kenton_work_dramatis_personae}},\r\n   \"entities\":{{kenton_work_entities}}\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/sim/gen-dummy-text?client_id={{agent_id_kenton}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"sim",
												"gen-dummy-text"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{agent_id_kenton}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "kenton-work-team-manager F",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/sim/get-all-dummy-texts?client_id={{agent_id_kenton}}&category=kenton-work-team-manager",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"sim",
												"get-all-dummy-texts"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{agent_id_kenton}}"
												},
												{
													"key": "category",
													"value": "kenton-work-team-manager"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "kenton-work-team-client",
							"item": [
								{
									"name": "kenton-work-team-client G&A",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "OpenAI-Auth-Token",
												"value": "{{openai_auth_token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"category\":\"kenton-work-team-client\",\r\n   \"items\":8,\r\n   \"topic\":\"{{kenton_work_team_client_topic}}\",\r\n   \"dramatis_personae\":{{kenton_work_dramatis_personae}},\r\n   \"entities\":{{kenton_work_entities}}\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/sim/gen-and-add-dummy-text?client_id={{agent_id_kenton}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"sim",
												"gen-and-add-dummy-text"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{agent_id_kenton}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "kenton-work-team-client G",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "OpenAI-Auth-Token",
												"value": "{{openai_auth_token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"category\":\"kenton-work-team-client\",\r\n   \"items\":5,\r\n   \"topic\":\"{{kenton_work_team_client_topic}}\",\r\n   \"dramatis_personae\":{{kenton_work_dramatis_personae}},\r\n   \"entities\":{{kenton_work_entities}}\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/sim/gen-dummy-text?client_id={{agent_id_kenton}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"sim",
												"gen-dummy-text"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{agent_id_kenton}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "kenton-work-team-client F",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/sim/get-all-dummy-texts?client_id={{agent_id_kenton}}&category=kenton-work-team-client",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"sim",
												"get-all-dummy-texts"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{agent_id_kenton}}"
												},
												{
													"key": "category",
													"value": "kenton-work-team-client"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "kenton-golf",
							"item": [
								{
									"name": "kenton-golf G&A",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "OpenAI-Auth-Token",
												"value": "{{openai_auth_token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"category\":\"kenton-golf\",\r\n   \"items\":8,\r\n   \"topic\":\"{{kenton_golf_topic}}\",\r\n   \"dramatis_personae\":{{kenton_golf_dramatis_personae}},\r\n   \"entities\":{{kenton_golf_entities}}\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/sim/gen-and-add-dummy-text?client_id={{agent_id_kenton}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"sim",
												"gen-and-add-dummy-text"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{agent_id_kenton}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "kenton-golf G",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "OpenAI-Auth-Token",
												"value": "{{openai_auth_token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"category\":\"kenton-golf\",\r\n   \"items\":10,\r\n   \"topic\":\"{{kenton_golf_topic}}\",\r\n   \"dramatis_personae\":{{kenton_golf_dramatis_personae}},\r\n   \"entities\":{{kenton_golf_entities}}\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/sim/gen-dummy-text?client_id={{agent_id_kenton}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"sim",
												"gen-dummy-text"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{agent_id_kenton}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "kenton-golf F",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/sim/get-all-dummy-texts?client_id={{agent_id_kenton}}&category=kenton-golf",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"sim",
												"get-all-dummy-texts"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{agent_id_kenton}}"
												},
												{
													"key": "category",
													"value": "kenton-golf"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "kenton-football",
							"item": [
								{
									"name": "kenton-football G&A",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "OpenAI-Auth-Token",
												"value": "{{openai_auth_token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"category\":\"kenton-football\",\r\n   \"items\":8,\r\n   \"topic\":\"{{kenton_football_topic}}\",\r\n   \"dramatis_personae\":{{kenton_football_dramatis_personae}},\r\n   \"entities\":{{kenton_football_entities}}\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/sim/gen-and-add-dummy-text?client_id={{agent_id_kenton}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"sim",
												"gen-and-add-dummy-text"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{agent_id_kenton}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "kenton-football G",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "OpenAI-Auth-Token",
												"value": "{{openai_auth_token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"category\":\"kenton-football\",\r\n   \"items\":5,\r\n   \"topic\":\"{{kenton_football_topic}}\",\r\n   \"dramatis_personae\":{{kenton_football_dramatis_personae}},\r\n   \"entities\":{{kenton_football_entities}}\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/sim/gen-dummy-text?client_id={{agent_id_kenton}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"sim",
												"gen-dummy-text"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{agent_id_kenton}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "kenton-football F",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/sim/get-all-dummy-texts?client_id={{agent_id_kenton}}&category=kenton-football",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"sim",
												"get-all-dummy-texts"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{agent_id_kenton}}"
												},
												{
													"key": "category",
													"value": "kenton-football"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "kenton-friends",
							"item": [
								{
									"name": "kenton-friends G&A",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "OpenAI-Auth-Token",
												"value": "{{openai_auth_token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"category\":\"kenton-friends\",\r\n   \"items\":8,\r\n   \"topic\":\"{{kenton_friends_topic}}\",\r\n   \"dramatis_personae\":{{kenton_personal_dramatis_personae}},\r\n   \"entities\":{{kenton_personal_entities}}\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/sim/gen-and-add-dummy-text?client_id={{agent_id_kenton}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"sim",
												"gen-and-add-dummy-text"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{agent_id_kenton}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "kenton-friends G",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "OpenAI-Auth-Token",
												"value": "{{openai_auth_token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"category\":\"kenton-friends\",\r\n   \"items\":5,\r\n   \"topic\":\"{{kenton_friends_topic}}\",\r\n   \"dramatis_personae\":{{kenton_personal_dramatis_personae}},\r\n   \"entities\":{{kenton_personal_entities}}\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/sim/gen-dummy-text?client_id={{agent_id_kenton}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"sim",
												"gen-dummy-text"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{agent_id_kenton}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "kenton-friends F",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/sim/get-all-dummy-texts?client_id={{agent_id_kenton}}&category=kenton-friends",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"sim",
												"get-all-dummy-texts"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{agent_id_kenton}}"
												},
												{
													"key": "category",
													"value": "kenton-friends"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "kenton-family",
							"item": [
								{
									"name": "kenton-family G&A",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "OpenAI-Auth-Token",
												"value": "{{openai_auth_token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"category\":\"kenton-family\",\r\n   \"items\":8,\r\n   \"topic\":\"{{kenton_family_topic}}\",\r\n   \"dramatis_personae\":{{kenton_personal_dramatis_personae}},\r\n   \"entities\":{{kenton_personal_entities}}\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/sim/gen-and-add-dummy-text?client_id={{agent_id_kenton}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"sim",
												"gen-and-add-dummy-text"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{agent_id_kenton}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "kenton-family G",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "OpenAI-Auth-Token",
												"value": "{{openai_auth_token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"category\":\"kenton-family\",\r\n   \"items\":5,\r\n   \"topic\":\"{{kenton_family_topic}}\",\r\n   \"dramatis_personae\":{{kenton_personal_dramatis_personae}},\r\n   \"entities\":{{kenton_personal_entities}}\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/sim/gen-dummy-text?client_id={{agent_id_kenton}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"sim",
												"gen-dummy-text"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{agent_id_kenton}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "kenton-family F",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/sim/get-all-dummy-texts?client_id={{agent_id_kenton}}&category=kenton-family",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"sim",
												"get-all-dummy-texts"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{agent_id_kenton}}"
												},
												{
													"key": "category",
													"value": "kenton-family"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "kenton-kathy",
							"item": [
								{
									"name": "kenton-kathy G&A",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "OpenAI-Auth-Token",
												"value": "{{openai_auth_token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"category\":\"kenton-kathy\",\r\n   \"items\":8,\r\n   \"topic\":\"{{kenton_kathy_topic}}\",\r\n   \"dramatis_personae\":{{kenton_personal_dramatis_personae}},\r\n   \"entities\":{{kenton_personal_entities}}\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/sim/gen-and-add-dummy-text?client_id={{agent_id_kenton}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"sim",
												"gen-and-add-dummy-text"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{agent_id_kenton}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "kenton-kathy G",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "OpenAI-Auth-Token",
												"value": "{{openai_auth_token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"category\":\"kenton-kathy\",\r\n   \"items\":5,\r\n   \"topic\":\"{{kenton_kathy_topic}}\",\r\n   \"dramatis_personae\":{{kenton_personal_dramatis_personae}},\r\n   \"entities\":{{kenton_personal_entities}}\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/sim/gen-dummy-text?client_id={{agent_id_kenton}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"sim",
												"gen-dummy-text"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{agent_id_kenton}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "kenton-kathy F",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/sim/get-all-dummy-texts?client_id={{agent_id_kenton}}&category=kenton-kathy",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"sim",
												"get-all-dummy-texts"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{agent_id_kenton}}"
												},
												{
													"key": "category",
													"value": "kenton-kathy"
												}
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"/*",
							"function sanitiseStringForJson(str) {",
							"",
							"    return str",
							"        .replace(/\\\\/g, '\\\\\\\\') // Escape backslashes",
							"        .replace(/\"/g, '\\\\\"') // Escape double quotes",
							"        .replace(/\\n/g, '\\\\n') // Escape newlines",
							"        .replace(/\\r/g, '\\\\r') // Escape carriage returns",
							"        .replace(/\\t/g, '\\\\t') // Escape tabs",
							"        .replace(/\\f/g, '\\\\f') // Escape form feeds",
							"        //.replace(/\\b/g, '\\\\b'); // Escape backspaces",
							"}",
							"*/",
							"",
							"",
							"//pm.environment.set(\"t_topic_sanitised\", sanitiseStringForJson(pm.environment.get(\"t_topic\")));",
							"",
							"",
							"console.log(\"AWAG Data/Simulation\");",
							"console.log(\"function_sanitiseStringForJson: \" + pm.globals.get(\"function_sanitiseStringForJson\"));",
							"",
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"if (jsonData && jsonData.job_id) {\r",
							"    pm.collectionVariables.set(\"last_job_id\", jsonData.job_id);\r",
							"}\r",
							""
						]
					}
				}
			]
		},
		{
			"name": "Training",
			"item": [
				{
					"name": "_ Base",
					"item": [
						{
							"name": "Mode 2",
							"item": [
								{
									"name": "Extra",
									"item": [
										{
											"name": "Query Dataset (from Files) Mode 2 Base",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url_prefix}}/api/v1/awag/data/train/datasets/:dataset_type/:dataset_id?client_id={{current_agent_id}}&count=0",
													"host": [
														"{{url_prefix}}"
													],
													"path": [
														"api",
														"v1",
														"awag",
														"data",
														"train",
														"datasets",
														":dataset_type",
														":dataset_id"
													],
													"query": [
														{
															"key": "client_id",
															"value": "{{current_agent_id}}"
														},
														{
															"key": "count",
															"value": "0"
														}
													],
													"variable": [
														{
															"key": "dataset_type",
															"value": "from_files"
														},
														{
															"key": "dataset_id",
															"value": "{{current_dataset_id}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Query Dataset Item (from Files) Mode 2 Base",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url_prefix}}/api/v1/awag/data/train/datasets/:dataset_type/:dataset_id/items/:item_id?client_id={{current_agent_id}}&detail=true",
													"host": [
														"{{url_prefix}}"
													],
													"path": [
														"api",
														"v1",
														"awag",
														"data",
														"train",
														"datasets",
														":dataset_type",
														":dataset_id",
														"items",
														":item_id"
													],
													"query": [
														{
															"key": "client_id",
															"value": "{{current_agent_id}}"
														},
														{
															"key": "detail",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "dataset_type",
															"value": "from_files"
														},
														{
															"key": "dataset_id",
															"value": "{{current_dataset_id}}"
														},
														{
															"key": "item_id",
															"value": "02121a98-51d6-4db4-aa68-90c601b613a1~mode2~classification~interested-not"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Dataset (from Files) Mode 2 Base",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url_prefix}}/api/v1/awag/data/train/datasets/:dataset_type/:dataset_id?client_id={{current_agent_id}}",
													"host": [
														"{{url_prefix}}"
													],
													"path": [
														"api",
														"v1",
														"awag",
														"data",
														"train",
														"datasets",
														":dataset_type",
														":dataset_id"
													],
													"query": [
														{
															"key": "client_id",
															"value": "{{current_agent_id}}"
														},
														{
															"key": "confirm",
															"value": "true",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "dataset_type",
															"value": "from_files"
														},
														{
															"key": "dataset_id",
															"value": "{{current_dataset_id}}"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Populate Dataset (from Files) Mode 2 Base",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"server_path\": \"/data/prod/awag/fine-tuning/base/{{current_mode}}\",\r\n    \"max_items\": 0,\r\n    \"file_regexp\": null,\r\n    \"is_ignore_existing\": false,\r\n    \"update_messages_mode\": \"{{current_mode}}\",\r\n    \"delete_persona\": true\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/train/datasets/:dataset_type/:dataset_id?client_id={{current_agent_id}}&async=false",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"train",
												"datasets",
												":dataset_type",
												":dataset_id"
											],
											"query": [
												{
													"key": "itemId",
													"value": "052388c2-b534-4c38-ba1c-1645cc509e1b",
													"disabled": true
												},
												{
													"key": "lastNHours",
													"value": "1",
													"disabled": true
												},
												{
													"key": "client_id",
													"value": "{{current_agent_id}}"
												},
												{
													"key": "async",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "dataset_type",
													"value": "from_files"
												},
												{
													"key": "dataset_id",
													"value": "{{current_dataset_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Upload OpenAI File  (from Files) Mode 2 Base",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();\r",
													"let storedFileId = responseJson.stored_file_id;\r",
													"let currentMode = pm.environment.get(\"current_mode\");\r",
													"\r",
													"//let variableName = `last_stored_file_id_${currentMode}`;\r",
													"let variableName = `last_stored_file_id`;\r",
													"\r",
													"pm.environment.set(variableName, storedFileId);\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"dataset_id\": \"{{current_dataset_id}}\",\r\n    \"dataset_type\": \"from_files\",\r\n    \"info\": \"AwAg Base [{{current_mode}}] ({{current_date}})\",\r\n    \"additionalDetails\": {},\r\n    \"tag\": \"base-{{current_mode}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/train/files?client_id={{current_agent_id}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"train",
												"files"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Query File (from Files) Mode 2 Base",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/train/files/:file_id?client_id={{current_agent_id}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"train",
												"files",
												":file_id"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "tag",
													"value": "ft-test1",
													"disabled": true
												},
												{
													"key": "include_deleted",
													"value": "true",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "file_id",
													"value": "{{last_stored_file_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create OpenAI Job Mode 2 Base",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"tag\": \"base-{{current_mode}}\",\r\n    \"info\": \"AwAg Base Training [{{current_mode}}] '{{current_date_MMDD}}' ({{current_date}}) using model: {{base_openai_model}}\",\r\n    \"additionalDetails\": {},\r\n    \"file_id\": \"{{last_stored_file_id}}\",\r\n    \"model_id\": \"{{base_openai_model}}\",\r\n    \"model_idX\": \"ft:gpt-3.5-turbo-1106:hylozoical:base-kenton-0221:8ug1tjME\",\r\n    \"n_epochsXX\": 8,\r\n    \"suffix\" : \"base-{{current_mode}}-{{current_date_MMDD}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/train/jobs?client_id={{current_agent_id}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"train",
												"jobs"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"packages": {},
										"exec": [
											"pm.variables.set('current_mode', 'mode2');\r",
											"\r",
											"pm.variables.set('current_dataset_id', pm.variables.get(\"dataset_id_mode2\"));\r",
											"\r",
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"packages": {},
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Mode 3",
							"item": [
								{
									"name": "Extra",
									"item": [
										{
											"name": "Query Dataset (from Files) Mode 3 Base",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url_prefix}}/api/v1/awag/data/train/datasets/:dataset_type/:dataset_id?client_id={{current_agent_id}}&count=0",
													"host": [
														"{{url_prefix}}"
													],
													"path": [
														"api",
														"v1",
														"awag",
														"data",
														"train",
														"datasets",
														":dataset_type",
														":dataset_id"
													],
													"query": [
														{
															"key": "client_id",
															"value": "{{current_agent_id}}"
														},
														{
															"key": "count",
															"value": "0"
														}
													],
													"variable": [
														{
															"key": "dataset_type",
															"value": "from_files"
														},
														{
															"key": "dataset_id",
															"value": "{{current_dataset_id}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Query Dataset Item (from Files) Mode 3 Base",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url_prefix}}/api/v1/awag/data/train/datasets/:dataset_type/:dataset_id/items/:item_id?client_id={{current_agent_id}}&detail=true",
													"host": [
														"{{url_prefix}}"
													],
													"path": [
														"api",
														"v1",
														"awag",
														"data",
														"train",
														"datasets",
														":dataset_type",
														":dataset_id",
														"items",
														":item_id"
													],
													"query": [
														{
															"key": "client_id",
															"value": "{{current_agent_id}}"
														},
														{
															"key": "detail",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "dataset_type",
															"value": "from_files"
														},
														{
															"key": "dataset_id",
															"value": "{{current_dataset_id}}"
														},
														{
															"key": "item_id",
															"value": "02121a98-51d6-4db4-aa68-90c601b613a1~mode3~classification~interested-not"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Dataset (from Files) Mode 3 Base",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url_prefix}}/api/v1/awag/data/train/datasets/:dataset_type/:dataset_id?client_id={{current_agent_id}}",
													"host": [
														"{{url_prefix}}"
													],
													"path": [
														"api",
														"v1",
														"awag",
														"data",
														"train",
														"datasets",
														":dataset_type",
														":dataset_id"
													],
													"query": [
														{
															"key": "client_id",
															"value": "{{current_agent_id}}"
														},
														{
															"key": "confirm",
															"value": "true",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "dataset_type",
															"value": "from_files"
														},
														{
															"key": "dataset_id",
															"value": "{{current_dataset_id}}"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Populate Dataset (from Files) Mode 3 Base",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"server_path\": \"/data/prod/awag/fine-tuning/base/{{current_mode}}\",\r\n    \"max_items\": 0,\r\n    \"file_regexp\": null,\r\n    \"is_ignore_existing\": false,\r\n    \"update_messages_mode\": \"{{current_mode}}\",\r\n    \"delete_persona\": true\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/train/datasets/:dataset_type/:dataset_id?client_id={{current_agent_id}}&async=false",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"train",
												"datasets",
												":dataset_type",
												":dataset_id"
											],
											"query": [
												{
													"key": "itemId",
													"value": "052388c2-b534-4c38-ba1c-1645cc509e1b",
													"disabled": true
												},
												{
													"key": "lastNHours",
													"value": "1",
													"disabled": true
												},
												{
													"key": "client_id",
													"value": "{{current_agent_id}}"
												},
												{
													"key": "async",
													"value": "false"
												}
											],
											"variable": [
												{
													"key": "dataset_type",
													"value": "from_files"
												},
												{
													"key": "dataset_id",
													"value": "{{current_dataset_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Upload OpenAI File  (from Files) Mode 3 Base",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();\r",
													"let storedFileId = responseJson.stored_file_id;\r",
													"let currentMode = pm.environment.get(\"current_mode\");\r",
													"\r",
													"//let variableName = `last_stored_file_id_${currentMode}`;\r",
													"let variableName = `last_stored_file_id`;\r",
													"\r",
													"pm.environment.set(variableName, storedFileId);\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"dataset_id\": \"{{current_dataset_id}}\",\r\n    \"dataset_type\": \"from_files\",\r\n    \"info\": \"AwAg Base [{{current_mode}}] ({{current_date}})\",\r\n    \"additionalDetails\": {},\r\n    \"tag\": \"base-{{current_mode}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/train/files?client_id={{current_agent_id}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"train",
												"files"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Query File (from Files) Mode 3 Base",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/train/files/:file_id?client_id={{current_agent_id}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"train",
												"files",
												":file_id"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "tag",
													"value": "ft-test1",
													"disabled": true
												},
												{
													"key": "include_deleted",
													"value": "true",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "file_id",
													"value": "{{last_stored_file_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create OpenAI Job Mode 3 Base",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"tag\": \"base-{{current_mode}}\",\r\n    \"info\": \"AwAg Base Training [{{current_mode}}] '{{current_date_MMDD}}' ({{current_date}}) using model: {{base_openai_model}}\",\r\n    \"additionalDetails\": {},\r\n    \"file_id\": \"{{last_stored_file_id}}\",\r\n    \"model_id\": \"{{base_openai_model}}\",\r\n    \"model_idX\": \"ft:gpt-3.5-turbo-1106:hylozoical:base-kenton-0221:8ug1tjME\",\r\n    \"n_epochsXX\": 8,\r\n    \"suffix\" : \"base-{{current_mode}}-{{current_date_MMDD}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/train/jobs?client_id={{current_agent_id}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"train",
												"jobs"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"packages": {},
										"exec": [
											"pm.variables.set('current_mode', 'mode3');\r",
											"\r",
											"pm.variables.set('current_dataset_id', pm.variables.get(\"dataset_id_mode3\"));\r",
											"\r",
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"packages": {},
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Sync Files Base",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/train/files/sync?client_id={{current_agent_id}}",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"train",
										"files",
										"sync"
									],
									"query": [
										{
											"key": "tag",
											"value": "ft-test1",
											"disabled": true
										},
										{
											"key": "client_id",
											"value": "{{current_agent_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete File Base",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/train/files/:file_id?client_id={{current_agent_id}}",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"train",
										"files",
										":file_id"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										}
									],
									"variable": [
										{
											"key": "file_id",
											"value": "file-uvR5460mlOKnuFSHwDjCweg8"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Sync Jobs Base",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/train/jobs/sync?client_id={{current_agent_id}}",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"train",
										"jobs",
										"sync"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "tag",
											"value": "ft-test1",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Query Jobs Base",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/train/jobs?client_id={{current_agent_id}}",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"train",
										"jobs"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "tag",
											"value": "base-kenton",
											"disabled": true
										},
										{
											"key": "include_deleted",
											"value": "true",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Sync Models Base",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/train/models/sync?client_id={{current_agent_id}}&presync=true",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"train",
										"models",
										"sync"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "tag",
											"value": "ft-test1",
											"disabled": true
										},
										{
											"key": "presync",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Query Models Base",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/train/models?client_id={{current_agent_id}}&simple=true",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"train",
										"models"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "tag",
											"value": "ft-test3",
											"disabled": true
										},
										{
											"key": "include_deleted",
											"value": "true",
											"disabled": true
										},
										{
											"key": "simple",
											"value": "true"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									"console.log(\"AWAG Data/Training/_Base\");\r",
									"\r",
									"var currentAgent = 'none'\r",
									"\r",
									"pm.variables.set('current_agent_id', pm.environment.get(\"agent_id_dev\"));\r",
									"\r",
									"pm.variables.set('dataset_id_mode2', 'base_mode2');\r",
									"pm.variables.set('dataset_id_mode3', 'base_mode3');\r",
									"\r",
									"pm.variables.set('base_openai_model', 'gpt-3.5-turbo-1106');\r",
									"\r",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Susan",
					"item": [
						{
							"name": "Generate",
							"item": [
								{
									"name": "Generate: Training Sim Content (Susan)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"console.log(\"AWAG Data/Training/Susan/X\");\r",
													"\r",
													"var currentAgent = pm.variables.get('current_agent');\r",
													"console.log(\"currentAgent: \" + currentAgent);\r",
													"\r",
													"var tTopicCurrentAgent = pm.variables.get(\"t_topic_base_sanitised\") + \"\";   // Allow room for modifications\r",
													"pm.variables.set('t_topic_current_agent', tTopicCurrentAgent);\r",
													"console.log(\"t_topic_current_agent: \" + tTopicCurrentAgent);\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "OpenAI-Auth-Token",
												"value": "{{openai_auth_token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"use_history\": true,\r\n   \"openai_model\": \"{{openai_model_sim}}\",\r\n   \"openai_params\":{{openai_params_sim}},\r\n   \"dramatis_personae\": null,\r\n   \"entities\": null,\r\n   \"topics\":[\r\n      {\r\n         \"category\":\"{{current_agent}}-t\",\r\n         \"enabled\": true,\r\n         \"items_multiplier\":1,\r\n         \"topic\":\"{{t_topic_current_agent}}\"\r\n      }\r\n   ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/sim/gen-sim-text?client_id={{current_agent_id}}&is_add=true&item_count=15",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"sim",
												"gen-sim-text"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}"
												},
												{
													"key": "is_async",
													"value": "true",
													"disabled": true
												},
												{
													"key": "is_add",
													"value": "true"
												},
												{
													"key": "item_count",
													"value": "15"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate: Evaluation Training Items [mode2] (Susan)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"console.log(\"AWAG Data/Training/Susan/Y\");\r",
													"\r",
													"var currentAgent = pm.variables.get('current_agent');\r",
													"console.log(\"currentAgent: \" + currentAgent);\r",
													"\r",
													"var personaVariableName = `persona_json_${currentAgent}`;\r",
													"\r",
													"var currentPersona = pm.environment.get(personaVariableName);\r",
													"console.log(\"currentPersona: \" + currentPersona);\r",
													"\r",
													"pm.variables.set('current_persona', currentPersona);\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"mode\": \"mode2\",\r\n   \"model\":\"{{openai_model_sim}}\",\r\n   \"modelY\":\"gpt-3.5-turbo-0613\",\r\n   \"modelX\":\"ft:gpt-3.5-turbo-1106:hylozoical:base-kenton-0221:8ug1tjME\",\r\n   \"modelZ\":\"ft:gpt-3.5-turbo-1106:hylozoical:ext-kenton-0229:8xestEEA\",\r\n   \"server_path\":\"/data/dev/awag/fine-tuning/generated\",\r\n   \"quantity\":15,\r\n   \"category\":\"{{current_agent}}-t\",\r\n   \"openai_params\":{},\r\n   \"persona\":{{current_persona}},\r\n   \"perspectives\":[{{perspective_json_classification}}],\r\n   \"classifications\":[\r\n        {\r\n            \"name\":\"work-pers\",\r\n            \"desc\":\"Does this item relate to my work or personal life?\",\r\n            \"available\":[\r\n                \"work\",\r\n                \"personal\"\r\n            ]\r\n        },\r\n        {\r\n            \"name\":\"urgency\",\r\n            \"desc\":\"Is this item in relation to something that I think is urgent?\",\r\n            \"available\":[\r\n                \"urgent\",\r\n                \"not\"\r\n            ]\r\n        },\r\n        {\r\n            \"name\":\"work-logistics\",\r\n            \"desc\":\"Is this item related to logistics at work?\",\r\n            \"available\":[\r\n                \"logistics\",\r\n                \"not\"\r\n            ]\r\n        },\r\n        {\r\n            \"name\":\"tennis\",\r\n            \"desc\":\"Is this item related to my hobby/interest of Tennis?\",\r\n            \"available\":[\r\n                \"tennis\",\r\n                \"not\"\r\n            ]\r\n        },\r\n        {\r\n            \"name\":\"interested\",\r\n            \"desc\":\"Am I interested in this item, from a work or a personal perspective?\",\r\n            \"available\":[\r\n                \"work\",\r\n                \"personal\",\r\n                \"not\"\r\n            ]\r\n        },\r\n        {\r\n            \"name\":\"work-relevant\",\r\n            \"desc\":\"Is this item work related and relevant to my work tasks?\",\r\n            \"available\":[\r\n                \"relevant\",\r\n                \"not\"\r\n            ]\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/gentrain/eval?client_id={{current_agent_id}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"gentrain",
												"eval"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate: Evaluation Training Items [mode3] (Susan)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"console.log(\"AWAG Data/Training/Susan/Y\");\r",
													"\r",
													"var currentAgent = pm.variables.get('current_agent');\r",
													"console.log(\"currentAgent: \" + currentAgent);\r",
													"\r",
													"var personaVariableName = `persona_json_${currentAgent}`;\r",
													"\r",
													"var currentPersona = pm.environment.get(personaVariableName);\r",
													"console.log(\"currentPersona: \" + currentPersona);\r",
													"\r",
													"pm.variables.set('current_persona', currentPersona);\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"mode\": \"mode3\",\r\n   \"model\":\"{{openai_model_sim}}\",\r\n   \"modelY\":\"gpt-3.5-turbo-0613\",\r\n   \"modelX\":\"ft:gpt-3.5-turbo-1106:hylozoical:base-kenton-0221:8ug1tjME\",\r\n   \"modelZ\":\"ft:gpt-3.5-turbo-1106:hylozoical:ext-kenton-0229:8xestEEA\",\r\n   \"server_path\":\"/data/awag/fine-tuning/generated\",\r\n   \"quantity\":15,\r\n   \"category\":\"{{current_agent}}-t\",\r\n   \"openai_params\":{},\r\n   \"persona\":{{current_persona}},\r\n   \"perspectives\":[{{perspective_json_classification}}],\r\n   \"classifications\":[\r\n        {\r\n            \"name\":\"work-pers\",\r\n            \"desc\":\"Does this item relate to my work or personal life?\",\r\n            \"available\":[\r\n                \"work\",\r\n                \"personal\"\r\n            ]\r\n        },\r\n        {\r\n            \"name\":\"urgency\",\r\n            \"desc\":\"Is this item in relation to something that I think is urgent?\",\r\n            \"available\":[\r\n                \"urgent\",\r\n                \"not\"\r\n            ]\r\n        },\r\n        {\r\n            \"name\":\"work-logistics\",\r\n            \"desc\":\"Is this item related to logistics at work?\",\r\n            \"available\":[\r\n                \"logistics\",\r\n                \"not\"\r\n            ]\r\n        },\r\n        {\r\n            \"name\":\"tennis\",\r\n            \"desc\":\"Is this item related to my hobby/interest of Tennis?\",\r\n            \"available\":[\r\n                \"football\",\r\n                \"not\"\r\n            ]\r\n        },\r\n        {\r\n            \"name\":\"interested\",\r\n            \"desc\":\"Am I interested in this item, from a work or a personal perspective?\",\r\n            \"available\":[\r\n                \"work\",\r\n                \"personal\",\r\n                \"not\"\r\n            ]\r\n        },\r\n        {\r\n            \"name\":\"work-relevant\",\r\n            \"desc\":\"Is this item work related and relevant to my work tasks?\",\r\n            \"available\":[\r\n                \"relevant\",\r\n                \"not\"\r\n            ]\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/gentrain/eval?client_id={{current_agent_id}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"gentrain",
												"eval"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Training From Actions",
							"item": [
								{
									"name": "Agree",
									"item": [
										{
											"name": "Populate Ext Dataset AGREE (Susan)",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"tag_source\": \"phase2\",\r\n    \"classifications\": [],\r\n    \"subset_tag\": \"phase2\",\r\n    \"subset_percent\": \"15\",\r\n    \"exclude_agree\": false,\r\n    \"exclude_disagree\": true\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url_prefix}}/api/v1/awag/data/train/datasets/:dataset_type/:dataset_id?client_id={{current_agent_id}}&async=true",
													"host": [
														"{{url_prefix}}"
													],
													"path": [
														"api",
														"v1",
														"awag",
														"data",
														"train",
														"datasets",
														":dataset_type",
														":dataset_id"
													],
													"query": [
														{
															"key": "itemId",
															"value": "052388c2-b534-4c38-ba1c-1645cc509e1b",
															"disabled": true
														},
														{
															"key": "lastNHours",
															"value": "1",
															"disabled": true
														},
														{
															"key": "client_id",
															"value": "{{current_agent_id}}"
														},
														{
															"key": "async",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "dataset_type",
															"value": "from_actions"
														},
														{
															"key": "dataset_id",
															"value": "{{ext_dataset_id_mode3_agree}}",
															"description": "Always use mode3 for ext dataset"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Query Ext Dataset AGREE (Susan)",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url_prefix}}/api/v1/awag/data/train/datasets/:dataset_type/:dataset_id?client_id={{current_agent_id}}",
													"host": [
														"{{url_prefix}}"
													],
													"path": [
														"api",
														"v1",
														"awag",
														"data",
														"train",
														"datasets",
														":dataset_type",
														":dataset_id"
													],
													"query": [
														{
															"key": "client_id",
															"value": "{{current_agent_id}}"
														}
													],
													"variable": [
														{
															"key": "dataset_type",
															"value": "from_actions"
														},
														{
															"key": "dataset_id",
															"value": "{{ext_dataset_id_mode3_agree}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Query Ext Dataset Item AGREE (Susan)",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url_prefix}}/api/v1/awag/data/train/datasets/:dataset_type/:dataset_id/items/:item_id?client_id={{agent_id_susan}}&detail=true",
													"host": [
														"{{url_prefix}}"
													],
													"path": [
														"api",
														"v1",
														"awag",
														"data",
														"train",
														"datasets",
														":dataset_type",
														":dataset_id",
														"items",
														":item_id"
													],
													"query": [
														{
															"key": "client_id",
															"value": "{{agent_id_susan}}"
														},
														{
															"key": "detail",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "dataset_type",
															"value": "from_actions"
														},
														{
															"key": "dataset_id",
															"value": "{{ext_dataset_id_mode3_agree}}"
														},
														{
															"key": "item_id",
															"value": "008c9eda-86bc-44f8-9a47-a36138577bbe~tennis"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Ext Dataset AGREE (Susan)",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url_prefix}}/api/v1/awag/data/train/datasets/:dataset_type/:dataset_id?client_id={{current_agent_id}}",
													"host": [
														"{{url_prefix}}"
													],
													"path": [
														"api",
														"v1",
														"awag",
														"data",
														"train",
														"datasets",
														":dataset_type",
														":dataset_id"
													],
													"query": [
														{
															"key": "client_id",
															"value": "{{current_agent_id}}"
														},
														{
															"key": "confirm",
															"value": "true",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "dataset_type",
															"value": "from_actions"
														},
														{
															"key": "dataset_id",
															"value": "{{ext_dataset_id_mode3_agree}}"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Disagree",
									"item": [
										{
											"name": "Populate Ext Dataset DISAGREE (Susan)",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"tag_source\": \"phase2\",\r\n    \"classifications\": [],\r\n    \"subset_tag\": \"phase2\",\r\n    \"subset_percent\": \"50\",\r\n    \"exclude_agree\": true,\r\n    \"exclude_disagree\": false\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url_prefix}}/api/v1/awag/data/train/datasets/:dataset_type/:dataset_id?client_id={{current_agent_id}}&async=true",
													"host": [
														"{{url_prefix}}"
													],
													"path": [
														"api",
														"v1",
														"awag",
														"data",
														"train",
														"datasets",
														":dataset_type",
														":dataset_id"
													],
													"query": [
														{
															"key": "itemId",
															"value": "052388c2-b534-4c38-ba1c-1645cc509e1b",
															"disabled": true
														},
														{
															"key": "lastNHours",
															"value": "1",
															"disabled": true
														},
														{
															"key": "client_id",
															"value": "{{current_agent_id}}"
														},
														{
															"key": "async",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "dataset_type",
															"value": "from_actions"
														},
														{
															"key": "dataset_id",
															"value": "{{ext_dataset_id_mode3_disagree}}",
															"description": "Always use mode3 for ext dataset"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Query Ext Dataset DISAGREE (Susan)",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url_prefix}}/api/v1/awag/data/train/datasets/:dataset_type/:dataset_id?client_id={{current_agent_id}}",
													"host": [
														"{{url_prefix}}"
													],
													"path": [
														"api",
														"v1",
														"awag",
														"data",
														"train",
														"datasets",
														":dataset_type",
														":dataset_id"
													],
													"query": [
														{
															"key": "client_id",
															"value": "{{current_agent_id}}"
														}
													],
													"variable": [
														{
															"key": "dataset_type",
															"value": "from_actions"
														},
														{
															"key": "dataset_id",
															"value": "{{ext_dataset_id_mode3_disagree}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Query Ext Dataset Item DISAGREE (Susan)",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url_prefix}}/api/v1/awag/data/train/datasets/:dataset_type/:dataset_id/items/:item_id?client_id={{agent_id_susan}}&detail=true",
													"host": [
														"{{url_prefix}}"
													],
													"path": [
														"api",
														"v1",
														"awag",
														"data",
														"train",
														"datasets",
														":dataset_type",
														":dataset_id",
														"items",
														":item_id"
													],
													"query": [
														{
															"key": "client_id",
															"value": "{{agent_id_susan}}"
														},
														{
															"key": "detail",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "dataset_type",
															"value": "from_actions"
														},
														{
															"key": "dataset_id",
															"value": "{{ext_dataset_id_mode3_disagree}}"
														},
														{
															"key": "item_id",
															"value": "01253138-4c63-4934-9e5f-b70961bf3c08~tennis"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Ext Dataset DISAGREE (Susan)",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url_prefix}}/api/v1/awag/data/train/datasets/:dataset_type/:dataset_id?client_id={{current_agent_id}}",
													"host": [
														"{{url_prefix}}"
													],
													"path": [
														"api",
														"v1",
														"awag",
														"data",
														"train",
														"datasets",
														":dataset_type",
														":dataset_id"
													],
													"query": [
														{
															"key": "client_id",
															"value": "{{current_agent_id}}"
														},
														{
															"key": "confirm",
															"value": "true",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "dataset_type",
															"value": "from_actions"
														},
														{
															"key": "dataset_id",
															"value": "{{ext_dataset_id_mode3_disagree}}"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Combined",
									"item": [
										{
											"name": "Merge AGREE Into Combined Dataset (Susan)",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url_prefix}}/api/v1/awag/data/train/datasets/:dataset_type/:source_dataset_id/merge/:target_dataset_id?client_id={{current_agent_id}}",
													"host": [
														"{{url_prefix}}"
													],
													"path": [
														"api",
														"v1",
														"awag",
														"data",
														"train",
														"datasets",
														":dataset_type",
														":source_dataset_id",
														"merge",
														":target_dataset_id"
													],
													"query": [
														{
															"key": "client_id",
															"value": "{{current_agent_id}}"
														}
													],
													"variable": [
														{
															"key": "dataset_type",
															"value": "from_actions"
														},
														{
															"key": "source_dataset_id",
															"value": "{{ext_dataset_id_mode3_agree}}"
														},
														{
															"key": "target_dataset_id",
															"value": "{{ext_dataset_id_mode3_combined}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Merge DISAGREE Into Combined Dataset (Susan)",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url_prefix}}/api/v1/awag/data/train/datasets/:dataset_type/:source_dataset_id/merge/:target_dataset_id?client_id={{current_agent_id}}",
													"host": [
														"{{url_prefix}}"
													],
													"path": [
														"api",
														"v1",
														"awag",
														"data",
														"train",
														"datasets",
														":dataset_type",
														":source_dataset_id",
														"merge",
														":target_dataset_id"
													],
													"query": [
														{
															"key": "client_id",
															"value": "{{current_agent_id}}"
														}
													],
													"variable": [
														{
															"key": "dataset_type",
															"value": "from_actions"
														},
														{
															"key": "source_dataset_id",
															"value": "{{ext_dataset_id_mode3_disagree}}"
														},
														{
															"key": "target_dataset_id",
															"value": "{{ext_dataset_id_mode3_combined}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Query Combined Ext Dataset (Susan)",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url_prefix}}/api/v1/awag/data/train/datasets/:dataset_type/:dataset_id?client_id={{current_agent_id}}",
													"host": [
														"{{url_prefix}}"
													],
													"path": [
														"api",
														"v1",
														"awag",
														"data",
														"train",
														"datasets",
														":dataset_type",
														":dataset_id"
													],
													"query": [
														{
															"key": "client_id",
															"value": "{{current_agent_id}}"
														}
													],
													"variable": [
														{
															"key": "dataset_type",
															"value": "from_actions"
														},
														{
															"key": "dataset_id",
															"value": "{{ext_dataset_id_mode3_combined}}"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Upload Ext OpenAI File (Susan)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();\r",
													"let storedFileId = responseJson.stored_file_id;\r",
													"let currentMode = pm.environment.get(\"current_mode\");\r",
													"\r",
													"//let variableName = `last_stored_file_id_${currentMode}`;\r",
													"let variableName = `last_stored_file_id`;\r",
													"\r",
													"pm.environment.set(variableName, storedFileId);\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"dataset_id\": \"{{ext_dataset_id_mode3_combined}}\",\r\n    \"dataset_type\": \"from_actions\",\r\n    \"info\": \"AwAg Ext [{{current_agent}}] ({{current_date}})\",\r\n    \"additional_details\": {\r\n        \"manual_note\": \"Using combined dataset based on merge of 15% subset filtered on AGREE and 50% subset filtered on DISAGREE.  Agree count: 559, disagree count: 171 [manually entered figures]\"\r\n    },\r\n    \"tag\": \"ext-{{current_agent}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/train/files?client_id={{current_agent_id}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"train",
												"files"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Query Ext OpenAI File (Susan)",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/train/files/:file_id?client_id={{current_agent_id}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"train",
												"files",
												":file_id"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "tag",
													"value": "ft-test1",
													"disabled": true
												},
												{
													"key": "include_deleted",
													"value": "true",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "file_id",
													"value": "file-Ie0qoeqP70Wqk74AiFi6phYo"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Sync Ext Files (Susan)",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/train/files/sync?client_id={{current_agent_id}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"train",
												"files",
												"sync"
											],
											"query": [
												{
													"key": "tag",
													"value": "ft-test1",
													"disabled": true
												},
												{
													"key": "client_id",
													"value": "{{current_agent_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Ext File (Susan)",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/train/files/:file_id?client_id={{current_agent_id}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"train",
												"files",
												":file_id"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												}
											],
											"variable": [
												{
													"key": "file_id",
													"value": "file-jVhyJusH6ure3aMIdbvminck"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Ext OpenAI Job (Susan)",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"tag\": \"ext-{{current_agent}}\",\r\n    \"info\": \"AwAg Extended Training [{{current_agent}}] '{{current_date_MMDD}}' ({{current_date}}) using model: {{ft_model_id_base_mode3}}\",\r\n    \"additionalDetails\": {},\r\n    \"file_id\": \"{{last_stored_file_id}}\",\r\n    \"model_id\": \"{{ft_model_id_base_mode3}}\",\r\n    \"n_epochs\": 2,\r\n    \"suffix\" : \"ext-{{current_agent}}-{{current_date_MMDD}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix_int_dev}}/api/v1/awag/data/train/jobs?client_id={{current_agent_id}}",
											"host": [
												"{{url_prefix_int_dev}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"train",
												"jobs"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Sync Ext Jobs (Susan)",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/train/jobs/sync?client_id={{current_agent_id}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"train",
												"jobs",
												"sync"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "tag",
													"value": "ft-test1",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Query Ext Jobs (Susan)",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/train/jobs?client_id={{current_agent_id}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"train",
												"jobs"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "tag",
													"value": "base-kenton",
													"disabled": true
												},
												{
													"key": "include_deleted",
													"value": "true",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Ext Job (Susan)",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/train/jobs/:job_id?client_id={{current_agent_id}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"train",
												"jobs",
												":job_id"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												}
											],
											"variable": [
												{
													"key": "job_id",
													"value": "ftjob-4AHSrpAti5yUR3F5Nj4M1zFq"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Sync Ext Models (Susan)",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/train/models/sync?client_id={{current_agent_id}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"train",
												"models",
												"sync"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "tag",
													"value": "ft-test1",
													"disabled": true
												},
												{
													"key": "presync",
													"value": "true",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Query Ext Models (Susan)",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/train/models?client_id={{current_agent_id}}&simple=true",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"train",
												"models"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "tag",
													"value": "ft-test3",
													"disabled": true
												},
												{
													"key": "include_deleted",
													"value": "true",
													"disabled": true
												},
												{
													"key": "simple",
													"value": "true"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"packages": {},
										"exec": [
											"pm.variables.set('current_mode', 'mode3');  // from actinos is always mode 3\r",
											"\r",
											"pm.variables.set('current_dataset_id', pm.variables.get(\"dataset_id_mode3\"));\r",
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"packages": {},
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Subsets",
							"item": [
								{
									"name": "Generate Subset (Susan)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/subsets/subset/:tag/:subset_percent?client_id={{current_agent_id}}&output_tag=phase2",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"subsets",
												"subset",
												":tag",
												":subset_percent"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "output_tag",
													"value": "phase2"
												},
												{
													"key": "incremental",
													"value": "True",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "tag",
													"value": "phase2"
												},
												{
													"key": "subset_percent",
													"value": "70"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Subsets (Susan)",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/subsets/subset/:tag?client_id={{current_agent_id}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"subsets",
												"subset",
												":tag"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}"
												}
											],
											"variable": [
												{
													"key": "tag",
													"value": "phase2"
												}
											]
										}
									},
									"response": []
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									"console.log(\"AWAG Data/Training/Susan\");\r",
									"\r",
									"var currentAgent = 'susan'\r",
									"\r",
									"pm.variables.set('current_agent', currentAgent);\r",
									"\r",
									"//console.log(\"function_sanitiseStringForJson: \" + pm.globals.get(\"function_sanitiseStringForJson\"));\r",
									"\r",
									"var sanitiseStringForJsonStr =  pm.globals.get(\"function_sanitiseStringForJson\")\r",
									"//console.log(\"function_sanitiseStringForJson: \" + sanitiseStringForJsonStr);\r",
									"var sanitiseStringForJson = eval(sanitiseStringForJsonStr);\r",
									"//console.log(\"sanitiseStringForJson: \" + sanitiseStringForJson);\r",
									"\r",
									"var agentIdVariableName = `agent_id_${currentAgent}`;\r",
									"\r",
									"pm.variables.set('agent_id_variable_name', agentIdVariableName);\r",
									"\r",
									"var agentIdValue = pm.environment.get(agentIdVariableName);\r",
									"pm.variables.set('current_agent_id', agentIdValue);\r",
									"\r",
									"var tTopicBaseSanitised = sanitiseStringForJson(pm.environment.get(\"t_topic_base\"));\r",
									"pm.variables.set('t_topic_base_sanitised', tTopicBaseSanitised);\r",
									"\r",
									"//console.log(\"t_topic_base_sanitised: \" + tTopicBaseSanitised);\r",
									"\r",
									"//console.log(\"AWAG Data/Training/Susan DONE\");\r",
									"\r",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Adam",
					"item": [
						{
							"name": "Generate",
							"item": [
								{
									"name": "Generate: Training Sim Content (Adam)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"console.log(\"AWAG Data/Training/Adam/X\");\r",
													"\r",
													"var currentAgent = pm.variables.get('current_agent');\r",
													"console.log(\"currentAgent: \" + currentAgent);\r",
													"\r",
													"var tTopicCurrentAgent = pm.variables.get(\"t_topic_base_sanitised\") + \"\";   // Allow room for modifications\r",
													"pm.variables.set('t_topic_current_agent', tTopicCurrentAgent);\r",
													"console.log(\"t_topic_current_agent: \" + tTopicCurrentAgent);\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "OpenAI-Auth-Token",
												"value": "{{openai_auth_token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"use_history\": true,\r\n   \"openai_model\": \"{{openai_model_sim}}\",\r\n   \"openai_params\":{{openai_params_sim}},\r\n   \"dramatis_personae\": null,\r\n   \"entities\": null,\r\n   \"topics\":[\r\n      {\r\n         \"category\":\"{{current_agent}}-t\",\r\n         \"enabled\": true,\r\n         \"items_multiplier\":1,\r\n         \"topic\":\"{{t_topic_current_agent}}\"\r\n      }\r\n   ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/sim/gen-sim-text?client_id={{current_agent_id}}&is_add=true&item_count=15",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"sim",
												"gen-sim-text"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}"
												},
												{
													"key": "is_async",
													"value": "true",
													"disabled": true
												},
												{
													"key": "is_add",
													"value": "true"
												},
												{
													"key": "item_count",
													"value": "15"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate: Evaluation Training Items [mode2] (Adam)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"console.log(\"AWAG Data/Training/Adam/Y\");\r",
													"\r",
													"var currentAgent = pm.variables.get('current_agent');\r",
													"console.log(\"currentAgent: \" + currentAgent);\r",
													"\r",
													"var personaVariableName = `persona_json_${currentAgent}`;\r",
													"\r",
													"var currentPersona = pm.environment.get(personaVariableName);\r",
													"console.log(\"currentPersona: \" + currentPersona);\r",
													"\r",
													"pm.variables.set('current_persona', currentPersona);\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"mode\": \"mode2\",\r\n   \"model\":\"{{openai_model_sim}}\",\r\n   \"modelY\":\"gpt-3.5-turbo-0613\",\r\n   \"modelX\":\"ft:gpt-3.5-turbo-1106:hylozoical:base-kenton-0221:8ug1tjME\",\r\n   \"modelZ\":\"ft:gpt-3.5-turbo-1106:hylozoical:ext-kenton-0229:8xestEEA\",\r\n   \"server_path\":\"/data/dev/awag/fine-tuning/generated\",\r\n   \"quantity\":15,\r\n   \"category\":\"{{current_agent}}-t\",\r\n   \"openai_params\":{},\r\n   \"persona\":{{current_persona}},\r\n   \"perspectives\":[{{perspective_json_classification}}],\r\n   \"classifications\":[\r\n        {\r\n            \"name\":\"work-pers\",\r\n            \"desc\":\"Does this item relate to my work or personal life?\",\r\n            \"available\":[\r\n                \"work\",\r\n                \"personal\"\r\n            ]\r\n        },\r\n        {\r\n            \"name\":\"urgency\",\r\n            \"desc\":\"Is this item in relation to something that I think is urgent?\",\r\n            \"available\":[\r\n                \"urgent\",\r\n                \"not\"\r\n            ]\r\n        },\r\n        {\r\n            \"name\":\"work-logistics\",\r\n            \"desc\":\"Is this item related to logistics at work?\",\r\n            \"available\":[\r\n                \"logistics\",\r\n                \"not\"\r\n            ]\r\n        },\r\n        {\r\n            \"name\":\"tennis\",\r\n            \"desc\":\"Is this item related to my hobby/interest of Tennis?\",\r\n            \"available\":[\r\n                \"tennis\",\r\n                \"not\"\r\n            ]\r\n        },\r\n        {\r\n            \"name\":\"interested\",\r\n            \"desc\":\"Am I interested in this item, from a work or a personal perspective?\",\r\n            \"available\":[\r\n                \"work\",\r\n                \"personal\",\r\n                \"not\"\r\n            ]\r\n        },\r\n        {\r\n            \"name\":\"work-relevant\",\r\n            \"desc\":\"Is this item work related and relevant to my work tasks?\",\r\n            \"available\":[\r\n                \"relevant\",\r\n                \"not\"\r\n            ]\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/gentrain/eval?client_id={{current_agent_id}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"gentrain",
												"eval"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate: Evaluation Training Items [mode3] (Adam)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"console.log(\"AWAG Data/Training/Adam/Y\");\r",
													"\r",
													"var currentAgent = pm.variables.get('current_agent');\r",
													"console.log(\"currentAgent: \" + currentAgent);\r",
													"\r",
													"var personaVariableName = `persona_json_${currentAgent}`;\r",
													"\r",
													"var currentPersona = pm.environment.get(personaVariableName);\r",
													"console.log(\"currentPersona: \" + currentPersona);\r",
													"\r",
													"pm.variables.set('current_persona', currentPersona);\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"mode\": \"mode3\",\r\n   \"model\":\"{{openai_model_sim}}\",\r\n   \"modelY\":\"gpt-3.5-turbo-0613\",\r\n   \"modelX\":\"ft:gpt-3.5-turbo-1106:hylozoical:base-kenton-0221:8ug1tjME\",\r\n   \"modelZ\":\"ft:gpt-3.5-turbo-1106:hylozoical:ext-kenton-0229:8xestEEA\",\r\n   \"server_path\":\"/data/awag/fine-tuning/generated\",\r\n   \"quantity\":15,\r\n   \"category\":\"{{current_agent}}-t\",\r\n   \"openai_params\":{},\r\n   \"persona\":{{current_persona}},\r\n   \"perspectives\":[{{perspective_json_classification}}],\r\n   \"classifications\":[\r\n        {\r\n            \"name\":\"work-pers\",\r\n            \"desc\":\"Does this item relate to my work or personal life?\",\r\n            \"available\":[\r\n                \"work\",\r\n                \"personal\"\r\n            ]\r\n        },\r\n        {\r\n            \"name\":\"urgency\",\r\n            \"desc\":\"Is this item in relation to something that I think is urgent?\",\r\n            \"available\":[\r\n                \"urgent\",\r\n                \"not\"\r\n            ]\r\n        },\r\n        {\r\n            \"name\":\"work-logistics\",\r\n            \"desc\":\"Is this item related to logistics at work?\",\r\n            \"available\":[\r\n                \"logistics\",\r\n                \"not\"\r\n            ]\r\n        },\r\n        {\r\n            \"name\":\"tennis\",\r\n            \"desc\":\"Is this item related to my hobby/interest of Tennis?\",\r\n            \"available\":[\r\n                \"football\",\r\n                \"not\"\r\n            ]\r\n        },\r\n        {\r\n            \"name\":\"interested\",\r\n            \"desc\":\"Am I interested in this item, from a work or a personal perspective?\",\r\n            \"available\":[\r\n                \"work\",\r\n                \"personal\",\r\n                \"not\"\r\n            ]\r\n        },\r\n        {\r\n            \"name\":\"work-relevant\",\r\n            \"desc\":\"Is this item work related and relevant to my work tasks?\",\r\n            \"available\":[\r\n                \"relevant\",\r\n                \"not\"\r\n            ]\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/gentrain/eval?client_id={{current_agent_id}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"gentrain",
												"eval"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Training From Actions",
							"item": [
								{
									"name": "Agree",
									"item": [
										{
											"name": "Populate Ext Dataset AGREE (Adam)",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"tag_source\": \"phase2\",\r\n    \"classifications\": [],\r\n    \"subset_tag\": \"phase2\",\r\n    \"subset_percent\": \"10\",\r\n    \"exclude_agree\": false,\r\n    \"exclude_disagree\": true\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url_prefix}}/api/v1/awag/data/train/datasets/:dataset_type/:dataset_id?client_id={{current_agent_id}}&async=true",
													"host": [
														"{{url_prefix}}"
													],
													"path": [
														"api",
														"v1",
														"awag",
														"data",
														"train",
														"datasets",
														":dataset_type",
														":dataset_id"
													],
													"query": [
														{
															"key": "itemId",
															"value": "052388c2-b534-4c38-ba1c-1645cc509e1b",
															"disabled": true
														},
														{
															"key": "lastNHours",
															"value": "1",
															"disabled": true
														},
														{
															"key": "client_id",
															"value": "{{current_agent_id}}"
														},
														{
															"key": "async",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "dataset_type",
															"value": "from_actions"
														},
														{
															"key": "dataset_id",
															"value": "{{ext_dataset_id_mode3_agree}}",
															"description": "Always use mode3 for ext dataset"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Query Ext Dataset AGREE (Adam)",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url_prefix}}/api/v1/awag/data/train/datasets/:dataset_type/:dataset_id?client_id={{current_agent_id}}",
													"host": [
														"{{url_prefix}}"
													],
													"path": [
														"api",
														"v1",
														"awag",
														"data",
														"train",
														"datasets",
														":dataset_type",
														":dataset_id"
													],
													"query": [
														{
															"key": "client_id",
															"value": "{{current_agent_id}}"
														}
													],
													"variable": [
														{
															"key": "dataset_type",
															"value": "from_actions"
														},
														{
															"key": "dataset_id",
															"value": "{{ext_dataset_id_mode3_agree}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Query Ext Dataset Item AGREE (Adam)",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url_prefix}}/api/v1/awag/data/train/datasets/:dataset_type/:dataset_id/items/:item_id?client_id={{agent_id_susan}}&detail=true",
													"host": [
														"{{url_prefix}}"
													],
													"path": [
														"api",
														"v1",
														"awag",
														"data",
														"train",
														"datasets",
														":dataset_type",
														":dataset_id",
														"items",
														":item_id"
													],
													"query": [
														{
															"key": "client_id",
															"value": "{{agent_id_susan}}"
														},
														{
															"key": "detail",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "dataset_type",
															"value": "from_actions"
														},
														{
															"key": "dataset_id",
															"value": "{{ext_dataset_id_mode3_agree}}"
														},
														{
															"key": "item_id",
															"value": "008c9eda-86bc-44f8-9a47-a36138577bbe~tennis"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Ext Dataset AGREE (Adam)",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url_prefix}}/api/v1/awag/data/train/datasets/:dataset_type/:dataset_id?client_id={{current_agent_id}}",
													"host": [
														"{{url_prefix}}"
													],
													"path": [
														"api",
														"v1",
														"awag",
														"data",
														"train",
														"datasets",
														":dataset_type",
														":dataset_id"
													],
													"query": [
														{
															"key": "client_id",
															"value": "{{current_agent_id}}"
														},
														{
															"key": "confirm",
															"value": "true",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "dataset_type",
															"value": "from_actions"
														},
														{
															"key": "dataset_id",
															"value": "{{ext_dataset_id_mode3_agree}}"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Disagree",
									"item": [
										{
											"name": "Populate Ext Dataset DISAGREE (Adam)",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"tag_source\": \"phase2\",\r\n    \"classifications\": [],\r\n    \"subset_tag\": \"phase2\",\r\n    \"subset_percent\": \"50\",\r\n    \"exclude_agree\": true,\r\n    \"exclude_disagree\": false\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url_prefix}}/api/v1/awag/data/train/datasets/:dataset_type/:dataset_id?client_id={{current_agent_id}}&async=true",
													"host": [
														"{{url_prefix}}"
													],
													"path": [
														"api",
														"v1",
														"awag",
														"data",
														"train",
														"datasets",
														":dataset_type",
														":dataset_id"
													],
													"query": [
														{
															"key": "itemId",
															"value": "052388c2-b534-4c38-ba1c-1645cc509e1b",
															"disabled": true
														},
														{
															"key": "lastNHours",
															"value": "1",
															"disabled": true
														},
														{
															"key": "client_id",
															"value": "{{current_agent_id}}"
														},
														{
															"key": "async",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "dataset_type",
															"value": "from_actions"
														},
														{
															"key": "dataset_id",
															"value": "{{ext_dataset_id_mode3_disagree}}",
															"description": "Always use mode3 for ext dataset"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Query Ext Dataset DISAGREE (Adam)",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url_prefix}}/api/v1/awag/data/train/datasets/:dataset_type/:dataset_id?client_id={{current_agent_id}}",
													"host": [
														"{{url_prefix}}"
													],
													"path": [
														"api",
														"v1",
														"awag",
														"data",
														"train",
														"datasets",
														":dataset_type",
														":dataset_id"
													],
													"query": [
														{
															"key": "client_id",
															"value": "{{current_agent_id}}"
														}
													],
													"variable": [
														{
															"key": "dataset_type",
															"value": "from_actions"
														},
														{
															"key": "dataset_id",
															"value": "{{ext_dataset_id_mode3_disagree}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Query Ext Dataset Item DISAGREE (Adam)",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url_prefix}}/api/v1/awag/data/train/datasets/:dataset_type/:dataset_id/items/:item_id?client_id={{agent_id_susan}}&detail=true",
													"host": [
														"{{url_prefix}}"
													],
													"path": [
														"api",
														"v1",
														"awag",
														"data",
														"train",
														"datasets",
														":dataset_type",
														":dataset_id",
														"items",
														":item_id"
													],
													"query": [
														{
															"key": "client_id",
															"value": "{{agent_id_susan}}"
														},
														{
															"key": "detail",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "dataset_type",
															"value": "from_actions"
														},
														{
															"key": "dataset_id",
															"value": "{{ext_dataset_id_mode3_disagree}}"
														},
														{
															"key": "item_id",
															"value": "01253138-4c63-4934-9e5f-b70961bf3c08~tennis"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Ext Dataset DISAGREE (Adam)",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url_prefix}}/api/v1/awag/data/train/datasets/:dataset_type/:dataset_id?client_id={{current_agent_id}}",
													"host": [
														"{{url_prefix}}"
													],
													"path": [
														"api",
														"v1",
														"awag",
														"data",
														"train",
														"datasets",
														":dataset_type",
														":dataset_id"
													],
													"query": [
														{
															"key": "client_id",
															"value": "{{current_agent_id}}"
														},
														{
															"key": "confirm",
															"value": "true",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "dataset_type",
															"value": "from_actions"
														},
														{
															"key": "dataset_id",
															"value": "{{ext_dataset_id_mode3_disagree}}"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Combined",
									"item": [
										{
											"name": "Merge AGREE Into Combined Dataset (Adam)",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url_prefix}}/api/v1/awag/data/train/datasets/:dataset_type/:source_dataset_id/merge/:target_dataset_id?client_id={{current_agent_id}}",
													"host": [
														"{{url_prefix}}"
													],
													"path": [
														"api",
														"v1",
														"awag",
														"data",
														"train",
														"datasets",
														":dataset_type",
														":source_dataset_id",
														"merge",
														":target_dataset_id"
													],
													"query": [
														{
															"key": "client_id",
															"value": "{{current_agent_id}}"
														}
													],
													"variable": [
														{
															"key": "dataset_type",
															"value": "from_actions"
														},
														{
															"key": "source_dataset_id",
															"value": "{{ext_dataset_id_mode3_agree}}"
														},
														{
															"key": "target_dataset_id",
															"value": "{{ext_dataset_id_mode3_combined}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Merge DISAGREE Into Combined Dataset (Adam)",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url_prefix}}/api/v1/awag/data/train/datasets/:dataset_type/:source_dataset_id/merge/:target_dataset_id?client_id={{current_agent_id}}",
													"host": [
														"{{url_prefix}}"
													],
													"path": [
														"api",
														"v1",
														"awag",
														"data",
														"train",
														"datasets",
														":dataset_type",
														":source_dataset_id",
														"merge",
														":target_dataset_id"
													],
													"query": [
														{
															"key": "client_id",
															"value": "{{current_agent_id}}"
														}
													],
													"variable": [
														{
															"key": "dataset_type",
															"value": "from_actions"
														},
														{
															"key": "source_dataset_id",
															"value": "{{ext_dataset_id_mode3_disagree}}"
														},
														{
															"key": "target_dataset_id",
															"value": "{{ext_dataset_id_mode3_combined}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Query Combined Ext Dataset (Adam)",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url_prefix}}/api/v1/awag/data/train/datasets/:dataset_type/:dataset_id?client_id={{current_agent_id}}",
													"host": [
														"{{url_prefix}}"
													],
													"path": [
														"api",
														"v1",
														"awag",
														"data",
														"train",
														"datasets",
														":dataset_type",
														":dataset_id"
													],
													"query": [
														{
															"key": "client_id",
															"value": "{{current_agent_id}}"
														}
													],
													"variable": [
														{
															"key": "dataset_type",
															"value": "from_actions"
														},
														{
															"key": "dataset_id",
															"value": "{{ext_dataset_id_mode3_combined}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Combined Dataset (Adam)",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url_prefix}}/api/v1/awag/data/train/datasets/:dataset_type/:dataset_id?client_id={{current_agent_id}}",
													"host": [
														"{{url_prefix}}"
													],
													"path": [
														"api",
														"v1",
														"awag",
														"data",
														"train",
														"datasets",
														":dataset_type",
														":dataset_id"
													],
													"query": [
														{
															"key": "client_id",
															"value": "{{current_agent_id}}"
														},
														{
															"key": "confirm",
															"value": "true",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "dataset_type",
															"value": "from_actions"
														},
														{
															"key": "dataset_id",
															"value": "{{ext_dataset_id_mode3_combined}}"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Upload Ext OpenAI File (Adam)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();\r",
													"let storedFileId = responseJson.stored_file_id;\r",
													"let currentMode = pm.environment.get(\"current_mode\");\r",
													"\r",
													"//let variableName = `last_stored_file_id_${currentMode}`;\r",
													"let variableName = `last_stored_file_id`;\r",
													"\r",
													"pm.environment.set(variableName, storedFileId);\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"dataset_id\": \"{{ext_dataset_id_mode3_combined}}\",\r\n    \"dataset_type\": \"from_actions\",\r\n    \"info\": \"AwAg Ext [{{current_agent}}] ({{current_date}})\",\r\n    \"additional_details\": {\r\n        \"manual_note\": \"Using combined dataset based on merge of 10% subset filtered on AGREE and 50% subset filtered on DISAGREE.  Agree count: 1152, disagree count: 355 [manually entered figures]\"\r\n    },\r\n    \"tag\": \"ext-{{current_agent}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/train/files?client_id={{current_agent_id}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"train",
												"files"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Query Ext OpenAI File (Adam)",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/train/files/:file_id?client_id={{current_agent_id}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"train",
												"files",
												":file_id"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "tag",
													"value": "ft-test1",
													"disabled": true
												},
												{
													"key": "include_deleted",
													"value": "true",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "file_id",
													"value": "file-Ie0qoeqP70Wqk74AiFi6phYo"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Sync Ext Files (Adam)",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/train/files/sync?client_id={{current_agent_id}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"train",
												"files",
												"sync"
											],
											"query": [
												{
													"key": "tag",
													"value": "ft-test1",
													"disabled": true
												},
												{
													"key": "client_id",
													"value": "{{current_agent_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Ext File (Adam)",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/train/files/:file_id?client_id={{current_agent_id}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"train",
												"files",
												":file_id"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												}
											],
											"variable": [
												{
													"key": "file_id",
													"value": "file-X6OG2rOM5SfwdHDxJI0ggWdo"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Ext OpenAI Job (Adam)",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"tag\": \"ext-{{current_agent}}\",\r\n    \"info\": \"AwAg Extended Training [{{current_agent}}] '{{current_date_MMDD}}' ({{current_date}}) using model: {{ft_model_id_base_mode3}}\",\r\n    \"additionalDetails\": {},\r\n    \"file_id\": \"{{last_stored_file_id}}\",\r\n    \"model_id\": \"{{ft_model_id_base_mode3}}\",\r\n    \"n_epochs\": 2,\r\n    \"suffix\" : \"ext-{{current_agent}}-{{current_date_MMDD}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/train/jobs?client_id={{current_agent_id}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"train",
												"jobs"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Sync Ext Jobs (Adam)",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/train/jobs/sync?client_id={{current_agent_id}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"train",
												"jobs",
												"sync"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "tag",
													"value": "ft-test1",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Query Ext Jobs (Adam)",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/train/jobs?client_id={{current_agent_id}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"train",
												"jobs"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "tag",
													"value": "base-kenton",
													"disabled": true
												},
												{
													"key": "include_deleted",
													"value": "true",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Ext Job (Adam)",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/train/jobs/:job_id?client_id={{current_agent_id}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"train",
												"jobs",
												":job_id"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												}
											],
											"variable": [
												{
													"key": "job_id",
													"value": "ftjob-x1uFzHJQf85RE3J4tJyTVJE7"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Sync Ext Models (Adam)",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/train/models/sync?client_id={{current_agent_id}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"train",
												"models",
												"sync"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "tag",
													"value": "ft-test1",
													"disabled": true
												},
												{
													"key": "presync",
													"value": "true",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Query Ext Models (Adam)",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/train/models?client_id={{current_agent_id}}&simple=true",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"train",
												"models"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "tag",
													"value": "ft-test3",
													"disabled": true
												},
												{
													"key": "include_deleted",
													"value": "true",
													"disabled": true
												},
												{
													"key": "simple",
													"value": "true"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"packages": {},
										"exec": [
											"pm.variables.set('current_mode', 'mode3');  // from actions is always mode 3\r",
											"\r",
											"pm.variables.set('current_dataset_id', pm.variables.get(\"dataset_id_mode3\"));\r",
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"packages": {},
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Subsets",
							"item": [
								{
									"name": "Generate Subset (Adam)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/subsets/subset/:tag/:subset_percent?client_id={{current_agent_id}}&output_tag=phase2",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"subsets",
												"subset",
												":tag",
												":subset_percent"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "output_tag",
													"value": "phase2"
												},
												{
													"key": "incremental",
													"value": "True",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "tag",
													"value": "phase2"
												},
												{
													"key": "subset_percent",
													"value": "10"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Subsets (Adam)",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/subsets/subset/:tag?client_id={{current_agent_id}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"subsets",
												"subset",
												":tag"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}"
												}
											],
											"variable": [
												{
													"key": "tag",
													"value": "phase2"
												}
											]
										}
									},
									"response": []
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									"console.log(\"AWAG Data/Training/Adam\");\r",
									"\r",
									"var currentAgent = 'adam'\r",
									"\r",
									"pm.variables.set('current_agent', currentAgent);\r",
									"\r",
									"//console.log(\"function_sanitiseStringForJson: \" + pm.globals.get(\"function_sanitiseStringForJson\"));\r",
									"\r",
									"var sanitiseStringForJsonStr =  pm.globals.get(\"function_sanitiseStringForJson\")\r",
									"//console.log(\"function_sanitiseStringForJson: \" + sanitiseStringForJsonStr);\r",
									"var sanitiseStringForJson = eval(sanitiseStringForJsonStr);\r",
									"//console.log(\"sanitiseStringForJson: \" + sanitiseStringForJson);\r",
									"\r",
									"var agentIdVariableName = `agent_id_${currentAgent}`;\r",
									"\r",
									"pm.variables.set('agent_id_variable_name', agentIdVariableName);\r",
									"\r",
									"var agentIdValue = pm.environment.get(agentIdVariableName);\r",
									"pm.variables.set('current_agent_id', agentIdValue);\r",
									"\r",
									"var tTopicBaseSanitised = sanitiseStringForJson(pm.environment.get(\"t_topic_base\"));\r",
									"pm.variables.set('t_topic_base_sanitised', tTopicBaseSanitised);\r",
									"\r",
									"//console.log(\"t_topic_base_sanitised: \" + tTopicBaseSanitised);\r",
									"\r",
									"//console.log(\"AWAG Data/Training/Adam\");\r",
									"\r",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Kenton",
					"item": [
						{
							"name": "Generate",
							"item": [
								{
									"name": "Generate: Training Sim Content (Kenton)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"console.log(\"AWAG Data/Training/Kenton/X\");\r",
													"\r",
													"var currentAgent = pm.variables.get('current_agent');\r",
													"console.log(\"currentAgent: \" + currentAgent);\r",
													"\r",
													"var tTopicCurrentAgent = pm.variables.get(\"t_topic_base_sanitised\") + \"\";   // Allow room for modifications\r",
													"pm.variables.set('t_topic_current_agent', tTopicCurrentAgent);\r",
													"console.log(\"t_topic_current_agent: \" + tTopicCurrentAgent);\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "OpenAI-Auth-Token",
												"value": "{{openai_auth_token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"use_history\": true,\r\n   \"openai_model\": \"{{openai_model_sim}}\",\r\n   \"openai_params\":{{openai_params_sim}},\r\n   \"dramatis_personae\": null,\r\n   \"entities\": null,\r\n   \"topics\":[\r\n      {\r\n         \"category\":\"{{current_agent}}-t\",\r\n         \"enabled\": true,\r\n         \"items_multiplier\":1,\r\n         \"topic\":\"{{t_topic_current_agent}}\"\r\n      }\r\n   ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/sim/gen-sim-text?client_id={{current_agent_id}}&is_add=true&item_count=15",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"sim",
												"gen-sim-text"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}"
												},
												{
													"key": "is_async",
													"value": "true",
													"disabled": true
												},
												{
													"key": "is_add",
													"value": "true"
												},
												{
													"key": "item_count",
													"value": "15"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate: Evaluation Training Items [mode2] (Kenton)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"console.log(\"AWAG Data/Training/Kenton/Y\");\r",
													"\r",
													"var currentAgent = pm.variables.get('current_agent');\r",
													"console.log(\"currentAgent: \" + currentAgent);\r",
													"\r",
													"var personaVariableName = `persona_json_${currentAgent}`;\r",
													"\r",
													"var currentPersona = pm.environment.get(personaVariableName);\r",
													"console.log(\"currentPersona: \" + currentPersona);\r",
													"\r",
													"pm.variables.set('current_persona', currentPersona);\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"mode\": \"mode2\",\r\n   \"model\":\"{{openai_model_sim}}\",\r\n   \"modelY\":\"gpt-3.5-turbo-0613\",\r\n   \"modelX\":\"ft:gpt-3.5-turbo-1106:hylozoical:base-kenton-0221:8ug1tjME\",\r\n   \"modelZ\":\"ft:gpt-3.5-turbo-1106:hylozoical:ext-kenton-0229:8xestEEA\",\r\n   \"server_path\":\"/data/dev/awag/fine-tuning/generated\",\r\n   \"quantity\":15,\r\n   \"category\":\"{{current_agent}}-t\",\r\n   \"openai_params\":{},\r\n   \"persona\":{{current_persona}},\r\n   \"perspectives\":[{{perspective_json_classification}}],\r\n   \"classifications\":[\r\n        {\r\n            \"name\":\"work-pers\",\r\n            \"desc\":\"Does this item relate to my work or personal life?\",\r\n            \"available\":[\r\n                \"work\",\r\n                \"personal\"\r\n            ]\r\n        },\r\n        {\r\n            \"name\":\"urgency\",\r\n            \"desc\":\"Is this item in relation to something that I think is urgent?\",\r\n            \"available\":[\r\n                \"urgent\",\r\n                \"not\"\r\n            ]\r\n        },\r\n        {\r\n            \"name\":\"work-logistics\",\r\n            \"desc\":\"Is this item related to logistics at work?\",\r\n            \"available\":[\r\n                \"logistics\",\r\n                \"not\"\r\n            ]\r\n        },\r\n        {\r\n            \"name\":\"tennis\",\r\n            \"desc\":\"Is this item related to my hobby/interest of Tennis?\",\r\n            \"available\":[\r\n                \"tennis\",\r\n                \"not\"\r\n            ]\r\n        },\r\n        {\r\n            \"name\":\"interested\",\r\n            \"desc\":\"Am I interested in this item, from a work or a personal perspective?\",\r\n            \"available\":[\r\n                \"work\",\r\n                \"personal\",\r\n                \"not\"\r\n            ]\r\n        },\r\n        {\r\n            \"name\":\"work-relevant\",\r\n            \"desc\":\"Is this item work related and relevant to my work tasks?\",\r\n            \"available\":[\r\n                \"relevant\",\r\n                \"not\"\r\n            ]\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/gentrain/eval?client_id={{current_agent_id}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"gentrain",
												"eval"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generate: Evaluation Training Items [mode3] (Kenton)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"console.log(\"AWAG Data/Training/Kenton/Y\");\r",
													"\r",
													"var currentAgent = pm.variables.get('current_agent');\r",
													"console.log(\"currentAgent: \" + currentAgent);\r",
													"\r",
													"var personaVariableName = `persona_json_${currentAgent}`;\r",
													"\r",
													"var currentPersona = pm.environment.get(personaVariableName);\r",
													"console.log(\"currentPersona: \" + currentPersona);\r",
													"\r",
													"pm.variables.set('current_persona', currentPersona);\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"mode\": \"mode3\",\r\n   \"model\":\"{{openai_model_sim}}\",\r\n   \"modelY\":\"gpt-3.5-turbo-0613\",\r\n   \"modelX\":\"ft:gpt-3.5-turbo-1106:hylozoical:base-kenton-0221:8ug1tjME\",\r\n   \"modelZ\":\"ft:gpt-3.5-turbo-1106:hylozoical:ext-kenton-0229:8xestEEA\",\r\n   \"server_path\":\"/data/awag/fine-tuning/generated\",\r\n   \"quantity\":15,\r\n   \"category\":\"{{current_agent}}-t\",\r\n   \"openai_params\":{},\r\n   \"persona\":{{current_persona}},\r\n   \"perspectives\":[{{perspective_json_classification}}],\r\n   \"classifications\":[\r\n        {\r\n            \"name\":\"work-pers\",\r\n            \"desc\":\"Does this item relate to my work or personal life?\",\r\n            \"available\":[\r\n                \"work\",\r\n                \"personal\"\r\n            ]\r\n        },\r\n        {\r\n            \"name\":\"urgency\",\r\n            \"desc\":\"Is this item in relation to something that I think is urgent?\",\r\n            \"available\":[\r\n                \"urgent\",\r\n                \"not\"\r\n            ]\r\n        },\r\n        {\r\n            \"name\":\"work-logistics\",\r\n            \"desc\":\"Is this item related to logistics at work?\",\r\n            \"available\":[\r\n                \"logistics\",\r\n                \"not\"\r\n            ]\r\n        },\r\n        {\r\n            \"name\":\"tennis\",\r\n            \"desc\":\"Is this item related to my hobby/interest of Tennis?\",\r\n            \"available\":[\r\n                \"football\",\r\n                \"not\"\r\n            ]\r\n        },\r\n        {\r\n            \"name\":\"interested\",\r\n            \"desc\":\"Am I interested in this item, from a work or a personal perspective?\",\r\n            \"available\":[\r\n                \"work\",\r\n                \"personal\",\r\n                \"not\"\r\n            ]\r\n        },\r\n        {\r\n            \"name\":\"work-relevant\",\r\n            \"desc\":\"Is this item work related and relevant to my work tasks?\",\r\n            \"available\":[\r\n                \"relevant\",\r\n                \"not\"\r\n            ]\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/gentrain/eval?client_id={{current_agent_id}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"gentrain",
												"eval"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Training From Actions",
							"item": [
								{
									"name": "Agree",
									"item": [
										{
											"name": "Populate Ext Dataset AGREE (Kenton)",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"tag_source\": \"phase2\",\r\n    \"classifications\": [],\r\n    \"subset_tag\": \"phase2\",\r\n    \"subset_percent\": \"40\",\r\n    \"exclude_agree\": false,\r\n    \"exclude_disagree\": true\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url_prefix}}/api/v1/awag/data/train/datasets/:dataset_type/:dataset_id?client_id={{current_agent_id}}&async=true",
													"host": [
														"{{url_prefix}}"
													],
													"path": [
														"api",
														"v1",
														"awag",
														"data",
														"train",
														"datasets",
														":dataset_type",
														":dataset_id"
													],
													"query": [
														{
															"key": "itemId",
															"value": "052388c2-b534-4c38-ba1c-1645cc509e1b",
															"disabled": true
														},
														{
															"key": "lastNHours",
															"value": "1",
															"disabled": true
														},
														{
															"key": "client_id",
															"value": "{{current_agent_id}}"
														},
														{
															"key": "async",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "dataset_type",
															"value": "from_actions"
														},
														{
															"key": "dataset_id",
															"value": "{{ext_dataset_id_mode3_agree}}",
															"description": "Always use mode3 for ext dataset"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Query Ext Dataset AGREE (Kenton)",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url_prefix}}/api/v1/awag/data/train/datasets/:dataset_type/:dataset_id?client_id={{current_agent_id}}",
													"host": [
														"{{url_prefix}}"
													],
													"path": [
														"api",
														"v1",
														"awag",
														"data",
														"train",
														"datasets",
														":dataset_type",
														":dataset_id"
													],
													"query": [
														{
															"key": "client_id",
															"value": "{{current_agent_id}}"
														}
													],
													"variable": [
														{
															"key": "dataset_type",
															"value": "from_actions"
														},
														{
															"key": "dataset_id",
															"value": "{{ext_dataset_id_mode3_agree}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Query Ext Dataset Item AGREE (Kenton)",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url_prefix}}/api/v1/awag/data/train/datasets/:dataset_type/:dataset_id/items/:item_id?client_id={{agent_id_susan}}&detail=true",
													"host": [
														"{{url_prefix}}"
													],
													"path": [
														"api",
														"v1",
														"awag",
														"data",
														"train",
														"datasets",
														":dataset_type",
														":dataset_id",
														"items",
														":item_id"
													],
													"query": [
														{
															"key": "client_id",
															"value": "{{agent_id_susan}}"
														},
														{
															"key": "detail",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "dataset_type",
															"value": "from_actions"
														},
														{
															"key": "dataset_id",
															"value": "{{ext_dataset_id_mode3_agree}}"
														},
														{
															"key": "item_id",
															"value": "008c9eda-86bc-44f8-9a47-a36138577bbe~tennis"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Ext Dataset AGREE (Kenton)",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url_prefix}}/api/v1/awag/data/train/datasets/:dataset_type/:dataset_id?client_id={{current_agent_id}}",
													"host": [
														"{{url_prefix}}"
													],
													"path": [
														"api",
														"v1",
														"awag",
														"data",
														"train",
														"datasets",
														":dataset_type",
														":dataset_id"
													],
													"query": [
														{
															"key": "client_id",
															"value": "{{current_agent_id}}"
														},
														{
															"key": "confirm",
															"value": "true",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "dataset_type",
															"value": "from_actions"
														},
														{
															"key": "dataset_id",
															"value": "{{ext_dataset_id_mode3_agree}}"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Disagree",
									"item": [
										{
											"name": "Populate Ext Dataset DISAGREE (Kenton)",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"tag_source\": \"phase2\",\r\n    \"classifications\": [],\r\n    \"subset_tag\": \"phase2\",\r\n    \"subset_percent\": \"100\",\r\n    \"exclude_agree\": true,\r\n    \"exclude_disagree\": false\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url_prefix}}/api/v1/awag/data/train/datasets/:dataset_type/:dataset_id?client_id={{current_agent_id}}&async=true",
													"host": [
														"{{url_prefix}}"
													],
													"path": [
														"api",
														"v1",
														"awag",
														"data",
														"train",
														"datasets",
														":dataset_type",
														":dataset_id"
													],
													"query": [
														{
															"key": "itemId",
															"value": "052388c2-b534-4c38-ba1c-1645cc509e1b",
															"disabled": true
														},
														{
															"key": "lastNHours",
															"value": "1",
															"disabled": true
														},
														{
															"key": "client_id",
															"value": "{{current_agent_id}}"
														},
														{
															"key": "async",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "dataset_type",
															"value": "from_actions"
														},
														{
															"key": "dataset_id",
															"value": "{{ext_dataset_id_mode3_disagree}}",
															"description": "Always use mode3 for ext dataset"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Query Ext Dataset DISAGREE (Kenton)",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url_prefix}}/api/v1/awag/data/train/datasets/:dataset_type/:dataset_id?client_id={{current_agent_id}}",
													"host": [
														"{{url_prefix}}"
													],
													"path": [
														"api",
														"v1",
														"awag",
														"data",
														"train",
														"datasets",
														":dataset_type",
														":dataset_id"
													],
													"query": [
														{
															"key": "client_id",
															"value": "{{current_agent_id}}"
														}
													],
													"variable": [
														{
															"key": "dataset_type",
															"value": "from_actions"
														},
														{
															"key": "dataset_id",
															"value": "{{ext_dataset_id_mode3_disagree}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Query Ext Dataset Item DISAGREE (Kenton)",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url_prefix}}/api/v1/awag/data/train/datasets/:dataset_type/:dataset_id/items/:item_id?client_id={{agent_id_susan}}&detail=true",
													"host": [
														"{{url_prefix}}"
													],
													"path": [
														"api",
														"v1",
														"awag",
														"data",
														"train",
														"datasets",
														":dataset_type",
														":dataset_id",
														"items",
														":item_id"
													],
													"query": [
														{
															"key": "client_id",
															"value": "{{agent_id_susan}}"
														},
														{
															"key": "detail",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "dataset_type",
															"value": "from_actions"
														},
														{
															"key": "dataset_id",
															"value": "{{ext_dataset_id_mode3_disagree}}"
														},
														{
															"key": "item_id",
															"value": "01253138-4c63-4934-9e5f-b70961bf3c08~tennis"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Ext Dataset DISAGREE (Kenton)",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url_prefix}}/api/v1/awag/data/train/datasets/:dataset_type/:dataset_id?client_id={{current_agent_id}}",
													"host": [
														"{{url_prefix}}"
													],
													"path": [
														"api",
														"v1",
														"awag",
														"data",
														"train",
														"datasets",
														":dataset_type",
														":dataset_id"
													],
													"query": [
														{
															"key": "client_id",
															"value": "{{current_agent_id}}"
														},
														{
															"key": "confirm",
															"value": "true",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "dataset_type",
															"value": "from_actions"
														},
														{
															"key": "dataset_id",
															"value": "{{ext_dataset_id_mode3_disagree}}"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Combined",
									"item": [
										{
											"name": "Merge AGREE Into Combined Dataset (Kenton)",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url_prefix}}/api/v1/awag/data/train/datasets/:dataset_type/:source_dataset_id/merge/:target_dataset_id?client_id={{current_agent_id}}",
													"host": [
														"{{url_prefix}}"
													],
													"path": [
														"api",
														"v1",
														"awag",
														"data",
														"train",
														"datasets",
														":dataset_type",
														":source_dataset_id",
														"merge",
														":target_dataset_id"
													],
													"query": [
														{
															"key": "client_id",
															"value": "{{current_agent_id}}"
														}
													],
													"variable": [
														{
															"key": "dataset_type",
															"value": "from_actions"
														},
														{
															"key": "source_dataset_id",
															"value": "{{ext_dataset_id_mode3_agree}}"
														},
														{
															"key": "target_dataset_id",
															"value": "{{ext_dataset_id_mode3_combined}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Merge DISAGREE Into Combined Dataset (Kenton)",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url_prefix}}/api/v1/awag/data/train/datasets/:dataset_type/:source_dataset_id/merge/:target_dataset_id?client_id={{current_agent_id}}",
													"host": [
														"{{url_prefix}}"
													],
													"path": [
														"api",
														"v1",
														"awag",
														"data",
														"train",
														"datasets",
														":dataset_type",
														":source_dataset_id",
														"merge",
														":target_dataset_id"
													],
													"query": [
														{
															"key": "client_id",
															"value": "{{current_agent_id}}"
														}
													],
													"variable": [
														{
															"key": "dataset_type",
															"value": "from_actions"
														},
														{
															"key": "source_dataset_id",
															"value": "{{ext_dataset_id_mode3_disagree}}"
														},
														{
															"key": "target_dataset_id",
															"value": "{{ext_dataset_id_mode3_combined}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Query Combined Ext Dataset (Kenton)",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url_prefix}}/api/v1/awag/data/train/datasets/:dataset_type/:dataset_id?client_id={{current_agent_id}}",
													"host": [
														"{{url_prefix}}"
													],
													"path": [
														"api",
														"v1",
														"awag",
														"data",
														"train",
														"datasets",
														":dataset_type",
														":dataset_id"
													],
													"query": [
														{
															"key": "client_id",
															"value": "{{current_agent_id}}"
														}
													],
													"variable": [
														{
															"key": "dataset_type",
															"value": "from_actions"
														},
														{
															"key": "dataset_id",
															"value": "{{ext_dataset_id_mode3_combined}}"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Combined Dataset (Kenton)",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url_prefix}}/api/v1/awag/data/train/datasets/:dataset_type/:dataset_id?client_id={{current_agent_id}}",
													"host": [
														"{{url_prefix}}"
													],
													"path": [
														"api",
														"v1",
														"awag",
														"data",
														"train",
														"datasets",
														":dataset_type",
														":dataset_id"
													],
													"query": [
														{
															"key": "client_id",
															"value": "{{current_agent_id}}"
														},
														{
															"key": "confirm",
															"value": "true",
															"disabled": true
														}
													],
													"variable": [
														{
															"key": "dataset_type",
															"value": "from_actions"
														},
														{
															"key": "dataset_id",
															"value": "{{ext_dataset_id_mode3_combined}}"
														}
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Upload Ext OpenAI File (Kenton)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let responseJson = pm.response.json();\r",
													"let storedFileId = responseJson.stored_file_id;\r",
													"let currentMode = pm.environment.get(\"current_mode\");\r",
													"\r",
													"//let variableName = `last_stored_file_id_${currentMode}`;\r",
													"let variableName = `last_stored_file_id`;\r",
													"\r",
													"pm.environment.set(variableName, storedFileId);\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"dataset_id\": \"{{ext_dataset_id_mode3_combined}}\",\r\n    \"dataset_type\": \"from_actions\",\r\n    \"info\": \"AwAg Ext [{{current_agent}}] ({{current_date}})\",\r\n    \"additional_details\": {\r\n        \"manual_note\": \"Using combined dataset based on merge of 40% subset filtered on AGREE and 100% subset filtered on DISAGREE.  Agree count: 438, disagree count: 55 [manually entered figures]\"\r\n    },\r\n    \"tag\": \"ext-{{current_agent}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/train/files?client_id={{current_agent_id}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"train",
												"files"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Sync Ext Files (Kenton)",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/train/files/sync?client_id={{current_agent_id}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"train",
												"files",
												"sync"
											],
											"query": [
												{
													"key": "tag",
													"value": "ft-test1",
													"disabled": true
												},
												{
													"key": "client_id",
													"value": "{{current_agent_id}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Query Ext OpenAI File (Kenton)",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/train/files/:file_id?client_id={{current_agent_id}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"train",
												"files",
												":file_id"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "tag",
													"value": "ft-test1",
													"disabled": true
												},
												{
													"key": "include_deleted",
													"value": "true",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "file_id",
													"value": "file-4kufZfod85Y80HElq5uciOzT"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Ext File (Kenton)",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/train/files/:file_id?client_id={{current_agent_id}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"train",
												"files",
												":file_id"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												}
											],
											"variable": [
												{
													"key": "file_id",
													"value": "file-4BRrDp7USqJeQoQ5t1LxOcE9"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Ext OpenAI Job (Kenton)",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"tag\": \"ext-{{current_agent}}\",\r\n    \"info\": \"AwAg Extended Training [{{current_agent}}] '{{current_date_MMDD}}' ({{current_date}}) using model: {{ft_model_id_base_mode3}}\",\r\n    \"additionalDetails\": {},\r\n    \"file_id\": \"{{last_stored_file_id}}\",\r\n    \"model_id\": \"{{ft_model_id_base_mode3}}\",\r\n    \"n_epochs\": 2,\r\n    \"suffix\" : \"ext-{{current_agent}}-{{current_date_MMDD}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/train/jobs?client_id={{current_agent_id}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"train",
												"jobs"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Sync Ext Jobs (Kenton)",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/train/jobs/sync?client_id={{current_agent_id}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"train",
												"jobs",
												"sync"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "tag",
													"value": "ft-test1",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Query Ext Jobs (Kenton)",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/train/jobs?client_id={{current_agent_id}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"train",
												"jobs"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "tag",
													"value": "base-kenton",
													"disabled": true
												},
												{
													"key": "include_deleted",
													"value": "true",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Ext Job (Kenton)",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/train/jobs/:job_id?client_id={{current_agent_id}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"train",
												"jobs",
												":job_id"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												}
											],
											"variable": [
												{
													"key": "job_id",
													"value": "ftjob-EPpPlb8w2SOs89kF02LnnoM3"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Sync Ext Models (Kenton)",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/train/models/sync?client_id={{current_agent_id}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"train",
												"models",
												"sync"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "tag",
													"value": "ft-test1",
													"disabled": true
												},
												{
													"key": "presync",
													"value": "true",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Query Ext Models (Kenton)",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/train/models?client_id={{current_agent_id}}&simple=true",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"train",
												"models"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "tag",
													"value": "ft-test3",
													"disabled": true
												},
												{
													"key": "include_deleted",
													"value": "true",
													"disabled": true
												},
												{
													"key": "simple",
													"value": "true"
												}
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"packages": {},
										"exec": [
											"pm.variables.set('current_mode', 'mode3');  // from actions is always mode 3\r",
											"\r",
											"pm.variables.set('current_dataset_id', pm.variables.get(\"dataset_id_mode3\"));\r",
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"packages": {},
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Subsets",
							"item": [
								{
									"name": "Generate Subset (Kenton)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/subsets/subset/:tag/:subset_percent?client_id={{current_agent_id}}&output_tag=phase2",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"subsets",
												"subset",
												":tag",
												":subset_percent"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "output_tag",
													"value": "phase2"
												},
												{
													"key": "incremental",
													"value": "True",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "tag",
													"value": "phase2"
												},
												{
													"key": "subset_percent",
													"value": "100"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Subsets (Kenton)",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/subsets/subset/:tag?client_id={{current_agent_id}}",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"subsets",
												"subset",
												":tag"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}"
												}
											],
											"variable": [
												{
													"key": "tag",
													"value": "phase2"
												}
											]
										}
									},
									"response": []
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									"console.log(\"AWAG Data/Training/Kenton\");\r",
									"\r",
									"var currentAgent = 'kenton'\r",
									"\r",
									"pm.variables.set('current_agent', currentAgent);\r",
									"\r",
									"//console.log(\"function_sanitiseStringForJson: \" + pm.globals.get(\"function_sanitiseStringForJson\"));\r",
									"\r",
									"var sanitiseStringForJsonStr =  pm.globals.get(\"function_sanitiseStringForJson\")\r",
									"//console.log(\"function_sanitiseStringForJson: \" + sanitiseStringForJsonStr);\r",
									"var sanitiseStringForJson = eval(sanitiseStringForJsonStr);\r",
									"//console.log(\"sanitiseStringForJson: \" + sanitiseStringForJson);\r",
									"\r",
									"var agentIdVariableName = `agent_id_${currentAgent}`;\r",
									"\r",
									"pm.variables.set('agent_id_variable_name', agentIdVariableName);\r",
									"\r",
									"var agentIdValue = pm.environment.get(agentIdVariableName);\r",
									"pm.variables.set('current_agent_id', agentIdValue);\r",
									"\r",
									"var tTopicBaseSanitised = sanitiseStringForJson(pm.environment.get(\"t_topic_base\"));\r",
									"pm.variables.set('t_topic_base_sanitised', tTopicBaseSanitised);\r",
									"\r",
									"//console.log(\"t_topic_base_sanitised: \" + tTopicBaseSanitised);\r",
									"\r",
									"//console.log(\"AWAG Data/Training/Kenton\");\r",
									"\r",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							"console.log(\"AWAG Data/Training\");\r",
							"console.log(\"function_sanitiseStringForJson: \" + pm.globals.get(\"function_sanitiseStringForJson\"));\r",
							"\r",
							"/*\r",
							"function sanitiseStringForJson(str) {\r",
							"\r",
							"    return str\r",
							"        .replace(/\\\\/g, '\\\\\\\\') // Escape backslashes\r",
							"        .replace(/\"/g, '\\\\\"') // Escape double quotes\r",
							"        .replace(/\\n/g, '\\\\n') // Escape newlines\r",
							"        .replace(/\\r/g, '\\\\r') // Escape carriage returns\r",
							"        .replace(/\\t/g, '\\\\t') // Escape tabs\r",
							"        .replace(/\\f/g, '\\\\f') // Escape form feeds\r",
							"        //.replace(/\\b/g, '\\\\b'); // Escape backspaces\r",
							"}\r",
							"\r",
							"console.log(sanitiseStringForJson(\"test\\\"string\"));\r",
							"*/\r",
							"\r",
							"\r",
							"let currentDate = new Date();\r",
							"let formattedDate = currentDate.toLocaleDateString('en-GB', {\r",
							"  day: '2-digit',\r",
							"  month: 'short',\r",
							"  year: 'numeric'\r",
							"});\r",
							"formattedDate = formattedDate.replace(/ /g, ' '); // Ensures single space\r",
							"pm.environment.set(\"current_date\", formattedDate);\r",
							"\r",
							"let month = ('0' + (currentDate.getMonth() + 1)).slice(-2); // Get month, format to 2 digits\r",
							"let day = ('0' + currentDate.getDate()).slice(-2); // Get day, format to 2 digits\r",
							"let formattedDateMMDD = month + day; // Concatenate for MMDD format\r",
							"\r",
							"// Set the formatted date as an environment variable\r",
							"pm.environment.set(\"current_date_MMDD\", formattedDateMMDD);\r",
							"\r",
							"//pm.variables.set('ext_dataset_id_mode3', 'ext_mode3');\r",
							"//pm.variables.set('ext_dataset_id_mode3', 'ext_mode3');\r",
							"\r",
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Evaluation",
			"item": [
				{
					"name": "Susan",
					"item": [
						{
							"name": "Evaluation Jobs",
							"item": [
								{
									"name": "Get Evaluation Jobs (Susan) - TEST",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/eval/get-evaluation-jobs?client_id={{current_agent_id}}&first_tag_dest=test4&show_info=false",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"eval",
												"get-evaluation-jobs"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "job_id",
													"value": "",
													"disabled": true
												},
												{
													"key": "mode",
													"value": "",
													"disabled": true
												},
												{
													"key": "status",
													"value": "PROCESSING",
													"disabled": true
												},
												{
													"key": "is_error",
													"value": "true",
													"disabled": true
												},
												{
													"key": "tag_source",
													"value": "phase2",
													"disabled": true
												},
												{
													"key": "first_tag_dest",
													"value": "test4"
												},
												{
													"key": "openai_model",
													"value": "{{eval_model_vanilla_4}}",
													"disabled": true
												},
												{
													"key": "show_info",
													"value": "false"
												},
												{
													"key": "show_detail",
													"value": "true",
													"disabled": true
												},
												{
													"key": "last_n_hours",
													"value": "2",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "count",
													"value": "5",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Evaluation Jobs (Susan) - phase2-vanilla-mode1-01",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/eval/get-evaluation-jobs?client_id={{current_agent_id}}&first_tag_dest=phase2-vanilla-mode1-01&show_info=false",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"eval",
												"get-evaluation-jobs"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "job_id",
													"value": "",
													"disabled": true
												},
												{
													"key": "mode",
													"value": "",
													"disabled": true
												},
												{
													"key": "status",
													"value": "PROCESSING",
													"disabled": true
												},
												{
													"key": "is_error",
													"value": "true",
													"disabled": true
												},
												{
													"key": "tag_source",
													"value": "phase2",
													"disabled": true
												},
												{
													"key": "first_tag_dest",
													"value": "phase2-vanilla-mode1-01"
												},
												{
													"key": "openai_model",
													"value": "{{eval_model_vanilla_4}}",
													"disabled": true
												},
												{
													"key": "show_info",
													"value": "false"
												},
												{
													"key": "show_detail",
													"value": "true",
													"disabled": true
												},
												{
													"key": "last_n_hours",
													"value": "2",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "count",
													"value": "5",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Evaluation Jobs (Susan) - phase2-vanilla-mode1-02 (FF)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/eval/get-evaluation-jobs?client_id={{current_agent_id}}&first_tag_dest=phase2-vanilla-mode1-02&show_info=false",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"eval",
												"get-evaluation-jobs"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "job_id",
													"value": "",
													"disabled": true
												},
												{
													"key": "mode",
													"value": "",
													"disabled": true
												},
												{
													"key": "status",
													"value": "PROCESSING",
													"disabled": true
												},
												{
													"key": "is_error",
													"value": "true",
													"disabled": true
												},
												{
													"key": "tag_source",
													"value": "phase2",
													"disabled": true
												},
												{
													"key": "first_tag_dest",
													"value": "phase2-vanilla-mode1-02"
												},
												{
													"key": "openai_model",
													"value": "{{eval_model_vanilla_4}}",
													"disabled": true
												},
												{
													"key": "show_info",
													"value": "false"
												},
												{
													"key": "show_detail",
													"value": "true",
													"disabled": true
												},
												{
													"key": "last_n_hours",
													"value": "2",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "count",
													"value": "5",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Evaluation Jobs (Susan) - phase2-vanilla-mode2-01",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/eval/get-evaluation-jobs?client_id={{current_agent_id}}&first_tag_dest=phase2-vanilla-mode2-01&show_info=false",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"eval",
												"get-evaluation-jobs"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "job_id",
													"value": "",
													"disabled": true
												},
												{
													"key": "mode",
													"value": "",
													"disabled": true
												},
												{
													"key": "status",
													"value": "PROCESSING",
													"disabled": true
												},
												{
													"key": "is_error",
													"value": "true",
													"disabled": true
												},
												{
													"key": "tag_source",
													"value": "phase2",
													"disabled": true
												},
												{
													"key": "first_tag_dest",
													"value": "phase2-vanilla-mode2-01"
												},
												{
													"key": "openai_model",
													"value": "{{eval_model_vanilla_4}}",
													"disabled": true
												},
												{
													"key": "show_info",
													"value": "false"
												},
												{
													"key": "show_detail",
													"value": "true",
													"disabled": true
												},
												{
													"key": "last_n_hours",
													"value": "2",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "count",
													"value": "5",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Evaluation Jobs (Susan) - phase2-vanilla-mode3-01",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/eval/get-evaluation-jobs?client_id={{current_agent_id}}&first_tag_dest=phase2-vanilla-mode3-01&show_info=false",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"eval",
												"get-evaluation-jobs"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "job_id",
													"value": "",
													"disabled": true
												},
												{
													"key": "mode",
													"value": "",
													"disabled": true
												},
												{
													"key": "status",
													"value": "PROCESSING",
													"disabled": true
												},
												{
													"key": "is_error",
													"value": "true",
													"disabled": true
												},
												{
													"key": "tag_source",
													"value": "phase2",
													"disabled": true
												},
												{
													"key": "first_tag_dest",
													"value": "phase2-vanilla-mode3-01"
												},
												{
													"key": "openai_model",
													"value": "{{eval_model_vanilla_4}}",
													"disabled": true
												},
												{
													"key": "show_info",
													"value": "false"
												},
												{
													"key": "show_detail",
													"value": "true",
													"disabled": true
												},
												{
													"key": "last_n_hours",
													"value": "2",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "count",
													"value": "5",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Evaluation Jobs (Susan) - phase2-base-mode2-01",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/eval/get-evaluation-jobs?client_id={{current_agent_id}}&first_tag_dest=phase2-base-mode2-01&show_info=false",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"eval",
												"get-evaluation-jobs"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "job_id",
													"value": "",
													"disabled": true
												},
												{
													"key": "mode",
													"value": "",
													"disabled": true
												},
												{
													"key": "status",
													"value": "PROCESSING",
													"disabled": true
												},
												{
													"key": "is_error",
													"value": "true",
													"disabled": true
												},
												{
													"key": "tag_source",
													"value": "phase2",
													"disabled": true
												},
												{
													"key": "first_tag_dest",
													"value": "phase2-base-mode2-01"
												},
												{
													"key": "openai_model",
													"value": "{{eval_model_vanilla_4}}",
													"disabled": true
												},
												{
													"key": "show_info",
													"value": "false"
												},
												{
													"key": "show_detail",
													"value": "true",
													"disabled": true
												},
												{
													"key": "last_n_hours",
													"value": "2",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "count",
													"value": "5",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Evaluation Jobs (Susan) - phase2-base-mode3-01",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/eval/get-evaluation-jobs?client_id={{current_agent_id}}&first_tag_dest=phase2-base-mode3-01&show_info=false",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"eval",
												"get-evaluation-jobs"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "job_id",
													"value": "",
													"disabled": true
												},
												{
													"key": "mode",
													"value": "",
													"disabled": true
												},
												{
													"key": "status",
													"value": "PROCESSING",
													"disabled": true
												},
												{
													"key": "is_error",
													"value": "true",
													"disabled": true
												},
												{
													"key": "tag_source",
													"value": "phase2",
													"disabled": true
												},
												{
													"key": "first_tag_dest",
													"value": "phase2-base-mode3-01"
												},
												{
													"key": "openai_model",
													"value": "{{eval_model_vanilla_4}}",
													"disabled": true
												},
												{
													"key": "show_info",
													"value": "false"
												},
												{
													"key": "show_detail",
													"value": "true",
													"disabled": true
												},
												{
													"key": "last_n_hours",
													"value": "2",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "count",
													"value": "5",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Evaluation Jobs (Susan) - phase2-ext-mode3-01",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/eval/get-evaluation-jobs?client_id={{current_agent_id}}&first_tag_dest=phase2-ext-mode3-01&show_info=false",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"eval",
												"get-evaluation-jobs"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "job_id",
													"value": "",
													"disabled": true
												},
												{
													"key": "mode",
													"value": "",
													"disabled": true
												},
												{
													"key": "status",
													"value": "PROCESSING",
													"disabled": true
												},
												{
													"key": "is_error",
													"value": "true",
													"disabled": true
												},
												{
													"key": "tag_source",
													"value": "phase2",
													"disabled": true
												},
												{
													"key": "first_tag_dest",
													"value": "phase2-ext-mode3-01"
												},
												{
													"key": "openai_model",
													"value": "{{eval_model_vanilla_4}}",
													"disabled": true
												},
												{
													"key": "show_info",
													"value": "false"
												},
												{
													"key": "show_detail",
													"value": "true",
													"disabled": true
												},
												{
													"key": "last_n_hours",
													"value": "2",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "count",
													"value": "5",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Evaluation Jobs (Susan) - phase2-vanilla4-mode2-01",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/eval/get-evaluation-jobs?client_id={{current_agent_id}}&first_tag_dest=phase2-vanilla4-mode2-01&show_info=false",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"eval",
												"get-evaluation-jobs"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "job_id",
													"value": "",
													"disabled": true
												},
												{
													"key": "mode",
													"value": "",
													"disabled": true
												},
												{
													"key": "status",
													"value": "PROCESSING",
													"disabled": true
												},
												{
													"key": "is_error",
													"value": "true",
													"disabled": true
												},
												{
													"key": "tag_source",
													"value": "phase2",
													"disabled": true
												},
												{
													"key": "first_tag_dest",
													"value": "phase2-vanilla4-mode2-01"
												},
												{
													"key": "openai_model",
													"value": "{{eval_model_vanilla_4}}",
													"disabled": true
												},
												{
													"key": "show_info",
													"value": "false"
												},
												{
													"key": "show_detail",
													"value": "true",
													"disabled": true
												},
												{
													"key": "last_n_hours",
													"value": "2",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "count",
													"value": "5",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Evaluation Jobs (Susan) - phase2-vanilla4o-mode2-01",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/eval/get-evaluation-jobs?client_id={{current_agent_id}}&first_tag_dest=phase2-vanilla4o-mode2-01&show_info=false",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"eval",
												"get-evaluation-jobs"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "job_id",
													"value": "",
													"disabled": true
												},
												{
													"key": "mode",
													"value": "",
													"disabled": true
												},
												{
													"key": "status",
													"value": "PROCESSING",
													"disabled": true
												},
												{
													"key": "is_error",
													"value": "true",
													"disabled": true
												},
												{
													"key": "tag_source",
													"value": "phase2",
													"disabled": true
												},
												{
													"key": "first_tag_dest",
													"value": "phase2-vanilla4o-mode2-01"
												},
												{
													"key": "openai_model",
													"value": "{{eval_model_vanilla_4o}}",
													"disabled": true
												},
												{
													"key": "show_info",
													"value": "false"
												},
												{
													"key": "show_detail",
													"value": "true",
													"disabled": true
												},
												{
													"key": "last_n_hours",
													"value": "2",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "count",
													"value": "5",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Evaluation Jobs (Susan) - phase2-vanilla4-mode3-01",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/eval/get-evaluation-jobs?client_id={{current_agent_id}}&first_tag_dest=phase2-vanilla4-mode3-01&show_info=false",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"eval",
												"get-evaluation-jobs"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "job_id",
													"value": "",
													"disabled": true
												},
												{
													"key": "mode",
													"value": "",
													"disabled": true
												},
												{
													"key": "status",
													"value": "PROCESSING",
													"disabled": true
												},
												{
													"key": "is_error",
													"value": "true",
													"disabled": true
												},
												{
													"key": "tag_source",
													"value": "phase2",
													"disabled": true
												},
												{
													"key": "first_tag_dest",
													"value": "phase2-vanilla4-mode3-01"
												},
												{
													"key": "openai_model",
													"value": "{{eval_model_vanilla_4}}",
													"disabled": true
												},
												{
													"key": "show_info",
													"value": "false"
												},
												{
													"key": "show_detail",
													"value": "true",
													"disabled": true
												},
												{
													"key": "last_n_hours",
													"value": "2",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "count",
													"value": "5",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Evaluation Jobs (Susan) - phase2-vanilla4o-mode3-01",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/eval/get-evaluation-jobs?client_id={{current_agent_id}}&first_tag_dest=phase2-vanilla4o-mode3-01&show_info=false",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"eval",
												"get-evaluation-jobs"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "job_id",
													"value": "",
													"disabled": true
												},
												{
													"key": "mode",
													"value": "",
													"disabled": true
												},
												{
													"key": "status",
													"value": "PROCESSING",
													"disabled": true
												},
												{
													"key": "is_error",
													"value": "true",
													"disabled": true
												},
												{
													"key": "tag_source",
													"value": "phase2",
													"disabled": true
												},
												{
													"key": "first_tag_dest",
													"value": "phase2-vanilla4o-mode3-01"
												},
												{
													"key": "openai_model",
													"value": "{{eval_model_vanilla_4o}}",
													"disabled": true
												},
												{
													"key": "show_info",
													"value": "false"
												},
												{
													"key": "show_detail",
													"value": "true",
													"disabled": true
												},
												{
													"key": "last_n_hours",
													"value": "2",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "count",
													"value": "5",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Query Evaluations (Susan)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/eval/process-evals/:mode/:job_id?client_id={{current_agent_id}}",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"eval",
										"process-evals",
										":mode",
										":job_id"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										}
									],
									"variable": [
										{
											"key": "mode",
											"value": "{{last_eval_mode}}"
										},
										{
											"key": "job_id",
											"value": "{{last_eval_job_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Susan - Vanilla GPT-3.5 - Mode 1 : TEST",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*\r",
											"const requestBody = JSON.parse(pm.request.body.raw);\r",
											"if (requestBody.content && requestBody.content.items) {\r",
											"    requestBody.content.items.forEach(item => {\r",
											"        if (item.classifications) {\r",
											"            item.classifications.forEach(classification => {\r",
											"                console.log(`${item.itemId} ~ ${classification.name} ~ ${classification.selected}`);\r",
											"            });\r",
											"        }\r",
											"    });\r",
											"}\r",
											"*/\r",
											"\r",
											"\r",
											"let responseJson = pm.response.json();\r",
											"let jobId = responseJson.job_id;\r",
											"let mode = responseJson.mode;\r",
											"\r",
											"pm.environment.set(\"last_eval_job_id\", jobId);\r",
											"pm.environment.set(\"last_eval_mode\", mode);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"Xmodel35\":\"{{eval_model_vanilla_35}}\",\r\n   \"Xmodel4\":\"{{eval_model_vanilla_4}}\",\r\n   \"XmodelBase\":\"{{ft_model_id_base_mode2}}\",\r\n   \"XmodelExt\":\"{{ft_model_id_extended_current_agent}}\",\r\n   \"model\":\"{{eval_model_vanilla_35}}\",\r\n   \"tag_source\":\"{{eval_tag_source}}\",\r\n   \"tags_dest\":[\r\n      \"test4\"\r\n   ],\r\n   \"persona\":{{current_agent_persona_json}},\r\n   \"perspectives\":[{{perspective_json_classification}}],\r\n   \"is_exclude_existing\":true,\r\n   \"is_most_recent\":false,\r\n   \"last_n_hours\":null,\r\n   \"by_uuid\":true,\r\n   \"subset_tag\":null,\r\n   \"subset_percent\":null,\r\n   \"openai_params\":{\r\n      \"max_tokens\": {{eval_max_tokens}},\r\n      \"presence_penalty\": {{eval_presence_penalty}},\r\n      \"temperature\": {{eval_temperature}}\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/eval/process-evals/:mode?client_id={{current_agent_id}}&async=true&dry_run=true&items_to_process=5",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"eval",
										"process-evals",
										":mode"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "async",
											"value": "true"
										},
										{
											"key": "dry_run",
											"value": "true"
										},
										{
											"key": "items_to_process",
											"value": "5"
										}
									],
									"variable": [
										{
											"key": "mode",
											"value": "mode1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Susan - Vanilla GPT-3.5 - Mode 1 : phase2-vanilla-mode1-01",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*\r",
											"const requestBody = JSON.parse(pm.request.body.raw);\r",
											"if (requestBody.content && requestBody.content.items) {\r",
											"    requestBody.content.items.forEach(item => {\r",
											"        if (item.classifications) {\r",
											"            item.classifications.forEach(classification => {\r",
											"                console.log(`${item.itemId} ~ ${classification.name} ~ ${classification.selected}`);\r",
											"            });\r",
											"        }\r",
											"    });\r",
											"}\r",
											"*/\r",
											"\r",
											"\r",
											"let responseJson = pm.response.json();\r",
											"let jobId = responseJson.job_id;\r",
											"let mode = responseJson.mode;\r",
											"\r",
											"pm.environment.set(\"last_eval_job_id\", jobId);\r",
											"pm.environment.set(\"last_eval_mode\", mode);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"Xmodel35\":\"{{eval_model_vanilla_35}}\",\r\n   \"Xmodel4\":\"{{eval_model_vanilla_4}}\",\r\n   \"XmodelBase\":\"{{ft_model_id_base_mode2}}\",\r\n   \"XmodelExt\":\"{{ft_model_id_extended_current_agent}}\",\r\n   \"model\":\"{{eval_model_vanilla_35}}\",\r\n   \"tag_source\":\"{{eval_tag_source}}\",\r\n   \"tags_dest\":[\r\n      \"phase2-vanilla-mode1-01\"\r\n   ],\r\n   \"persona\":{{current_agent_persona_json}},\r\n   \"perspectives\":[{{perspective_json_classification}}],\r\n   \"is_exclude_existing\":true,\r\n   \"is_most_recent\":false,\r\n   \"last_n_hours\":null,\r\n   \"by_uuid\":true,\r\n   \"subset_tag\":\"phase2\",\r\n   \"subset_percent\":50,\r\n   \"openai_params\":{\r\n      \"max_tokens\": {{eval_max_tokens}},\r\n      \"presence_penalty\": {{eval_presence_penalty}},\r\n      \"temperature\": {{eval_temperature}}\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/eval/process-evals/:mode?client_id={{current_agent_id}}&async=true&items_to_process=5",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"eval",
										"process-evals",
										":mode"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "async",
											"value": "true"
										},
										{
											"key": "dry_run",
											"value": "true",
											"disabled": true
										},
										{
											"key": "items_to_process",
											"value": "5"
										}
									],
									"variable": [
										{
											"key": "mode",
											"value": "mode1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Susan - Vanilla GPT-3.5 - Mode 1 : phase2-vanilla-mode1-02 (FF)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*\r",
											"const requestBody = JSON.parse(pm.request.body.raw);\r",
											"if (requestBody.content && requestBody.content.items) {\r",
											"    requestBody.content.items.forEach(item => {\r",
											"        if (item.classifications) {\r",
											"            item.classifications.forEach(classification => {\r",
											"                console.log(`${item.itemId} ~ ${classification.name} ~ ${classification.selected}`);\r",
											"            });\r",
											"        }\r",
											"    });\r",
											"}\r",
											"*/\r",
											"\r",
											"\r",
											"let responseJson = pm.response.json();\r",
											"let jobId = responseJson.job_id;\r",
											"let mode = responseJson.mode;\r",
											"\r",
											"pm.environment.set(\"last_eval_job_id\", jobId);\r",
											"pm.environment.set(\"last_eval_mode\", mode);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"Xmodel35\":\"{{eval_model_vanilla_35}}\",\r\n   \"Xmodel4\":\"{{eval_model_vanilla_4}}\",\r\n   \"XmodelBase\":\"{{ft_model_id_base_mode2}}\",\r\n   \"XmodelExt\":\"{{ft_model_id_extended_current_agent}}\",\r\n   \"model\":\"{{eval_model_vanilla_35}}\",\r\n   \"lightweight_mode\": false,\r\n   \"tag_source\":\"{{eval_tag_source}}\",\r\n   \"tags_dest\":[\r\n      \"phase2-vanilla-mode1-02\"\r\n   ],\r\n   \"persona\":{{current_agent_persona_json}},\r\n   \"perspectives\":[{{perspective_json_classification}}],\r\n   \"is_exclude_existing\":true,\r\n   \"is_most_recent\":false,\r\n   \"last_n_hours\":null,\r\n   \"by_uuid\":true,\r\n   \"subset_tag\":\"phase2\",\r\n   \"subset_percent\":50,\r\n   \"openai_params\":{\r\n      \"max_tokens\": {{eval_max_tokens}},\r\n      \"presence_penalty\": {{eval_presence_penalty}},\r\n      \"temperature\": {{eval_temperature}}\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/eval/process-evals/:mode?client_id={{current_agent_id}}&async=true&items_to_process=200",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"eval",
										"process-evals",
										":mode"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "async",
											"value": "true"
										},
										{
											"key": "dry_run",
											"value": "true",
											"disabled": true
										},
										{
											"key": "items_to_process",
											"value": "200"
										}
									],
									"variable": [
										{
											"key": "mode",
											"value": "mode1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Susan - Vanilla GPT-3.5 - Mode 2 : phase2-vanilla-mode2-01",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*\r",
											"const requestBody = JSON.parse(pm.request.body.raw);\r",
											"if (requestBody.content && requestBody.content.items) {\r",
											"    requestBody.content.items.forEach(item => {\r",
											"        if (item.classifications) {\r",
											"            item.classifications.forEach(classification => {\r",
											"                console.log(`${item.itemId} ~ ${classification.name} ~ ${classification.selected}`);\r",
											"            });\r",
											"        }\r",
											"    });\r",
											"}\r",
											"*/\r",
											"\r",
											"\r",
											"let responseJson = pm.response.json();\r",
											"let jobId = responseJson.job_id;\r",
											"let mode = responseJson.mode;\r",
											"\r",
											"pm.environment.set(\"last_eval_job_id\", jobId);\r",
											"pm.environment.set(\"last_eval_mode\", mode);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"Xmodel35\":\"{{eval_model_vanilla_35}}\",\r\n   \"Xmodel4\":\"{{eval_model_vanilla_4}}\",\r\n   \"XmodelBase\":\"{{ft_model_id_base_mode2}}\",\r\n   \"XmodelExt\":\"{{ft_model_id_extended_current_agent}}\",\r\n   \"model\":\"{{eval_model_vanilla_35}}\",\r\n   \"tag_source\":\"{{eval_tag_source}}\",\r\n   \"tags_dest\":[\r\n      \"phase2-vanilla-mode2-01\"\r\n   ],\r\n   \"persona\":{{current_agent_persona_json}},\r\n   \"perspectives\":[{{perspective_json_classification}}],\r\n   \"is_exclude_existing\":true,\r\n   \"is_most_recent\":false,\r\n   \"last_n_hours\":null,\r\n   \"by_uuid\":true,\r\n   \"subset_tag\":\"phase2\",\r\n   \"subset_percent\":50,\r\n   \"openai_params\":{\r\n      \"max_tokens\": {{eval_max_tokens}},\r\n      \"presence_penalty\": {{eval_presence_penalty}},\r\n      \"temperature\": {{eval_temperature}}\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/eval/process-evals/:mode?client_id={{current_agent_id}}&async=true&items_to_process=200",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"eval",
										"process-evals",
										":mode"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "async",
											"value": "true"
										},
										{
											"key": "dry_run",
											"value": "true",
											"disabled": true
										},
										{
											"key": "items_to_process",
											"value": "200"
										}
									],
									"variable": [
										{
											"key": "mode",
											"value": "mode2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Susan - Vanilla GPT-3.5 - Mode 3 : phase2-vanilla-mode3-01",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*\r",
											"const requestBody = JSON.parse(pm.request.body.raw);\r",
											"if (requestBody.content && requestBody.content.items) {\r",
											"    requestBody.content.items.forEach(item => {\r",
											"        if (item.classifications) {\r",
											"            item.classifications.forEach(classification => {\r",
											"                console.log(`${item.itemId} ~ ${classification.name} ~ ${classification.selected}`);\r",
											"            });\r",
											"        }\r",
											"    });\r",
											"}\r",
											"*/\r",
											"\r",
											"\r",
											"let responseJson = pm.response.json();\r",
											"let jobId = responseJson.job_id;\r",
											"let mode = responseJson.mode;\r",
											"\r",
											"pm.environment.set(\"last_eval_job_id\", jobId);\r",
											"pm.environment.set(\"last_eval_mode\", mode);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"Xmodel35\":\"{{eval_model_vanilla_35}}\",\r\n   \"Xmodel4\":\"{{eval_model_vanilla_4}}\",\r\n   \"XmodelBase\":\"{{ft_model_id_base_mode2}}\",\r\n   \"XmodelExt\":\"{{ft_model_id_extended_current_agent}}\",\r\n   \"model\":\"{{eval_model_vanilla_35}}\",\r\n   \"tag_source\":\"{{eval_tag_source}}\",\r\n   \"tags_dest\":[\r\n      \"phase2-vanilla-mode3-01\"\r\n   ],\r\n   \"persona\":{{current_agent_persona_json}},\r\n   \"perspectives\":[{{perspective_json_classification}}],\r\n   \"is_exclude_existing\":true,\r\n   \"is_most_recent\":false,\r\n   \"last_n_hours\":null,\r\n   \"by_uuid\":true,\r\n   \"subset_tag\":\"phase2\",\r\n   \"subset_percent\":70,\r\n   \"openai_params\":{\r\n      \"max_tokens\": {{eval_max_tokens}},\r\n      \"presence_penalty\": {{eval_presence_penalty}},\r\n      \"temperature\": {{eval_temperature}}\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/eval/process-evals/:mode?client_id={{current_agent_id}}&async=true&items_to_process=150",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"eval",
										"process-evals",
										":mode"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "async",
											"value": "true"
										},
										{
											"key": "dry_run",
											"value": "true",
											"disabled": true
										},
										{
											"key": "items_to_process",
											"value": "150"
										}
									],
									"variable": [
										{
											"key": "mode",
											"value": "mode3"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Susan - Base GPT-3.5 - Mode 2 : phase2-base-mode2-01",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*\r",
											"const requestBody = JSON.parse(pm.request.body.raw);\r",
											"if (requestBody.content && requestBody.content.items) {\r",
											"    requestBody.content.items.forEach(item => {\r",
											"        if (item.classifications) {\r",
											"            item.classifications.forEach(classification => {\r",
											"                console.log(`${item.itemId} ~ ${classification.name} ~ ${classification.selected}`);\r",
											"            });\r",
											"        }\r",
											"    });\r",
											"}\r",
											"*/\r",
											"\r",
											"\r",
											"let responseJson = pm.response.json();\r",
											"let jobId = responseJson.job_id;\r",
											"let mode = responseJson.mode;\r",
											"\r",
											"pm.environment.set(\"last_eval_job_id\", jobId);\r",
											"pm.environment.set(\"last_eval_mode\", mode);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"Xmodel35\":\"{{eval_model_vanilla_35}}\",\r\n   \"Xmodel4\":\"{{eval_model_vanilla_4}}\",\r\n   \"XmodelBase2\":\"{{ft_model_id_base_mode2}}\",\r\n   \"XmodelBase3\":\"{{ft_model_id_base_mode3}}\",\r\n   \"XmodelExt\":\"{{ft_model_id_extended_current_agent}}\",\r\n   \"model\":\"{{ft_model_id_base_mode2}}\",\r\n   \"tag_source\":\"{{eval_tag_source}}\",\r\n   \"tags_dest\":[\r\n      \"phase2-base-mode2-01\"\r\n   ],\r\n   \"persona\":{{current_agent_persona_json}},\r\n   \"perspectives\":[{{perspective_json_classification}}],\r\n   \"is_exclude_existing\":true,\r\n   \"is_most_recent\":false,\r\n   \"last_n_hours\":null,\r\n   \"by_uuid\":true,\r\n   \"subset_tag\":\"phase2\",\r\n   \"subset_percent\":25,\r\n   \"openai_params\":{\r\n      \"max_tokens\": {{eval_max_tokens}},\r\n      \"presence_penalty\": {{eval_presence_penalty}},\r\n      \"temperature\": {{eval_temperature}}\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/eval/process-evals/:mode?client_id={{current_agent_id}}&async=true&items_to_process=50",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"eval",
										"process-evals",
										":mode"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "async",
											"value": "true"
										},
										{
											"key": "dry_run",
											"value": "true",
											"disabled": true
										},
										{
											"key": "items_to_process",
											"value": "50"
										}
									],
									"variable": [
										{
											"key": "mode",
											"value": "mode2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Susan - Base GPT-3.5 - Mode 3 : phase2-base-mode3-01",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*\r",
											"const requestBody = JSON.parse(pm.request.body.raw);\r",
											"if (requestBody.content && requestBody.content.items) {\r",
											"    requestBody.content.items.forEach(item => {\r",
											"        if (item.classifications) {\r",
											"            item.classifications.forEach(classification => {\r",
											"                console.log(`${item.itemId} ~ ${classification.name} ~ ${classification.selected}`);\r",
											"            });\r",
											"        }\r",
											"    });\r",
											"}\r",
											"*/\r",
											"\r",
											"\r",
											"let responseJson = pm.response.json();\r",
											"let jobId = responseJson.job_id;\r",
											"let mode = responseJson.mode;\r",
											"\r",
											"pm.environment.set(\"last_eval_job_id\", jobId);\r",
											"pm.environment.set(\"last_eval_mode\", mode);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"Xmodel35\":\"{{eval_model_vanilla_35}}\",\r\n   \"Xmodel4\":\"{{eval_model_vanilla_4}}\",\r\n   \"XmodelBase2\":\"{{ft_model_id_base_mode2}}\",\r\n   \"XmodelBase3\":\"{{ft_model_id_base_mode3}}\",\r\n   \"XmodelExt\":\"{{ft_model_id_extended_current_agent}}\",\r\n   \"model\":\"{{ft_model_id_base_mode3}}\",\r\n   \"tag_source\":\"{{eval_tag_source}}\",\r\n   \"tags_dest\":[\r\n      \"phase2-base-mode3-01\"\r\n   ],\r\n   \"persona\":{{current_agent_persona_json}},\r\n   \"perspectives\":[{{perspective_json_classification}}],\r\n   \"is_exclude_existing\":true,\r\n   \"is_most_recent\":false,\r\n   \"last_n_hours\":null,\r\n   \"by_uuid\":true,\r\n   \"subset_tag\":\"phase2\",\r\n   \"XXsubset_percent\":25,\r\n   \"subset_percent\":50,\r\n   \"openai_params\":{\r\n      \"max_tokens\": {{eval_max_tokens}},\r\n      \"presence_penalty\": {{eval_presence_penalty}},\r\n      \"temperature\": {{eval_temperature}}\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/eval/process-evals/:mode?client_id={{current_agent_id}}&async=true&items_to_process=50",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"eval",
										"process-evals",
										":mode"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "async",
											"value": "true"
										},
										{
											"key": "dry_run",
											"value": "true",
											"disabled": true
										},
										{
											"key": "items_to_process",
											"value": "50"
										}
									],
									"variable": [
										{
											"key": "mode",
											"value": "mode3"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Susan - Ext GPT-3.5 - Mode 3 : phase2-ext-mode3-01",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*\r",
											"const requestBody = JSON.parse(pm.request.body.raw);\r",
											"if (requestBody.content && requestBody.content.items) {\r",
											"    requestBody.content.items.forEach(item => {\r",
											"        if (item.classifications) {\r",
											"            item.classifications.forEach(classification => {\r",
											"                console.log(`${item.itemId} ~ ${classification.name} ~ ${classification.selected}`);\r",
											"            });\r",
											"        }\r",
											"    });\r",
											"}\r",
											"*/\r",
											"\r",
											"\r",
											"let responseJson = pm.response.json();\r",
											"let jobId = responseJson.job_id;\r",
											"let mode = responseJson.mode;\r",
											"\r",
											"pm.environment.set(\"last_eval_job_id\", jobId);\r",
											"pm.environment.set(\"last_eval_mode\", mode);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"Xmodel35\":\"{{eval_model_vanilla_35}}\",\r\n   \"Xmodel4\":\"{{eval_model_vanilla_4}}\",\r\n   \"XmodelBase2\":\"{{ft_model_id_base_mode2}}\",\r\n   \"XmodelBase3\":\"{{ft_model_id_base_mode3}}\",\r\n   \"XmodelExt\":\"{{ft_model_id_extended_current_agent}}\",\r\n   \"model\":\"{{ft_model_id_extended_current_agent}}\",\r\n   \"tag_source\":\"{{eval_tag_source}}\",\r\n   \"tags_dest\":[\r\n      \"phase2-ext-mode3-01\"\r\n   ],\r\n   \"persona\":{{current_agent_persona_json}},\r\n   \"perspectives\":[{{perspective_json_classification}}],\r\n   \"is_exclude_existing\":true,\r\n   \"is_most_recent\":false,\r\n   \"last_n_hours\":null,\r\n   \"by_uuid\":true,\r\n   \"subset_tag\":\"phase2\",\r\n   \"XXsubset_percent\":25,\r\n   \"subset_percent\":50,\r\n   \"openai_params\":{\r\n      \"max_tokens\": {{eval_max_tokens}},\r\n      \"presence_penalty\": {{eval_presence_penalty}},\r\n      \"temperature\": {{eval_temperature}}\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/eval/process-evals/:mode?client_id={{current_agent_id}}&async=true&items_to_process=80",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"eval",
										"process-evals",
										":mode"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "async",
											"value": "true"
										},
										{
											"key": "dry_run",
											"value": "true",
											"disabled": true
										},
										{
											"key": "items_to_process",
											"value": "80"
										}
									],
									"variable": [
										{
											"key": "mode",
											"value": "mode3"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Susan - Vanilla GPT-4 - Mode 2 : phase2-vanilla4-mode2-01",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*\r",
											"const requestBody = JSON.parse(pm.request.body.raw);\r",
											"if (requestBody.content && requestBody.content.items) {\r",
											"    requestBody.content.items.forEach(item => {\r",
											"        if (item.classifications) {\r",
											"            item.classifications.forEach(classification => {\r",
											"                console.log(`${item.itemId} ~ ${classification.name} ~ ${classification.selected}`);\r",
											"            });\r",
											"        }\r",
											"    });\r",
											"}\r",
											"*/\r",
											"\r",
											"\r",
											"let responseJson = pm.response.json();\r",
											"let jobId = responseJson.job_id;\r",
											"let mode = responseJson.mode;\r",
											"\r",
											"pm.environment.set(\"last_eval_job_id\", jobId);\r",
											"pm.environment.set(\"last_eval_mode\", mode);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"Xmodel35\":\"{{eval_model_vanilla_35}}\",\r\n   \"Xmodel4\":\"{{eval_model_vanilla_4}}\",\r\n   \"XmodelBase\":\"{{ft_model_id_base_mode2}}\",\r\n   \"XmodelExt\":\"{{ft_model_id_extended_current_agent}}\",\r\n   \"model\":\"{{eval_model_vanilla_4}}\",\r\n   \"tag_source\":\"{{eval_tag_source}}\",\r\n   \"tags_dest\":[\r\n      \"phase2-vanilla4-mode2-01\"\r\n   ],\r\n   \"persona\":{{current_agent_persona_json}},\r\n   \"perspectives\":[{{perspective_json_classification}}],\r\n   \"is_exclude_existing\":true,\r\n   \"is_most_recent\":false,\r\n   \"last_n_hours\":null,\r\n   \"by_uuid\":true,\r\n   \"subset_tag\":\"phase2\",\r\n   \"subset_percent\":25,\r\n   \"openai_params\":{\r\n      \"max_tokens\": {{eval_max_tokens}},\r\n      \"presence_penalty\": {{eval_presence_penalty}},\r\n      \"temperature\": {{eval_temperature}}\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/eval/process-evals/:mode?client_id={{current_agent_id}}&async=true&items_to_process=100",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"eval",
										"process-evals",
										":mode"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "async",
											"value": "true"
										},
										{
											"key": "dry_run",
											"value": "true",
											"disabled": true
										},
										{
											"key": "items_to_process",
											"value": "100"
										}
									],
									"variable": [
										{
											"key": "mode",
											"value": "mode2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Susan - Vanilla GPT-4 - Mode 2 : phase2-vanilla4o-mode2-01",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*\r",
											"const requestBody = JSON.parse(pm.request.body.raw);\r",
											"if (requestBody.content && requestBody.content.items) {\r",
											"    requestBody.content.items.forEach(item => {\r",
											"        if (item.classifications) {\r",
											"            item.classifications.forEach(classification => {\r",
											"                console.log(`${item.itemId} ~ ${classification.name} ~ ${classification.selected}`);\r",
											"            });\r",
											"        }\r",
											"    });\r",
											"}\r",
											"*/\r",
											"\r",
											"\r",
											"let responseJson = pm.response.json();\r",
											"let jobId = responseJson.job_id;\r",
											"let mode = responseJson.mode;\r",
											"\r",
											"pm.environment.set(\"last_eval_job_id\", jobId);\r",
											"pm.environment.set(\"last_eval_mode\", mode);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"Xmodel35\":\"{{eval_model_vanilla_35}}\",\r\n   \"Xmodel4\":\"{{eval_model_vanilla_4}}\",\r\n   \"XmodelBase\":\"{{ft_model_id_base_mode2}}\",\r\n   \"XmodelExt\":\"{{ft_model_id_extended_current_agent}}\",\r\n   \"model\":\"{{eval_model_vanilla_4o}}\",\r\n   \"tag_source\":\"{{eval_tag_source}}\",\r\n   \"tags_dest\":[\r\n      \"phase2-vanilla4o-mode2-01\"\r\n   ],\r\n   \"persona\":{{current_agent_persona_json}},\r\n   \"perspectives\":[{{perspective_json_classification}}],\r\n   \"is_exclude_existing\":true,\r\n   \"is_most_recent\":false,\r\n   \"last_n_hours\":null,\r\n   \"by_uuid\":true,\r\n   \"subset_tag\":\"phase2\",\r\n   \"subset_percentX\":25,\r\n   \"subset_percent\":40,\r\n   \"openai_params\":{\r\n      \"max_tokens\": {{eval_max_tokens}},\r\n      \"presence_penalty\": {{eval_presence_penalty}},\r\n      \"temperature\": {{eval_temperature}}\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/eval/process-evals/:mode?client_id={{current_agent_id}}&async=true&items_to_process=150",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"eval",
										"process-evals",
										":mode"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "async",
											"value": "true"
										},
										{
											"key": "dry_run",
											"value": "true",
											"disabled": true
										},
										{
											"key": "items_to_process",
											"value": "150"
										}
									],
									"variable": [
										{
											"key": "mode",
											"value": "mode2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Susan - Vanilla GPT-4 - Mode 3 : phase2-vanilla4-mode3-01",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*\r",
											"const requestBody = JSON.parse(pm.request.body.raw);\r",
											"if (requestBody.content && requestBody.content.items) {\r",
											"    requestBody.content.items.forEach(item => {\r",
											"        if (item.classifications) {\r",
											"            item.classifications.forEach(classification => {\r",
											"                console.log(`${item.itemId} ~ ${classification.name} ~ ${classification.selected}`);\r",
											"            });\r",
											"        }\r",
											"    });\r",
											"}\r",
											"*/\r",
											"\r",
											"\r",
											"let responseJson = pm.response.json();\r",
											"let jobId = responseJson.job_id;\r",
											"let mode = responseJson.mode;\r",
											"\r",
											"pm.environment.set(\"last_eval_job_id\", jobId);\r",
											"pm.environment.set(\"last_eval_mode\", mode);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"Xmodel35\":\"{{eval_model_vanilla_35}}\",\r\n   \"Xmodel4\":\"{{eval_model_vanilla_4}}\",\r\n   \"XmodelBase\":\"{{ft_model_id_base_mode2}}\",\r\n   \"XmodelExt\":\"{{ft_model_id_extended_current_agent}}\",\r\n   \"model\":\"{{eval_model_vanilla_4}}\",\r\n   \"tag_source\":\"{{eval_tag_source}}\",\r\n   \"tags_dest\":[\r\n      \"phase2-vanilla4-mode3-01\"\r\n   ],\r\n   \"persona\":{{current_agent_persona_json}},\r\n   \"perspectives\":[{{perspective_json_classification}}],\r\n   \"is_exclude_existing\":true,\r\n   \"is_most_recent\":false,\r\n   \"last_n_hours\":null,\r\n   \"by_uuid\":true,\r\n   \"subset_tag\":\"phase2\",\r\n   \"Xsubset_percent\":30,\r\n   \"subset_percent\":75,\r\n   \"openai_params\":{\r\n      \"max_tokens\": {{eval_max_tokens}},\r\n      \"presence_penalty\": {{eval_presence_penalty}},\r\n      \"temperature\": {{eval_temperature}}\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/eval/process-evals/:mode?client_id={{current_agent_id}}&async=true&items_to_process=75",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"eval",
										"process-evals",
										":mode"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "async",
											"value": "true"
										},
										{
											"key": "dry_run",
											"value": "true",
											"disabled": true
										},
										{
											"key": "items_to_process",
											"value": "75"
										}
									],
									"variable": [
										{
											"key": "mode",
											"value": "mode3"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Susan - Vanilla GPT-4o - Mode 3 : phase2-vanilla4o-mode3-01",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*\r",
											"const requestBody = JSON.parse(pm.request.body.raw);\r",
											"if (requestBody.content && requestBody.content.items) {\r",
											"    requestBody.content.items.forEach(item => {\r",
											"        if (item.classifications) {\r",
											"            item.classifications.forEach(classification => {\r",
											"                console.log(`${item.itemId} ~ ${classification.name} ~ ${classification.selected}`);\r",
											"            });\r",
											"        }\r",
											"    });\r",
											"}\r",
											"*/\r",
											"\r",
											"\r",
											"let responseJson = pm.response.json();\r",
											"let jobId = responseJson.job_id;\r",
											"let mode = responseJson.mode;\r",
											"\r",
											"pm.environment.set(\"last_eval_job_id\", jobId);\r",
											"pm.environment.set(\"last_eval_mode\", mode);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"Xmodel35\":\"{{eval_model_vanilla_35}}\",\r\n   \"Xmodel4\":\"{{eval_model_vanilla_4}}\",\r\n   \"XmodelBase\":\"{{ft_model_id_base_mode2}}\",\r\n   \"XmodelExt\":\"{{ft_model_id_extended_current_agent}}\",\r\n   \"model\":\"{{eval_model_vanilla_4o}}\",\r\n   \"tag_source\":\"{{eval_tag_source}}\",\r\n   \"tags_dest\":[\r\n      \"phase2-vanilla4o-mode3-01\"\r\n   ],\r\n   \"persona\":{{current_agent_persona_json}},\r\n   \"perspectives\":[{{perspective_json_classification}}],\r\n   \"is_exclude_existing\":true,\r\n   \"is_most_recent\":false,\r\n   \"last_n_hours\":null,\r\n   \"by_uuid\":true,\r\n   \"subset_tag\":\"phase2\",\r\n   \"subset_percentX\":30,\r\n   \"subset_percent\":50,\r\n   \"openai_params\":{\r\n      \"max_tokens\": {{eval_max_tokens}},\r\n      \"presence_penalty\": {{eval_presence_penalty}},\r\n      \"temperature\": {{eval_temperature}}\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/eval/process-evals/:mode?client_id={{current_agent_id}}&async=true&items_to_process=75",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"eval",
										"process-evals",
										":mode"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "async",
											"value": "true"
										},
										{
											"key": "dry_run",
											"value": "true",
											"disabled": true
										},
										{
											"key": "items_to_process",
											"value": "75"
										}
									],
									"variable": [
										{
											"key": "mode",
											"value": "mode3"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									"console.log(\"AWAG Data/Evaluation/Susan\");\r",
									"\r",
									"var currentAgent = 'susan'\r",
									"\r",
									"pm.variables.set('current_agent', currentAgent);\r",
									"\r",
									"//console.log(\"function_sanitiseStringForJson: \" + pm.globals.get(\"function_sanitiseStringForJson\"));\r",
									"\r",
									"var sanitiseStringForJsonStr =  pm.globals.get(\"function_sanitiseStringForJson\")\r",
									"//console.log(\"function_sanitiseStringForJson: \" + sanitiseStringForJsonStr);\r",
									"var sanitiseStringForJson = eval(sanitiseStringForJsonStr);\r",
									"//console.log(\"sanitiseStringForJson: \" + sanitiseStringForJson);\r",
									"\r",
									"var agentIdVariableName = `agent_id_${currentAgent}`;\r",
									"var personaJsonVariableName = `persona_json_${currentAgent}`;\r",
									"\r",
									"pm.variables.set('agent_id_variable_name', agentIdVariableName);\r",
									"pm.variables.set('persona_json_variable_name', personaJsonVariableName);\r",
									"\r",
									"var agentIdValue = pm.environment.get(agentIdVariableName);\r",
									"pm.variables.set('current_agent_id', agentIdValue);\r",
									"\r",
									"var personaJsonValue = pm.environment.get(personaJsonVariableName);\r",
									"pm.variables.set('current_agent_persona_json', personaJsonValue);\r",
									"\r",
									"\r",
									"pm.variables.set('ft_model_id_extended_current_agent', 'ft:gpt-3.5-turbo-1106:hylozoical:ext-susan-0502:9KOZB8lu');\r",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Kenton",
					"item": [
						{
							"name": "Evaluation Jobs",
							"item": [
								{
									"name": "Get Evaluation Jobs (Kenton) - phase2-vanilla-mode1-01",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/eval/get-evaluation-jobs?client_id={{current_agent_id}}&first_tag_dest=phase2-vanilla-mode1-01&show_info=false",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"eval",
												"get-evaluation-jobs"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "job_id",
													"value": "",
													"disabled": true
												},
												{
													"key": "mode",
													"value": "",
													"disabled": true
												},
												{
													"key": "status",
													"value": "PROCESSING",
													"disabled": true
												},
												{
													"key": "is_error",
													"value": "true",
													"disabled": true
												},
												{
													"key": "tag_source",
													"value": "phase2",
													"disabled": true
												},
												{
													"key": "first_tag_dest",
													"value": "phase2-vanilla-mode1-01"
												},
												{
													"key": "openai_model",
													"value": "{{eval_model_vanilla_4}}",
													"disabled": true
												},
												{
													"key": "show_info",
													"value": "false"
												},
												{
													"key": "show_detail",
													"value": "true",
													"disabled": true
												},
												{
													"key": "last_n_hours",
													"value": "2",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "count",
													"value": "5",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Evaluation Jobs (Kenton) - phase2-vanilla-mode1-02 (FF)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/eval/get-evaluation-jobs?client_id={{current_agent_id}}&first_tag_dest=phase2-vanilla-mode1-02&show_info=false",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"eval",
												"get-evaluation-jobs"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "job_id",
													"value": "",
													"disabled": true
												},
												{
													"key": "mode",
													"value": "",
													"disabled": true
												},
												{
													"key": "status",
													"value": "PROCESSING",
													"disabled": true
												},
												{
													"key": "is_error",
													"value": "true",
													"disabled": true
												},
												{
													"key": "tag_source",
													"value": "phase2",
													"disabled": true
												},
												{
													"key": "first_tag_dest",
													"value": "phase2-vanilla-mode1-02"
												},
												{
													"key": "openai_model",
													"value": "{{eval_model_vanilla_4}}",
													"disabled": true
												},
												{
													"key": "show_info",
													"value": "false"
												},
												{
													"key": "show_detail",
													"value": "true",
													"disabled": true
												},
												{
													"key": "last_n_hours",
													"value": "2",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "count",
													"value": "5",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Evaluation Jobs (Kenton) - phase2-vanilla-mode2-01",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/eval/get-evaluation-jobs?client_id={{current_agent_id}}&first_tag_dest=phase2-vanilla-mode2-01&show_info=false",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"eval",
												"get-evaluation-jobs"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "job_id",
													"value": "",
													"disabled": true
												},
												{
													"key": "mode",
													"value": "",
													"disabled": true
												},
												{
													"key": "status",
													"value": "PROCESSING",
													"disabled": true
												},
												{
													"key": "is_error",
													"value": "true",
													"disabled": true
												},
												{
													"key": "tag_source",
													"value": "phase2",
													"disabled": true
												},
												{
													"key": "first_tag_dest",
													"value": "phase2-vanilla-mode2-01"
												},
												{
													"key": "openai_model",
													"value": "{{eval_model_vanilla_4}}",
													"disabled": true
												},
												{
													"key": "show_info",
													"value": "false"
												},
												{
													"key": "show_detail",
													"value": "true",
													"disabled": true
												},
												{
													"key": "last_n_hours",
													"value": "2",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "count",
													"value": "5",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Evaluation Jobs (Kenton) - phase2-vanilla-mode3-01",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/eval/get-evaluation-jobs?client_id={{current_agent_id}}&first_tag_dest=phase2-vanilla-mode3-01&show_info=false",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"eval",
												"get-evaluation-jobs"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "job_id",
													"value": "",
													"disabled": true
												},
												{
													"key": "mode",
													"value": "",
													"disabled": true
												},
												{
													"key": "status",
													"value": "PROCESSING",
													"disabled": true
												},
												{
													"key": "is_error",
													"value": "true",
													"disabled": true
												},
												{
													"key": "tag_source",
													"value": "phase2",
													"disabled": true
												},
												{
													"key": "first_tag_dest",
													"value": "phase2-vanilla-mode3-01"
												},
												{
													"key": "openai_model",
													"value": "{{eval_model_vanilla_4}}",
													"disabled": true
												},
												{
													"key": "show_info",
													"value": "false"
												},
												{
													"key": "show_detail",
													"value": "true",
													"disabled": true
												},
												{
													"key": "last_n_hours",
													"value": "2",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "count",
													"value": "5",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Evaluation Jobs (Kenton) - phase2-base-mode2-01",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/eval/get-evaluation-jobs?client_id={{current_agent_id}}&first_tag_dest=phase2-base-mode2-01&show_info=false",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"eval",
												"get-evaluation-jobs"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "job_id",
													"value": "",
													"disabled": true
												},
												{
													"key": "mode",
													"value": "",
													"disabled": true
												},
												{
													"key": "status",
													"value": "PROCESSING",
													"disabled": true
												},
												{
													"key": "is_error",
													"value": "true",
													"disabled": true
												},
												{
													"key": "tag_source",
													"value": "phase2",
													"disabled": true
												},
												{
													"key": "first_tag_dest",
													"value": "phase2-base-mode2-01"
												},
												{
													"key": "openai_model",
													"value": "{{eval_model_vanilla_4}}",
													"disabled": true
												},
												{
													"key": "show_info",
													"value": "false"
												},
												{
													"key": "show_detail",
													"value": "true",
													"disabled": true
												},
												{
													"key": "last_n_hours",
													"value": "2",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "count",
													"value": "5",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Evaluation Jobs (Kenton) - phase2-base-mode3-01",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/eval/get-evaluation-jobs?client_id={{current_agent_id}}&first_tag_dest=phase2-base-mode3-01",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"eval",
												"get-evaluation-jobs"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "job_id",
													"value": "",
													"disabled": true
												},
												{
													"key": "mode",
													"value": "",
													"disabled": true
												},
												{
													"key": "status",
													"value": "PROCESSING",
													"disabled": true
												},
												{
													"key": "is_error",
													"value": "true",
													"disabled": true
												},
												{
													"key": "tag_source",
													"value": "phase2",
													"disabled": true
												},
												{
													"key": "first_tag_dest",
													"value": "phase2-base-mode3-01"
												},
												{
													"key": "openai_model",
													"value": "{{eval_model_vanilla_4}}",
													"disabled": true
												},
												{
													"key": "show_info",
													"value": "false",
													"disabled": true
												},
												{
													"key": "show_detail",
													"value": "true",
													"disabled": true
												},
												{
													"key": "last_n_hours",
													"value": "2",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "count",
													"value": "5",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Evaluation Jobs (Kenton) - phase2-ext-mode3-01",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/eval/get-evaluation-jobs?client_id={{current_agent_id}}&first_tag_dest=phase2-ext-mode3-01&show_info=false",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"eval",
												"get-evaluation-jobs"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "job_id",
													"value": "",
													"disabled": true
												},
												{
													"key": "mode",
													"value": "",
													"disabled": true
												},
												{
													"key": "status",
													"value": "PROCESSING",
													"disabled": true
												},
												{
													"key": "is_error",
													"value": "true",
													"disabled": true
												},
												{
													"key": "tag_source",
													"value": "phase2",
													"disabled": true
												},
												{
													"key": "first_tag_dest",
													"value": "phase2-ext-mode3-01"
												},
												{
													"key": "openai_model",
													"value": "{{eval_model_vanilla_4}}",
													"disabled": true
												},
												{
													"key": "show_info",
													"value": "false"
												},
												{
													"key": "show_detail",
													"value": "true",
													"disabled": true
												},
												{
													"key": "last_n_hours",
													"value": "2",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "count",
													"value": "5",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Evaluation Jobs (Kenton) - phase2-vanilla4-mode2-01",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/eval/get-evaluation-jobs?client_id={{current_agent_id}}&first_tag_dest=phase2-vanilla4-mode2-01&show_info=false",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"eval",
												"get-evaluation-jobs"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "job_id",
													"value": "",
													"disabled": true
												},
												{
													"key": "mode",
													"value": "",
													"disabled": true
												},
												{
													"key": "status",
													"value": "PROCESSING",
													"disabled": true
												},
												{
													"key": "is_error",
													"value": "true",
													"disabled": true
												},
												{
													"key": "tag_source",
													"value": "phase2",
													"disabled": true
												},
												{
													"key": "first_tag_dest",
													"value": "phase2-vanilla4-mode2-01"
												},
												{
													"key": "openai_model",
													"value": "{{eval_model_vanilla_4}}",
													"disabled": true
												},
												{
													"key": "show_info",
													"value": "false"
												},
												{
													"key": "show_detail",
													"value": "true",
													"disabled": true
												},
												{
													"key": "last_n_hours",
													"value": "2",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "count",
													"value": "5",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Evaluation Jobs (Kenton) - phase2-vanilla4-mode3-01",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/eval/get-evaluation-jobs?client_id={{current_agent_id}}&first_tag_dest=phase2-vanilla4-mode3-01&show_info=false",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"eval",
												"get-evaluation-jobs"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "job_id",
													"value": "",
													"disabled": true
												},
												{
													"key": "mode",
													"value": "",
													"disabled": true
												},
												{
													"key": "status",
													"value": "PROCESSING",
													"disabled": true
												},
												{
													"key": "is_error",
													"value": "true",
													"disabled": true
												},
												{
													"key": "tag_source",
													"value": "phase2",
													"disabled": true
												},
												{
													"key": "first_tag_dest",
													"value": "phase2-vanilla4-mode3-01"
												},
												{
													"key": "openai_model",
													"value": "{{eval_model_vanilla_4}}",
													"disabled": true
												},
												{
													"key": "show_info",
													"value": "false"
												},
												{
													"key": "show_detail",
													"value": "true",
													"disabled": true
												},
												{
													"key": "last_n_hours",
													"value": "2",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "count",
													"value": "5",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Evaluation Jobs (Kenton) - phase2-vanilla4o-mode2-01",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/eval/get-evaluation-jobs?client_id={{current_agent_id}}&first_tag_dest=phase2-vanilla4o-mode2-01&show_info=false",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"eval",
												"get-evaluation-jobs"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "job_id",
													"value": "",
													"disabled": true
												},
												{
													"key": "mode",
													"value": "",
													"disabled": true
												},
												{
													"key": "status",
													"value": "PROCESSING",
													"disabled": true
												},
												{
													"key": "is_error",
													"value": "true",
													"disabled": true
												},
												{
													"key": "tag_source",
													"value": "phase2",
													"disabled": true
												},
												{
													"key": "first_tag_dest",
													"value": "phase2-vanilla4o-mode2-01"
												},
												{
													"key": "openai_model",
													"value": "{{eval_model_vanilla_4o}}",
													"disabled": true
												},
												{
													"key": "show_info",
													"value": "false"
												},
												{
													"key": "show_detail",
													"value": "true",
													"disabled": true
												},
												{
													"key": "last_n_hours",
													"value": "2",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "count",
													"value": "5",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Evaluation Jobs (Kenton) - phase2-vanilla4o-mode3-01",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/eval/get-evaluation-jobs?client_id={{current_agent_id}}&first_tag_dest=phase2-vanilla4o-mode3-01&show_info=false",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"eval",
												"get-evaluation-jobs"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "job_id",
													"value": "",
													"disabled": true
												},
												{
													"key": "mode",
													"value": "",
													"disabled": true
												},
												{
													"key": "status",
													"value": "PROCESSING",
													"disabled": true
												},
												{
													"key": "is_error",
													"value": "true",
													"disabled": true
												},
												{
													"key": "tag_source",
													"value": "phase2",
													"disabled": true
												},
												{
													"key": "first_tag_dest",
													"value": "phase2-vanilla4o-mode3-01"
												},
												{
													"key": "openai_model",
													"value": "{{eval_model_vanilla_4o}}",
													"disabled": true
												},
												{
													"key": "show_info",
													"value": "false"
												},
												{
													"key": "show_detail",
													"value": "true",
													"disabled": true
												},
												{
													"key": "last_n_hours",
													"value": "2",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "count",
													"value": "5",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Query Evaluations (Kenton)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/eval/process-evals/:mode/:job_id?client_id={{current_agent_id}}",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"eval",
										"process-evals",
										":mode",
										":job_id"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										}
									],
									"variable": [
										{
											"key": "mode",
											"value": "{{last_eval_mode}}"
										},
										{
											"key": "job_id",
											"value": "{{last_eval_job_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Evaluation Jobs (Kenton)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/eval/get-evaluation-jobs?client_id={{current_agent_id}}&show_info=false",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"eval",
										"get-evaluation-jobs"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "job_id",
											"value": "",
											"disabled": true
										},
										{
											"key": "mode",
											"value": "",
											"disabled": true
										},
										{
											"key": "status",
											"value": "PROCESSING",
											"disabled": true
										},
										{
											"key": "is_error",
											"value": "true",
											"disabled": true
										},
										{
											"key": "tag_source",
											"value": "phase2",
											"disabled": true
										},
										{
											"key": "first_tag_dest",
											"value": "phase2-vanilla4-mode2-01",
											"disabled": true
										},
										{
											"key": "openai_model",
											"value": "{{eval_model_vanilla_4}}",
											"disabled": true
										},
										{
											"key": "show_info",
											"value": "false"
										},
										{
											"key": "show_detail",
											"value": "true",
											"disabled": true
										},
										{
											"key": "last_n_hours",
											"value": "2",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1",
											"disabled": true
										},
										{
											"key": "count",
											"value": "1",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Kenton - Vanilla GPT-3.5 - Mode 1 : phase2-vanilla-mode1-01",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*\r",
											"const requestBody = JSON.parse(pm.request.body.raw);\r",
											"if (requestBody.content && requestBody.content.items) {\r",
											"    requestBody.content.items.forEach(item => {\r",
											"        if (item.classifications) {\r",
											"            item.classifications.forEach(classification => {\r",
											"                console.log(`${item.itemId} ~ ${classification.name} ~ ${classification.selected}`);\r",
											"            });\r",
											"        }\r",
											"    });\r",
											"}\r",
											"*/\r",
											"\r",
											"\r",
											"let responseJson = pm.response.json();\r",
											"let jobId = responseJson.job_id;\r",
											"let mode = responseJson.mode;\r",
											"\r",
											"pm.environment.set(\"last_eval_job_id\", jobId);\r",
											"pm.environment.set(\"last_eval_mode\", mode);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"Xmodel35\":\"{{eval_model_vanilla_35}}\",\r\n   \"Xmodel4\":\"{{eval_model_vanilla_4}}\",\r\n   \"XmodelBase\":\"{{ft_model_id_base_mode2}}\",\r\n   \"XmodelExt\":\"{{ft_model_id_extended_current_agent}}\",\r\n   \"model\":\"{{eval_model_vanilla_35}}\",\r\n   \"tag_source\":\"{{eval_tag_source}}\",\r\n   \"tags_dest\":[\r\n      \"phase2-vanilla-mode1-01\"\r\n   ],\r\n   \"persona\":{{current_agent_persona_json}},\r\n   \"perspectives\":[{{perspective_json_classification}}],\r\n   \"is_exclude_existing\":true,\r\n   \"is_most_recent\":false,\r\n   \"last_n_hours\":null,\r\n   \"by_uuid\":true,\r\n   \"subset_tag\":\"phase2\",\r\n   \"subset_percent\":30,\r\n   \"openai_params\":{\r\n      \"max_tokens\": {{eval_max_tokens}},\r\n      \"presence_penalty\": {{eval_presence_penalty}},\r\n      \"temperature\": {{eval_temperature}}\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/eval/process-evals/:mode?client_id={{current_agent_id}}&async=true&items_to_process=200",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"eval",
										"process-evals",
										":mode"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "async",
											"value": "true"
										},
										{
											"key": "dry_run",
											"value": "true",
											"disabled": true
										},
										{
											"key": "items_to_process",
											"value": "200"
										}
									],
									"variable": [
										{
											"key": "mode",
											"value": "mode1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Kenton - Vanilla GPT-3.5 - Mode 1 : phase2-vanilla-mode1-02 (FF)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*\r",
											"const requestBody = JSON.parse(pm.request.body.raw);\r",
											"if (requestBody.content && requestBody.content.items) {\r",
											"    requestBody.content.items.forEach(item => {\r",
											"        if (item.classifications) {\r",
											"            item.classifications.forEach(classification => {\r",
											"                console.log(`${item.itemId} ~ ${classification.name} ~ ${classification.selected}`);\r",
											"            });\r",
											"        }\r",
											"    });\r",
											"}\r",
											"*/\r",
											"\r",
											"\r",
											"let responseJson = pm.response.json();\r",
											"let jobId = responseJson.job_id;\r",
											"let mode = responseJson.mode;\r",
											"\r",
											"pm.environment.set(\"last_eval_job_id\", jobId);\r",
											"pm.environment.set(\"last_eval_mode\", mode);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"Xmodel35\":\"{{eval_model_vanilla_35}}\",\r\n   \"Xmodel4\":\"{{eval_model_vanilla_4}}\",\r\n   \"XmodelBase\":\"{{ft_model_id_base_mode2}}\",\r\n   \"XmodelExt\":\"{{ft_model_id_extended_current_agent}}\",\r\n   \"model\":\"{{eval_model_vanilla_35}}\",\r\n   \"lightweight_mode\": false,\r\n   \"tag_source\":\"{{eval_tag_source}}\",\r\n   \"tags_dest\":[\r\n      \"phase2-vanilla-mode1-02\"\r\n   ],\r\n   \"persona\":{{current_agent_persona_json}},\r\n   \"perspectives\":[{{perspective_json_classification}}],\r\n   \"is_exclude_existing\":true,\r\n   \"is_most_recent\":false,\r\n   \"last_n_hours\":null,\r\n   \"by_uuid\":true,\r\n   \"subset_tag\":\"phase2\",\r\n   \"subset_percent\":30,\r\n   \"openai_params\":{\r\n      \"max_tokens\": {{eval_max_tokens}},\r\n      \"presence_penalty\": {{eval_presence_penalty}},\r\n      \"temperature\": {{eval_temperature}}\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/eval/process-evals/:mode?client_id={{current_agent_id}}&async=true&items_to_process=300",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"eval",
										"process-evals",
										":mode"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "async",
											"value": "true"
										},
										{
											"key": "dry_run",
											"value": "true",
											"disabled": true
										},
										{
											"key": "items_to_process",
											"value": "300"
										}
									],
									"variable": [
										{
											"key": "mode",
											"value": "mode1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Kenton - Vanilla GPT-3.5 - Mode 2 : phase2-vanilla-mode2-01",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*\r",
											"const requestBody = JSON.parse(pm.request.body.raw);\r",
											"if (requestBody.content && requestBody.content.items) {\r",
											"    requestBody.content.items.forEach(item => {\r",
											"        if (item.classifications) {\r",
											"            item.classifications.forEach(classification => {\r",
											"                console.log(`${item.itemId} ~ ${classification.name} ~ ${classification.selected}`);\r",
											"            });\r",
											"        }\r",
											"    });\r",
											"}\r",
											"*/\r",
											"\r",
											"\r",
											"let responseJson = pm.response.json();\r",
											"let jobId = responseJson.job_id;\r",
											"let mode = responseJson.mode;\r",
											"\r",
											"pm.environment.set(\"last_eval_job_id\", jobId);\r",
											"pm.environment.set(\"last_eval_mode\", mode);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"Xmodel35\":\"{{eval_model_vanilla_35}}\",\r\n   \"Xmodel4\":\"{{eval_model_vanilla_4}}\",\r\n   \"XmodelBase\":\"{{ft_model_id_base_mode2}}\",\r\n   \"XmodelExt\":\"{{ft_model_id_extended_current_agent}}\",\r\n   \"model\":\"{{eval_model_vanilla_35}}\",\r\n   \"tag_source\":\"{{eval_tag_source}}\",\r\n   \"tags_dest\":[\r\n      \"phase2-vanilla-mode2-01\"\r\n   ],\r\n   \"persona\":{{current_agent_persona_json}},\r\n   \"perspectives\":[{{perspective_json_classification}}],\r\n   \"is_exclude_existing\":true,\r\n   \"is_most_recent\":false,\r\n   \"last_n_hours\":null,\r\n   \"by_uuid\":true,\r\n   \"subset_tag\":\"phase2\",\r\n   \"subset_percent\":30,\r\n   \"openai_params\":{\r\n      \"max_tokens\": {{eval_max_tokens}},\r\n      \"presence_penalty\": {{eval_presence_penalty}},\r\n      \"temperature\": {{eval_temperature}}\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/eval/process-evals/:mode?client_id={{current_agent_id}}&async=true&items_to_process=200",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"eval",
										"process-evals",
										":mode"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "async",
											"value": "true"
										},
										{
											"key": "dry_run",
											"value": "true",
											"disabled": true
										},
										{
											"key": "items_to_process",
											"value": "200"
										}
									],
									"variable": [
										{
											"key": "mode",
											"value": "mode2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Kenton - Vanilla GPT-3.5 - Mode 3 : phase2-vanilla-mode3-01",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*\r",
											"const requestBody = JSON.parse(pm.request.body.raw);\r",
											"if (requestBody.content && requestBody.content.items) {\r",
											"    requestBody.content.items.forEach(item => {\r",
											"        if (item.classifications) {\r",
											"            item.classifications.forEach(classification => {\r",
											"                console.log(`${item.itemId} ~ ${classification.name} ~ ${classification.selected}`);\r",
											"            });\r",
											"        }\r",
											"    });\r",
											"}\r",
											"*/\r",
											"\r",
											"\r",
											"let responseJson = pm.response.json();\r",
											"let jobId = responseJson.job_id;\r",
											"let mode = responseJson.mode;\r",
											"\r",
											"pm.environment.set(\"last_eval_job_id\", jobId);\r",
											"pm.environment.set(\"last_eval_mode\", mode);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"Xmodel35\":\"{{eval_model_vanilla_35}}\",\r\n   \"Xmodel4\":\"{{eval_model_vanilla_4}}\",\r\n   \"XmodelBase\":\"{{ft_model_id_base_mode2}}\",\r\n   \"XmodelExt\":\"{{ft_model_id_extended_current_agent}}\",\r\n   \"model\":\"{{eval_model_vanilla_35}}\",\r\n   \"tag_source\":\"{{eval_tag_source}}\",\r\n   \"tags_dest\":[\r\n      \"phase2-vanilla-mode3-01\"\r\n   ],\r\n   \"persona\":{{current_agent_persona_json}},\r\n   \"perspectives\":[{{perspective_json_classification}}],\r\n   \"is_exclude_existing\":true,\r\n   \"is_most_recent\":false,\r\n   \"last_n_hours\":null,\r\n   \"by_uuid\":true,\r\n   \"subset_tag\":\"phase2\",\r\n   \"XXsubset_percent\":30,\r\n   \"subset_percent\":50,\r\n   \"openai_params\":{\r\n      \"max_tokens\": {{eval_max_tokens}},\r\n      \"presence_penalty\": {{eval_presence_penalty}},\r\n      \"temperature\": {{eval_temperature}}\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/eval/process-evals/:mode?client_id={{current_agent_id}}&async=true&items_to_process=200",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"eval",
										"process-evals",
										":mode"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "async",
											"value": "true"
										},
										{
											"key": "dry_run",
											"value": "true",
											"disabled": true
										},
										{
											"key": "items_to_process",
											"value": "200"
										}
									],
									"variable": [
										{
											"key": "mode",
											"value": "mode3"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Kenton - Base GPT-3.5 - Mode 2 : phase2-base-mode2-01",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*\r",
											"const requestBody = JSON.parse(pm.request.body.raw);\r",
											"if (requestBody.content && requestBody.content.items) {\r",
											"    requestBody.content.items.forEach(item => {\r",
											"        if (item.classifications) {\r",
											"            item.classifications.forEach(classification => {\r",
											"                console.log(`${item.itemId} ~ ${classification.name} ~ ${classification.selected}`);\r",
											"            });\r",
											"        }\r",
											"    });\r",
											"}\r",
											"*/\r",
											"\r",
											"\r",
											"let responseJson = pm.response.json();\r",
											"let jobId = responseJson.job_id;\r",
											"let mode = responseJson.mode;\r",
											"\r",
											"pm.environment.set(\"last_eval_job_id\", jobId);\r",
											"pm.environment.set(\"last_eval_mode\", mode);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"Xmodel35\":\"{{eval_model_vanilla_35}}\",\r\n   \"Xmodel4\":\"{{eval_model_vanilla_4}}\",\r\n   \"XmodelBase2\":\"{{ft_model_id_base_mode2}}\",\r\n   \"XmodelBase3\":\"{{ft_model_id_base_mode3}}\",\r\n   \"XmodelExt\":\"{{ft_model_id_extended_current_agent}}\",\r\n   \"model\":\"{{ft_model_id_base_mode2}}\",\r\n   \"tag_source\":\"{{eval_tag_source}}\",\r\n   \"tags_dest\":[\r\n      \"phase2-base-mode2-01\"\r\n   ],\r\n   \"persona\":{{current_agent_persona_json}},\r\n   \"perspectives\":[{{perspective_json_classification}}],\r\n   \"is_exclude_existing\":true,\r\n   \"is_most_recent\":false,\r\n   \"last_n_hours\":null,\r\n   \"by_uuid\":true,\r\n   \"subset_tag\":\"phase2\",\r\n   \"subset_percent\":20,\r\n   \"openai_params\":{\r\n      \"max_tokens\": {{eval_max_tokens}},\r\n      \"presence_penalty\": {{eval_presence_penalty}},\r\n      \"temperature\": {{eval_temperature}}\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/eval/process-evals/:mode?client_id={{current_agent_id}}&async=true&items_to_process=100",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"eval",
										"process-evals",
										":mode"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "async",
											"value": "true"
										},
										{
											"key": "dry_run",
											"value": "true",
											"disabled": true
										},
										{
											"key": "items_to_process",
											"value": "100"
										}
									],
									"variable": [
										{
											"key": "mode",
											"value": "mode2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Kenton - Base GPT-3.5 - Mode 3 : phase2-base-mode3-01",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*\r",
											"const requestBody = JSON.parse(pm.request.body.raw);\r",
											"if (requestBody.content && requestBody.content.items) {\r",
											"    requestBody.content.items.forEach(item => {\r",
											"        if (item.classifications) {\r",
											"            item.classifications.forEach(classification => {\r",
											"                console.log(`${item.itemId} ~ ${classification.name} ~ ${classification.selected}`);\r",
											"            });\r",
											"        }\r",
											"    });\r",
											"}\r",
											"*/\r",
											"\r",
											"\r",
											"let responseJson = pm.response.json();\r",
											"let jobId = responseJson.job_id;\r",
											"let mode = responseJson.mode;\r",
											"\r",
											"pm.environment.set(\"last_eval_job_id\", jobId);\r",
											"pm.environment.set(\"last_eval_mode\", mode);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"Xmodel35\":\"{{eval_model_vanilla_35}}\",\r\n   \"Xmodel4\":\"{{eval_model_vanilla_4}}\",\r\n   \"XmodelBase2\":\"{{ft_model_id_base_mode2}}\",\r\n   \"XmodelBase3\":\"{{ft_model_id_base_mode3}}\",\r\n   \"XmodelExt\":\"{{ft_model_id_extended_current_agent}}\",\r\n   \"model\":\"{{ft_model_id_base_mode3}}\",\r\n   \"tag_source\":\"{{eval_tag_source}}\",\r\n   \"tags_dest\":[\r\n      \"phase2-base-mode3-01\"\r\n   ],\r\n   \"persona\":{{current_agent_persona_json}},\r\n   \"perspectives\":[{{perspective_json_classification}}],\r\n   \"is_exclude_existing\":true,\r\n   \"is_most_recent\":false,\r\n   \"last_n_hours\":null,\r\n   \"by_uuid\":true,\r\n   \"subset_tag\":\"phase2\",\r\n   \"subset_percent_old1\":20,\r\n   \"subset_percent_old2\":30,\r\n   \"subset_percent\":50,\r\n   \"openai_params\":{\r\n      \"max_tokens\": {{eval_max_tokens}},\r\n      \"presence_penalty\": {{eval_presence_penalty}},\r\n      \"temperature\": {{eval_temperature}}\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/eval/process-evals/:mode?client_id={{current_agent_id}}&async=true&items_to_process=150",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"eval",
										"process-evals",
										":mode"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "async",
											"value": "true"
										},
										{
											"key": "dry_run",
											"value": "true",
											"disabled": true
										},
										{
											"key": "items_to_process",
											"value": "150"
										}
									],
									"variable": [
										{
											"key": "mode",
											"value": "mode3"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Kenton - Ext GPT-3.5 - Mode 3 : phase2-ext-mode3-01",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*\r",
											"const requestBody = JSON.parse(pm.request.body.raw);\r",
											"if (requestBody.content && requestBody.content.items) {\r",
											"    requestBody.content.items.forEach(item => {\r",
											"        if (item.classifications) {\r",
											"            item.classifications.forEach(classification => {\r",
											"                console.log(`${item.itemId} ~ ${classification.name} ~ ${classification.selected}`);\r",
											"            });\r",
											"        }\r",
											"    });\r",
											"}\r",
											"*/\r",
											"\r",
											"\r",
											"let responseJson = pm.response.json();\r",
											"let jobId = responseJson.job_id;\r",
											"let mode = responseJson.mode;\r",
											"\r",
											"pm.environment.set(\"last_eval_job_id\", jobId);\r",
											"pm.environment.set(\"last_eval_mode\", mode);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"Xmodel35\":\"{{eval_model_vanilla_35}}\",\r\n   \"Xmodel4\":\"{{eval_model_vanilla_4}}\",\r\n   \"XmodelBase2\":\"{{ft_model_id_base_mode2}}\",\r\n   \"XmodelBase3\":\"{{ft_model_id_base_mode3}}\",\r\n   \"XmodelExt\":\"{{ft_model_id_extended_current_agent}}\",\r\n   \"model\":\"{{ft_model_id_extended_current_agent}}\",\r\n   \"tag_source\":\"{{eval_tag_source}}\",\r\n   \"tags_dest\":[\r\n      \"phase2-ext-mode3-01\"\r\n   ],\r\n   \"persona\":{{current_agent_persona_json}},\r\n   \"perspectives\":[{{perspective_json_classification}}],\r\n   \"is_exclude_existing\":true,\r\n   \"is_most_recent\":false,\r\n   \"last_n_hours\":null,\r\n   \"by_uuid\":true,\r\n   \"subset_tag\":\"phase2\",\r\n   \"subset_percent_old1\":20,\r\n   \"subset_percent_old2\":30,\r\n   \"subset_percent\":50,\r\n   \"openai_params\":{\r\n      \"max_tokens\": {{eval_max_tokens}},\r\n      \"presence_penalty\": {{eval_presence_penalty}},\r\n      \"temperature\": {{eval_temperature}}\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/eval/process-evals/:mode?client_id={{current_agent_id}}&async=true&items_to_process=100",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"eval",
										"process-evals",
										":mode"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "async",
											"value": "true"
										},
										{
											"key": "dry_run",
											"value": "true",
											"disabled": true
										},
										{
											"key": "items_to_process",
											"value": "100"
										}
									],
									"variable": [
										{
											"key": "mode",
											"value": "mode3"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Kenton - Vanilla GPT-4 - Mode 2 : phase2-vanilla4-mode2-01",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*\r",
											"const requestBody = JSON.parse(pm.request.body.raw);\r",
											"if (requestBody.content && requestBody.content.items) {\r",
											"    requestBody.content.items.forEach(item => {\r",
											"        if (item.classifications) {\r",
											"            item.classifications.forEach(classification => {\r",
											"                console.log(`${item.itemId} ~ ${classification.name} ~ ${classification.selected}`);\r",
											"            });\r",
											"        }\r",
											"    });\r",
											"}\r",
											"*/\r",
											"\r",
											"\r",
											"let responseJson = pm.response.json();\r",
											"let jobId = responseJson.job_id;\r",
											"let mode = responseJson.mode;\r",
											"\r",
											"pm.environment.set(\"last_eval_job_id\", jobId);\r",
											"pm.environment.set(\"last_eval_mode\", mode);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"Xmodel35\":\"{{eval_model_vanilla_35}}\",\r\n   \"Xmodel4\":\"{{eval_model_vanilla_4}}\",\r\n   \"XmodelBase\":\"{{ft_model_id_base_mode2}}\",\r\n   \"XmodelExt\":\"{{ft_model_id_extended_current_agent}}\",\r\n   \"model\":\"{{eval_model_vanilla_4}}\",\r\n   \"tag_source\":\"{{eval_tag_source}}\",\r\n   \"tags_dest\":[\r\n      \"phase2-vanilla4-mode2-01\"\r\n   ],\r\n   \"persona\":{{current_agent_persona_json}},\r\n   \"perspectives\":[{{perspective_json_classification}}],\r\n   \"is_exclude_existing\":true,\r\n   \"is_most_recent\":false,\r\n   \"last_n_hours\":null,\r\n   \"by_uuid\":true,\r\n   \"subset_tag\":\"phase2\",\r\n   \"subset_percent\":30,\r\n   \"openai_params\":{\r\n      \"max_tokens\": {{eval_max_tokens}},\r\n      \"presence_penalty\": {{eval_presence_penalty}},\r\n      \"temperature\": {{eval_temperature}}\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/eval/process-evals/:mode?client_id={{current_agent_id}}&async=true&items_to_process=150",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"eval",
										"process-evals",
										":mode"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "async",
											"value": "true"
										},
										{
											"key": "dry_run",
											"value": "true",
											"disabled": true
										},
										{
											"key": "items_to_process",
											"value": "150"
										}
									],
									"variable": [
										{
											"key": "mode",
											"value": "mode2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Kenton - Vanilla GPT-4 - Mode 3 : phase2-vanilla4-mode3-01",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*\r",
											"const requestBody = JSON.parse(pm.request.body.raw);\r",
											"if (requestBody.content && requestBody.content.items) {\r",
											"    requestBody.content.items.forEach(item => {\r",
											"        if (item.classifications) {\r",
											"            item.classifications.forEach(classification => {\r",
											"                console.log(`${item.itemId} ~ ${classification.name} ~ ${classification.selected}`);\r",
											"            });\r",
											"        }\r",
											"    });\r",
											"}\r",
											"*/\r",
											"\r",
											"\r",
											"let responseJson = pm.response.json();\r",
											"let jobId = responseJson.job_id;\r",
											"let mode = responseJson.mode;\r",
											"\r",
											"pm.environment.set(\"last_eval_job_id\", jobId);\r",
											"pm.environment.set(\"last_eval_mode\", mode);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"Xmodel35\":\"{{eval_model_vanilla_35}}\",\r\n   \"Xmodel4\":\"{{eval_model_vanilla_4}}\",\r\n   \"XmodelBase\":\"{{ft_model_id_base_mode2}}\",\r\n   \"XmodelExt\":\"{{ft_model_id_extended_current_agent}}\",\r\n   \"model\":\"{{eval_model_vanilla_4}}\",\r\n   \"tag_source\":\"{{eval_tag_source}}\",\r\n   \"tags_dest\":[\r\n      \"phase2-vanilla4-mode3-01\"\r\n   ],\r\n   \"persona\":{{current_agent_persona_json}},\r\n   \"perspectives\":[{{perspective_json_classification}}],\r\n   \"is_exclude_existing\":true,\r\n   \"is_most_recent\":false,\r\n   \"last_n_hours\":null,\r\n   \"by_uuid\":true,\r\n   \"subset_tag\":\"phase2\",\r\n   \"subset_percent_old1\":30,\r\n   \"subset_percent\":50,\r\n   \"openai_params\":{\r\n      \"max_tokens\": {{eval_max_tokens}},\r\n      \"presence_penalty\": {{eval_presence_penalty}},\r\n      \"temperature\": {{eval_temperature}}\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/eval/process-evals/:mode?client_id={{current_agent_id}}&async=true&items_to_process=150",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"eval",
										"process-evals",
										":mode"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "async",
											"value": "true"
										},
										{
											"key": "dry_run",
											"value": "true",
											"disabled": true
										},
										{
											"key": "items_to_process",
											"value": "150"
										}
									],
									"variable": [
										{
											"key": "mode",
											"value": "mode3"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Kenton - Vanilla GPT-4 - Mode 2 : phase2-vanilla4o-mode2-01",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*\r",
											"const requestBody = JSON.parse(pm.request.body.raw);\r",
											"if (requestBody.content && requestBody.content.items) {\r",
											"    requestBody.content.items.forEach(item => {\r",
											"        if (item.classifications) {\r",
											"            item.classifications.forEach(classification => {\r",
											"                console.log(`${item.itemId} ~ ${classification.name} ~ ${classification.selected}`);\r",
											"            });\r",
											"        }\r",
											"    });\r",
											"}\r",
											"*/\r",
											"\r",
											"\r",
											"let responseJson = pm.response.json();\r",
											"let jobId = responseJson.job_id;\r",
											"let mode = responseJson.mode;\r",
											"\r",
											"pm.environment.set(\"last_eval_job_id\", jobId);\r",
											"pm.environment.set(\"last_eval_mode\", mode);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"Xmodel35\":\"{{eval_model_vanilla_35}}\",\r\n   \"Xmodel4\":\"{{eval_model_vanilla_4}}\",\r\n   \"XmodelBase\":\"{{ft_model_id_base_mode2}}\",\r\n   \"XmodelExt\":\"{{ft_model_id_extended_current_agent}}\",\r\n   \"model\":\"{{eval_model_vanilla_4o}}\",\r\n   \"tag_source\":\"{{eval_tag_source}}\",\r\n   \"tags_dest\":[\r\n      \"phase2-vanilla4o-mode2-01\"\r\n   ],\r\n   \"persona\":{{current_agent_persona_json}},\r\n   \"perspectives\":[{{perspective_json_classification}}],\r\n   \"is_exclude_existing\":true,\r\n   \"is_most_recent\":false,\r\n   \"last_n_hours\":null,\r\n   \"by_uuid\":true,\r\n   \"subset_tag\":\"phase2\",\r\n   \"subset_percentX\":25,\r\n   \"subset_percent\":40,\r\n   \"openai_params\":{\r\n      \"max_tokens\": {{eval_max_tokens}},\r\n      \"presence_penalty\": {{eval_presence_penalty}},\r\n      \"temperature\": {{eval_temperature}}\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/eval/process-evals/:mode?client_id={{current_agent_id}}&async=true&items_to_process=200",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"eval",
										"process-evals",
										":mode"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "async",
											"value": "true"
										},
										{
											"key": "dry_run",
											"value": "true",
											"disabled": true
										},
										{
											"key": "items_to_process",
											"value": "200"
										}
									],
									"variable": [
										{
											"key": "mode",
											"value": "mode2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Kenton - Vanilla GPT-4 - Mode 3 : phase2-vanilla4o-mode3-01",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*\r",
											"const requestBody = JSON.parse(pm.request.body.raw);\r",
											"if (requestBody.content && requestBody.content.items) {\r",
											"    requestBody.content.items.forEach(item => {\r",
											"        if (item.classifications) {\r",
											"            item.classifications.forEach(classification => {\r",
											"                console.log(`${item.itemId} ~ ${classification.name} ~ ${classification.selected}`);\r",
											"            });\r",
											"        }\r",
											"    });\r",
											"}\r",
											"*/\r",
											"\r",
											"\r",
											"let responseJson = pm.response.json();\r",
											"let jobId = responseJson.job_id;\r",
											"let mode = responseJson.mode;\r",
											"\r",
											"pm.environment.set(\"last_eval_job_id\", jobId);\r",
											"pm.environment.set(\"last_eval_mode\", mode);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"Xmodel35\":\"{{eval_model_vanilla_35}}\",\r\n   \"Xmodel4\":\"{{eval_model_vanilla_4}}\",\r\n   \"XmodelBase\":\"{{ft_model_id_base_mode2}}\",\r\n   \"XmodelExt\":\"{{ft_model_id_extended_current_agent}}\",\r\n   \"model\":\"{{eval_model_vanilla_4o}}\",\r\n   \"tag_source\":\"{{eval_tag_source}}\",\r\n   \"tags_dest\":[\r\n      \"phase2-vanilla4o-mode3-01\"\r\n   ],\r\n   \"persona\":{{current_agent_persona_json}},\r\n   \"perspectives\":[{{perspective_json_classification}}],\r\n   \"is_exclude_existing\":true,\r\n   \"is_most_recent\":false,\r\n   \"last_n_hours\":null,\r\n   \"by_uuid\":true,\r\n   \"subset_tag\":\"phase2\",\r\n   \"subset_percent_old1\":30,\r\n   \"subset_percent\":50,\r\n   \"openai_params\":{\r\n      \"max_tokens\": {{eval_max_tokens}},\r\n      \"presence_penalty\": {{eval_presence_penalty}},\r\n      \"temperature\": {{eval_temperature}}\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/eval/process-evals/:mode?client_id={{current_agent_id}}&async=true&items_to_process=200",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"eval",
										"process-evals",
										":mode"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "async",
											"value": "true"
										},
										{
											"key": "dry_run",
											"value": "true",
											"disabled": true
										},
										{
											"key": "items_to_process",
											"value": "200"
										}
									],
									"variable": [
										{
											"key": "mode",
											"value": "mode3"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									"console.log(\"AWAG Data/Evaluation/Kenton\");\r",
									"\r",
									"var currentAgent = 'kenton'\r",
									"\r",
									"pm.variables.set('current_agent', currentAgent);\r",
									"\r",
									"//console.log(\"function_sanitiseStringForJson: \" + pm.globals.get(\"function_sanitiseStringForJson\"));\r",
									"\r",
									"var sanitiseStringForJsonStr =  pm.globals.get(\"function_sanitiseStringForJson\")\r",
									"//console.log(\"function_sanitiseStringForJson: \" + sanitiseStringForJsonStr);\r",
									"var sanitiseStringForJson = eval(sanitiseStringForJsonStr);\r",
									"//console.log(\"sanitiseStringForJson: \" + sanitiseStringForJson);\r",
									"\r",
									"var agentIdVariableName = `agent_id_${currentAgent}`;\r",
									"var personaJsonVariableName = `persona_json_${currentAgent}`;\r",
									"\r",
									"pm.variables.set('agent_id_variable_name', agentIdVariableName);\r",
									"pm.variables.set('persona_json_variable_name', personaJsonVariableName);\r",
									"\r",
									"var agentIdValue = pm.environment.get(agentIdVariableName);\r",
									"pm.variables.set('current_agent_id', agentIdValue);\r",
									"\r",
									"var personaJsonValue = pm.environment.get(personaJsonVariableName);\r",
									"pm.variables.set('current_agent_persona_json', personaJsonValue);\r",
									"\r",
									"\r",
									"pm.variables.set('ft_model_id_extended_current_agent', 'ft:gpt-3.5-turbo-1106:hylozoical:ext-kenton-0502:9KUNn5hs');\r",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Adam",
					"item": [
						{
							"name": "Evaluation Jobs",
							"item": [
								{
									"name": "Get Evaluation Jobs (Adam) - phase2-vanilla-mode1-01",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/eval/get-evaluation-jobs?client_id={{current_agent_id}}&first_tag_dest=phase2-vanilla-mode1-01&show_info=false",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"eval",
												"get-evaluation-jobs"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "job_id",
													"value": "",
													"disabled": true
												},
												{
													"key": "mode",
													"value": "",
													"disabled": true
												},
												{
													"key": "status",
													"value": "PROCESSING",
													"disabled": true
												},
												{
													"key": "is_error",
													"value": "true",
													"disabled": true
												},
												{
													"key": "tag_source",
													"value": "phase2",
													"disabled": true
												},
												{
													"key": "first_tag_dest",
													"value": "phase2-vanilla-mode1-01"
												},
												{
													"key": "openai_model",
													"value": "{{eval_model_vanilla_4}}",
													"disabled": true
												},
												{
													"key": "show_info",
													"value": "false"
												},
												{
													"key": "show_detail",
													"value": "true",
													"disabled": true
												},
												{
													"key": "last_n_hours",
													"value": "2",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "count",
													"value": "5",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Evaluation Jobs (Adam) - phase2-vanilla-mode1-02 (FF)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/eval/get-evaluation-jobs?client_id={{current_agent_id}}&first_tag_dest=phase2-vanilla-mode1-02&show_info=false",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"eval",
												"get-evaluation-jobs"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "job_id",
													"value": "",
													"disabled": true
												},
												{
													"key": "mode",
													"value": "",
													"disabled": true
												},
												{
													"key": "status",
													"value": "PROCESSING",
													"disabled": true
												},
												{
													"key": "is_error",
													"value": "true",
													"disabled": true
												},
												{
													"key": "tag_source",
													"value": "phase2",
													"disabled": true
												},
												{
													"key": "first_tag_dest",
													"value": "phase2-vanilla-mode1-02"
												},
												{
													"key": "openai_model",
													"value": "{{eval_model_vanilla_4}}",
													"disabled": true
												},
												{
													"key": "show_info",
													"value": "false"
												},
												{
													"key": "show_detail",
													"value": "true",
													"disabled": true
												},
												{
													"key": "last_n_hours",
													"value": "2",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "count",
													"value": "5",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Evaluation Jobs (Adam) - phase2-vanilla-mode2-01",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/eval/get-evaluation-jobs?client_id={{current_agent_id}}&first_tag_dest=phase2-vanilla-mode2-01&show_info=false",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"eval",
												"get-evaluation-jobs"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "job_id",
													"value": "",
													"disabled": true
												},
												{
													"key": "mode",
													"value": "",
													"disabled": true
												},
												{
													"key": "status",
													"value": "PROCESSING",
													"disabled": true
												},
												{
													"key": "is_error",
													"value": "true",
													"disabled": true
												},
												{
													"key": "tag_source",
													"value": "phase2",
													"disabled": true
												},
												{
													"key": "first_tag_dest",
													"value": "phase2-vanilla-mode2-01"
												},
												{
													"key": "openai_model",
													"value": "{{eval_model_vanilla_4}}",
													"disabled": true
												},
												{
													"key": "show_info",
													"value": "false"
												},
												{
													"key": "show_detail",
													"value": "true",
													"disabled": true
												},
												{
													"key": "last_n_hours",
													"value": "2",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "count",
													"value": "5",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Evaluation Jobs (Adam) - phase2-vanilla-mode3-01",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/eval/get-evaluation-jobs?client_id={{current_agent_id}}&first_tag_dest=phase2-vanilla-mode3-01&show_info=false",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"eval",
												"get-evaluation-jobs"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "job_id",
													"value": "",
													"disabled": true
												},
												{
													"key": "mode",
													"value": "",
													"disabled": true
												},
												{
													"key": "status",
													"value": "PROCESSING",
													"disabled": true
												},
												{
													"key": "is_error",
													"value": "true",
													"disabled": true
												},
												{
													"key": "tag_source",
													"value": "phase2",
													"disabled": true
												},
												{
													"key": "first_tag_dest",
													"value": "phase2-vanilla-mode3-01"
												},
												{
													"key": "openai_model",
													"value": "{{eval_model_vanilla_4}}",
													"disabled": true
												},
												{
													"key": "show_info",
													"value": "false"
												},
												{
													"key": "show_detail",
													"value": "true",
													"disabled": true
												},
												{
													"key": "last_n_hours",
													"value": "2",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "count",
													"value": "5",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Evaluation Jobs (Adam) - phase2-base-mode2-01",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/eval/get-evaluation-jobs?client_id={{current_agent_id}}&first_tag_dest=phase2-base-mode2-01&show_info=false",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"eval",
												"get-evaluation-jobs"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "job_id",
													"value": "",
													"disabled": true
												},
												{
													"key": "mode",
													"value": "",
													"disabled": true
												},
												{
													"key": "status",
													"value": "PROCESSING",
													"disabled": true
												},
												{
													"key": "is_error",
													"value": "true",
													"disabled": true
												},
												{
													"key": "tag_source",
													"value": "phase2",
													"disabled": true
												},
												{
													"key": "first_tag_dest",
													"value": "phase2-base-mode2-01"
												},
												{
													"key": "openai_model",
													"value": "{{eval_model_vanilla_4}}",
													"disabled": true
												},
												{
													"key": "show_info",
													"value": "false"
												},
												{
													"key": "show_detail",
													"value": "true",
													"disabled": true
												},
												{
													"key": "last_n_hours",
													"value": "2",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "count",
													"value": "5",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Evaluation Jobs (Adam) - phase2-base-mode3-01",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/eval/get-evaluation-jobs?client_id={{current_agent_id}}&first_tag_dest=phase2-base-mode3-01",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"eval",
												"get-evaluation-jobs"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "job_id",
													"value": "",
													"disabled": true
												},
												{
													"key": "mode",
													"value": "",
													"disabled": true
												},
												{
													"key": "status",
													"value": "PROCESSING",
													"disabled": true
												},
												{
													"key": "is_error",
													"value": "true",
													"disabled": true
												},
												{
													"key": "tag_source",
													"value": "phase2",
													"disabled": true
												},
												{
													"key": "first_tag_dest",
													"value": "phase2-base-mode3-01"
												},
												{
													"key": "openai_model",
													"value": "{{eval_model_vanilla_4}}",
													"disabled": true
												},
												{
													"key": "show_info",
													"value": "false",
													"disabled": true
												},
												{
													"key": "show_detail",
													"value": "true",
													"disabled": true
												},
												{
													"key": "last_n_hours",
													"value": "2",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "count",
													"value": "5",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Evaluation Jobs (Adam) - phase2-ext-mode3-01",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/eval/get-evaluation-jobs?client_id={{current_agent_id}}&first_tag_dest=phase2-ext-mode3-01&show_info=false",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"eval",
												"get-evaluation-jobs"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "job_id",
													"value": "",
													"disabled": true
												},
												{
													"key": "mode",
													"value": "",
													"disabled": true
												},
												{
													"key": "status",
													"value": "PROCESSING",
													"disabled": true
												},
												{
													"key": "is_error",
													"value": "true",
													"disabled": true
												},
												{
													"key": "tag_source",
													"value": "phase2",
													"disabled": true
												},
												{
													"key": "first_tag_dest",
													"value": "phase2-ext-mode3-01"
												},
												{
													"key": "openai_model",
													"value": "{{eval_model_vanilla_4}}",
													"disabled": true
												},
												{
													"key": "show_info",
													"value": "false"
												},
												{
													"key": "show_detail",
													"value": "true",
													"disabled": true
												},
												{
													"key": "last_n_hours",
													"value": "2",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "count",
													"value": "5",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Evaluation Jobs (Adam) - phase2-vanilla4-mode2-01",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/eval/get-evaluation-jobs?client_id={{current_agent_id}}&first_tag_dest=phase2-vanilla4-mode2-01&show_info=false",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"eval",
												"get-evaluation-jobs"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "job_id",
													"value": "",
													"disabled": true
												},
												{
													"key": "mode",
													"value": "",
													"disabled": true
												},
												{
													"key": "status",
													"value": "PROCESSING",
													"disabled": true
												},
												{
													"key": "is_error",
													"value": "true",
													"disabled": true
												},
												{
													"key": "tag_source",
													"value": "phase2",
													"disabled": true
												},
												{
													"key": "first_tag_dest",
													"value": "phase2-vanilla4-mode2-01"
												},
												{
													"key": "openai_model",
													"value": "{{eval_model_vanilla_4}}",
													"disabled": true
												},
												{
													"key": "show_info",
													"value": "false"
												},
												{
													"key": "show_detail",
													"value": "true",
													"disabled": true
												},
												{
													"key": "last_n_hours",
													"value": "2",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "count",
													"value": "5",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Evaluation Jobs (Adam) - phase2-vanilla4-mode3-01",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/eval/get-evaluation-jobs?client_id={{current_agent_id}}&first_tag_dest=phase2-vanilla4-mode3-01&show_info=false",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"eval",
												"get-evaluation-jobs"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "job_id",
													"value": "",
													"disabled": true
												},
												{
													"key": "mode",
													"value": "",
													"disabled": true
												},
												{
													"key": "status",
													"value": "PROCESSING",
													"disabled": true
												},
												{
													"key": "is_error",
													"value": "true",
													"disabled": true
												},
												{
													"key": "tag_source",
													"value": "phase2",
													"disabled": true
												},
												{
													"key": "first_tag_dest",
													"value": "phase2-vanilla4-mode3-01"
												},
												{
													"key": "openai_model",
													"value": "{{eval_model_vanilla_4}}",
													"disabled": true
												},
												{
													"key": "show_info",
													"value": "false"
												},
												{
													"key": "show_detail",
													"value": "true",
													"disabled": true
												},
												{
													"key": "last_n_hours",
													"value": "2",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "count",
													"value": "5",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Evaluation Jobs (Adam) - phase2-vanilla-mode1-02 (FF)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/eval/get-evaluation-jobs?client_id={{current_agent_id}}&first_tag_dest=phase2-vanilla-mode1-02&show_info=false",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"eval",
												"get-evaluation-jobs"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "job_id",
													"value": "",
													"disabled": true
												},
												{
													"key": "mode",
													"value": "",
													"disabled": true
												},
												{
													"key": "status",
													"value": "PROCESSING",
													"disabled": true
												},
												{
													"key": "is_error",
													"value": "true",
													"disabled": true
												},
												{
													"key": "tag_source",
													"value": "phase2",
													"disabled": true
												},
												{
													"key": "first_tag_dest",
													"value": "phase2-vanilla-mode1-02"
												},
												{
													"key": "openai_model",
													"value": "{{eval_model_vanilla_4}}",
													"disabled": true
												},
												{
													"key": "show_info",
													"value": "false"
												},
												{
													"key": "show_detail",
													"value": "true",
													"disabled": true
												},
												{
													"key": "last_n_hours",
													"value": "2",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "count",
													"value": "5",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Evaluation Jobs (Adam) - phase2-vanilla4o-mode2-01",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/eval/get-evaluation-jobs?client_id={{current_agent_id}}&first_tag_dest=phase2-vanilla4o-mode2-01&show_info=false",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"eval",
												"get-evaluation-jobs"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "job_id",
													"value": "",
													"disabled": true
												},
												{
													"key": "mode",
													"value": "",
													"disabled": true
												},
												{
													"key": "status",
													"value": "PROCESSING",
													"disabled": true
												},
												{
													"key": "is_error",
													"value": "true",
													"disabled": true
												},
												{
													"key": "tag_source",
													"value": "phase2",
													"disabled": true
												},
												{
													"key": "first_tag_dest",
													"value": "phase2-vanilla4o-mode2-01"
												},
												{
													"key": "openai_model",
													"value": "{{eval_model_vanilla_4o}}",
													"disabled": true
												},
												{
													"key": "show_info",
													"value": "false"
												},
												{
													"key": "show_detail",
													"value": "true",
													"disabled": true
												},
												{
													"key": "last_n_hours",
													"value": "2",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "count",
													"value": "5",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Evaluation Jobs (Adam) - phase2-vanilla4o-mode3-01",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/eval/get-evaluation-jobs?client_id={{current_agent_id}}&first_tag_dest=phase2-vanilla4o-mode3-01&show_info=false",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"eval",
												"get-evaluation-jobs"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "job_id",
													"value": "",
													"disabled": true
												},
												{
													"key": "mode",
													"value": "",
													"disabled": true
												},
												{
													"key": "status",
													"value": "PROCESSING",
													"disabled": true
												},
												{
													"key": "is_error",
													"value": "true",
													"disabled": true
												},
												{
													"key": "tag_source",
													"value": "phase2",
													"disabled": true
												},
												{
													"key": "first_tag_dest",
													"value": "phase2-vanilla4o-mode3-01"
												},
												{
													"key": "openai_model",
													"value": "{{eval_model_vanilla_4o}}",
													"disabled": true
												},
												{
													"key": "show_info",
													"value": "false"
												},
												{
													"key": "show_detail",
													"value": "true",
													"disabled": true
												},
												{
													"key": "last_n_hours",
													"value": "2",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "count",
													"value": "5",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Query Evaluations (Adam)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/eval/process-evals/:mode/:job_id?client_id={{current_agent_id}}",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"eval",
										"process-evals",
										":mode",
										":job_id"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										}
									],
									"variable": [
										{
											"key": "mode",
											"value": "{{last_eval_mode}}"
										},
										{
											"key": "job_id",
											"value": "{{last_eval_job_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Adam - Vanilla GPT-3.5 - Mode 1 : phase2-vanilla-mode1-01",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*\r",
											"const requestBody = JSON.parse(pm.request.body.raw);\r",
											"if (requestBody.content && requestBody.content.items) {\r",
											"    requestBody.content.items.forEach(item => {\r",
											"        if (item.classifications) {\r",
											"            item.classifications.forEach(classification => {\r",
											"                console.log(`${item.itemId} ~ ${classification.name} ~ ${classification.selected}`);\r",
											"            });\r",
											"        }\r",
											"    });\r",
											"}\r",
											"*/\r",
											"\r",
											"\r",
											"let responseJson = pm.response.json();\r",
											"let jobId = responseJson.job_id;\r",
											"let mode = responseJson.mode;\r",
											"\r",
											"pm.environment.set(\"last_eval_job_id\", jobId);\r",
											"pm.environment.set(\"last_eval_mode\", mode);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"Xmodel35\":\"{{eval_model_vanilla_35}}\",\r\n   \"Xmodel4\":\"{{eval_model_vanilla_4}}\",\r\n   \"XmodelBase\":\"{{ft_model_id_base_mode2}}\",\r\n   \"XmodelExt\":\"{{ft_model_id_extended_current_agent}}\",\r\n   \"model\":\"{{eval_model_vanilla_35}}\",\r\n   \"tag_source\":\"{{eval_tag_source}}\",\r\n   \"tags_dest\":[\r\n      \"phase2-vanilla-mode1-01\"\r\n   ],\r\n   \"persona\":{{current_agent_persona_json}},\r\n   \"perspectives\":[{{perspective_json_classification}}],\r\n   \"is_exclude_existing\":true,\r\n   \"is_most_recent\":false,\r\n   \"last_n_hours\":null,\r\n   \"by_uuid\":true,\r\n   \"subset_tag\":\"phase2\",\r\n   \"subset_percent\":30,\r\n   \"openai_params\":{\r\n      \"max_tokens\": {{eval_max_tokens}},\r\n      \"presence_penalty\": {{eval_presence_penalty}},\r\n      \"temperature\": {{eval_temperature}}\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/eval/process-evals/:mode?client_id={{current_agent_id}}&async=true&items_to_process=200",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"eval",
										"process-evals",
										":mode"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "async",
											"value": "true"
										},
										{
											"key": "dry_run",
											"value": "true",
											"disabled": true
										},
										{
											"key": "items_to_process",
											"value": "200"
										}
									],
									"variable": [
										{
											"key": "mode",
											"value": "mode1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Adam - Vanilla GPT-3.5 - Mode 1 : phase2-vanilla-mode1-02 (FF)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*\r",
											"const requestBody = JSON.parse(pm.request.body.raw);\r",
											"if (requestBody.content && requestBody.content.items) {\r",
											"    requestBody.content.items.forEach(item => {\r",
											"        if (item.classifications) {\r",
											"            item.classifications.forEach(classification => {\r",
											"                console.log(`${item.itemId} ~ ${classification.name} ~ ${classification.selected}`);\r",
											"            });\r",
											"        }\r",
											"    });\r",
											"}\r",
											"*/\r",
											"\r",
											"\r",
											"let responseJson = pm.response.json();\r",
											"let jobId = responseJson.job_id;\r",
											"let mode = responseJson.mode;\r",
											"\r",
											"pm.environment.set(\"last_eval_job_id\", jobId);\r",
											"pm.environment.set(\"last_eval_mode\", mode);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"Xmodel35\":\"{{eval_model_vanilla_35}}\",\r\n   \"Xmodel4\":\"{{eval_model_vanilla_4}}\",\r\n   \"XmodelBase\":\"{{ft_model_id_base_mode2}}\",\r\n   \"XmodelExt\":\"{{ft_model_id_extended_current_agent}}\",\r\n   \"model\":\"{{eval_model_vanilla_35}}\",\r\n   \"lightweight_mode\": false,\r\n   \"tag_source\":\"{{eval_tag_source}}\",\r\n   \"tags_dest\":[\r\n      \"phase2-vanilla-mode1-02\"\r\n   ],\r\n   \"persona\":{{current_agent_persona_json}},\r\n   \"perspectives\":[{{perspective_json_classification}}],\r\n   \"is_exclude_existing\":true,\r\n   \"is_most_recent\":false,\r\n   \"last_n_hours\":null,\r\n   \"by_uuid\":true,\r\n   \"subset_tag\":\"phase2\",\r\n   \"subset_percentX\":30,\r\n   \"subset_percent\":25,\r\n   \"openai_params\":{\r\n      \"max_tokens\": {{eval_max_tokens}},\r\n      \"presence_penalty\": {{eval_presence_penalty}},\r\n      \"temperature\": {{eval_temperature}}\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/eval/process-evals/:mode?client_id={{current_agent_id}}&async=true&items_to_process=200",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"eval",
										"process-evals",
										":mode"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "async",
											"value": "true"
										},
										{
											"key": "dry_run",
											"value": "true",
											"disabled": true
										},
										{
											"key": "items_to_process",
											"value": "200"
										}
									],
									"variable": [
										{
											"key": "mode",
											"value": "mode1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Adam - Vanilla GPT-3.5 - Mode 2 : phase2-vanilla-mode2-01",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*\r",
											"const requestBody = JSON.parse(pm.request.body.raw);\r",
											"if (requestBody.content && requestBody.content.items) {\r",
											"    requestBody.content.items.forEach(item => {\r",
											"        if (item.classifications) {\r",
											"            item.classifications.forEach(classification => {\r",
											"                console.log(`${item.itemId} ~ ${classification.name} ~ ${classification.selected}`);\r",
											"            });\r",
											"        }\r",
											"    });\r",
											"}\r",
											"*/\r",
											"\r",
											"\r",
											"let responseJson = pm.response.json();\r",
											"let jobId = responseJson.job_id;\r",
											"let mode = responseJson.mode;\r",
											"\r",
											"pm.environment.set(\"last_eval_job_id\", jobId);\r",
											"pm.environment.set(\"last_eval_mode\", mode);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"Xmodel35\":\"{{eval_model_vanilla_35}}\",\r\n   \"Xmodel4\":\"{{eval_model_vanilla_4}}\",\r\n   \"XmodelBase\":\"{{ft_model_id_base_mode2}}\",\r\n   \"XmodelExt\":\"{{ft_model_id_extended_current_agent}}\",\r\n   \"model\":\"{{eval_model_vanilla_35}}\",\r\n   \"tag_source\":\"{{eval_tag_source}}\",\r\n   \"tags_dest\":[\r\n      \"phase2-vanilla-mode2-01\"\r\n   ],\r\n   \"persona\":{{current_agent_persona_json}},\r\n   \"perspectives\":[{{perspective_json_classification}}],\r\n   \"is_exclude_existing\":true,\r\n   \"is_most_recent\":false,\r\n   \"last_n_hours\":null,\r\n   \"by_uuid\":true,\r\n   \"subset_tag\":\"phase2\",\r\n   \"subset_percent\":30,\r\n   \"openai_params\":{\r\n      \"max_tokens\": {{eval_max_tokens}},\r\n      \"presence_penalty\": {{eval_presence_penalty}},\r\n      \"temperature\": {{eval_temperature}}\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/eval/process-evals/:mode?client_id={{current_agent_id}}&async=true&items_to_process=200",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"eval",
										"process-evals",
										":mode"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "async",
											"value": "true"
										},
										{
											"key": "dry_run",
											"value": "true",
											"disabled": true
										},
										{
											"key": "items_to_process",
											"value": "200"
										}
									],
									"variable": [
										{
											"key": "mode",
											"value": "mode2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Adam - Vanilla GPT-3.5 - Mode 3 : phase2-vanilla-mode3-01",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*\r",
											"const requestBody = JSON.parse(pm.request.body.raw);\r",
											"if (requestBody.content && requestBody.content.items) {\r",
											"    requestBody.content.items.forEach(item => {\r",
											"        if (item.classifications) {\r",
											"            item.classifications.forEach(classification => {\r",
											"                console.log(`${item.itemId} ~ ${classification.name} ~ ${classification.selected}`);\r",
											"            });\r",
											"        }\r",
											"    });\r",
											"}\r",
											"*/\r",
											"\r",
											"\r",
											"let responseJson = pm.response.json();\r",
											"let jobId = responseJson.job_id;\r",
											"let mode = responseJson.mode;\r",
											"\r",
											"pm.environment.set(\"last_eval_job_id\", jobId);\r",
											"pm.environment.set(\"last_eval_mode\", mode);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"Xmodel35\":\"{{eval_model_vanilla_35}}\",\r\n   \"Xmodel4\":\"{{eval_model_vanilla_4}}\",\r\n   \"XmodelBase\":\"{{ft_model_id_base_mode2}}\",\r\n   \"XmodelExt\":\"{{ft_model_id_extended_current_agent}}\",\r\n   \"model\":\"{{eval_model_vanilla_35}}\",\r\n   \"tag_source\":\"{{eval_tag_source}}\",\r\n   \"tags_dest\":[\r\n      \"phase2-vanilla-mode3-01\"\r\n   ],\r\n   \"persona\":{{current_agent_persona_json}},\r\n   \"perspectives\":[{{perspective_json_classification}}],\r\n   \"is_exclude_existing\":true,\r\n   \"is_most_recent\":false,\r\n   \"last_n_hours\":null,\r\n   \"by_uuid\":true,\r\n   \"subset_tag\":\"phase2\",\r\n   \"subset_percent_old1\":30,\r\n   \"subset_percent\":50,\r\n   \"openai_params\":{\r\n      \"max_tokens\": {{eval_max_tokens}},\r\n      \"presence_penalty\": {{eval_presence_penalty}},\r\n      \"temperature\": {{eval_temperature}}\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/eval/process-evals/:mode?client_id={{current_agent_id}}&async=true&items_to_process=150",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"eval",
										"process-evals",
										":mode"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "async",
											"value": "true"
										},
										{
											"key": "dry_run",
											"value": "true",
											"disabled": true
										},
										{
											"key": "items_to_process",
											"value": "150"
										}
									],
									"variable": [
										{
											"key": "mode",
											"value": "mode3"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Adam - Base GPT-3.5 - Mode 2 : phase2-base-mode2-01",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*\r",
											"const requestBody = JSON.parse(pm.request.body.raw);\r",
											"if (requestBody.content && requestBody.content.items) {\r",
											"    requestBody.content.items.forEach(item => {\r",
											"        if (item.classifications) {\r",
											"            item.classifications.forEach(classification => {\r",
											"                console.log(`${item.itemId} ~ ${classification.name} ~ ${classification.selected}`);\r",
											"            });\r",
											"        }\r",
											"    });\r",
											"}\r",
											"*/\r",
											"\r",
											"\r",
											"let responseJson = pm.response.json();\r",
											"let jobId = responseJson.job_id;\r",
											"let mode = responseJson.mode;\r",
											"\r",
											"pm.environment.set(\"last_eval_job_id\", jobId);\r",
											"pm.environment.set(\"last_eval_mode\", mode);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"Xmodel35\":\"{{eval_model_vanilla_35}}\",\r\n   \"Xmodel4\":\"{{eval_model_vanilla_4}}\",\r\n   \"XmodelBase2\":\"{{ft_model_id_base_mode2}}\",\r\n   \"XmodelBase3\":\"{{ft_model_id_base_mode3}}\",\r\n   \"XmodelExt\":\"{{ft_model_id_extended_current_agent}}\",\r\n   \"model\":\"{{ft_model_id_base_mode2}}\",\r\n   \"tag_source\":\"{{eval_tag_source}}\",\r\n   \"tags_dest\":[\r\n      \"phase2-base-mode2-01\"\r\n   ],\r\n   \"persona\":{{current_agent_persona_json}},\r\n   \"perspectives\":[{{perspective_json_classification}}],\r\n   \"is_exclude_existing\":true,\r\n   \"is_most_recent\":false,\r\n   \"last_n_hours\":null,\r\n   \"by_uuid\":true,\r\n   \"subset_tag\":\"phase2\",\r\n   \"subset_percent\":15,\r\n   \"openai_params\":{\r\n      \"max_tokens\": {{eval_max_tokens}},\r\n      \"presence_penalty\": {{eval_presence_penalty}},\r\n      \"temperature\": {{eval_temperature}}\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/eval/process-evals/:mode?client_id={{current_agent_id}}&async=true&items_to_process=150",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"eval",
										"process-evals",
										":mode"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "async",
											"value": "true"
										},
										{
											"key": "dry_run",
											"value": "true",
											"disabled": true
										},
										{
											"key": "items_to_process",
											"value": "150"
										}
									],
									"variable": [
										{
											"key": "mode",
											"value": "mode2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Adam - Base GPT-3.5 - Mode 3 : phase2-base-mode3-01",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*\r",
											"const requestBody = JSON.parse(pm.request.body.raw);\r",
											"if (requestBody.content && requestBody.content.items) {\r",
											"    requestBody.content.items.forEach(item => {\r",
											"        if (item.classifications) {\r",
											"            item.classifications.forEach(classification => {\r",
											"                console.log(`${item.itemId} ~ ${classification.name} ~ ${classification.selected}`);\r",
											"            });\r",
											"        }\r",
											"    });\r",
											"}\r",
											"*/\r",
											"\r",
											"\r",
											"let responseJson = pm.response.json();\r",
											"let jobId = responseJson.job_id;\r",
											"let mode = responseJson.mode;\r",
											"\r",
											"pm.environment.set(\"last_eval_job_id\", jobId);\r",
											"pm.environment.set(\"last_eval_mode\", mode);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"Xmodel35\":\"{{eval_model_vanilla_35}}\",\r\n   \"Xmodel4\":\"{{eval_model_vanilla_4}}\",\r\n   \"XmodelBase2\":\"{{ft_model_id_base_mode2}}\",\r\n   \"XmodelBase3\":\"{{ft_model_id_base_mode3}}\",\r\n   \"XmodelExt\":\"{{ft_model_id_extended_current_agent}}\",\r\n   \"model\":\"{{ft_model_id_base_mode3}}\",\r\n   \"tag_source\":\"{{eval_tag_source}}\",\r\n   \"tags_dest\":[\r\n      \"phase2-base-mode3-01\"\r\n   ],\r\n   \"persona\":{{current_agent_persona_json}},\r\n   \"perspectives\":[{{perspective_json_classification}}],\r\n   \"is_exclude_existing\":true,\r\n   \"is_most_recent\":false,\r\n   \"last_n_hours\":null,\r\n   \"by_uuid\":true,\r\n   \"subset_tag\":\"phase2\",\r\n   \"subset_percent_old1\":15,\r\n   \"subset_percent\":40,\r\n   \"openai_params\":{\r\n      \"max_tokens\": {{eval_max_tokens}},\r\n      \"presence_penalty\": {{eval_presence_penalty}},\r\n      \"temperature\": {{eval_temperature}}\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/eval/process-evals/:mode?client_id={{current_agent_id}}&async=true&items_to_process=100",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"eval",
										"process-evals",
										":mode"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "async",
											"value": "true"
										},
										{
											"key": "dry_run",
											"value": "true",
											"disabled": true
										},
										{
											"key": "items_to_process",
											"value": "100"
										}
									],
									"variable": [
										{
											"key": "mode",
											"value": "mode3"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Adam - Ext GPT-3.5 - Mode 3 : phase2-ext-mode3-01",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*\r",
											"const requestBody = JSON.parse(pm.request.body.raw);\r",
											"if (requestBody.content && requestBody.content.items) {\r",
											"    requestBody.content.items.forEach(item => {\r",
											"        if (item.classifications) {\r",
											"            item.classifications.forEach(classification => {\r",
											"                console.log(`${item.itemId} ~ ${classification.name} ~ ${classification.selected}`);\r",
											"            });\r",
											"        }\r",
											"    });\r",
											"}\r",
											"*/\r",
											"\r",
											"\r",
											"let responseJson = pm.response.json();\r",
											"let jobId = responseJson.job_id;\r",
											"let mode = responseJson.mode;\r",
											"\r",
											"pm.environment.set(\"last_eval_job_id\", jobId);\r",
											"pm.environment.set(\"last_eval_mode\", mode);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"Xmodel35\":\"{{eval_model_vanilla_35}}\",\r\n   \"Xmodel4\":\"{{eval_model_vanilla_4}}\",\r\n   \"XmodelBase2\":\"{{ft_model_id_base_mode2}}\",\r\n   \"XmodelBase3\":\"{{ft_model_id_base_mode3}}\",\r\n   \"XmodelExt\":\"{{ft_model_id_extended_current_agent}}\",\r\n   \"model\":\"{{ft_model_id_extended_current_agent}}\",\r\n   \"tag_source\":\"{{eval_tag_source}}\",\r\n   \"tags_dest\":[\r\n      \"phase2-ext-mode3-01\"\r\n   ],\r\n   \"persona\":{{current_agent_persona_json}},\r\n   \"perspectives\":[{{perspective_json_classification}}],\r\n   \"is_exclude_existing\":true,\r\n   \"is_most_recent\":false,\r\n   \"last_n_hours\":null,\r\n   \"by_uuid\":true,\r\n   \"subset_tag\":\"phase2\",\r\n   \"subset_percent_old1\":15,\r\n   \"subset_percent\":40,\r\n   \"openai_params\":{\r\n      \"max_tokens\": {{eval_max_tokens}},\r\n      \"presence_penalty\": {{eval_presence_penalty}},\r\n      \"temperature\": {{eval_temperature}}\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/eval/process-evals/:mode?client_id={{current_agent_id}}&async=true&items_to_process=100",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"eval",
										"process-evals",
										":mode"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "async",
											"value": "true"
										},
										{
											"key": "dry_run",
											"value": "true",
											"disabled": true
										},
										{
											"key": "items_to_process",
											"value": "100"
										}
									],
									"variable": [
										{
											"key": "mode",
											"value": "mode3"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Adam - Vanilla GPT-4 - Mode 2 : phase2-vanilla4-mode2-01",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*\r",
											"const requestBody = JSON.parse(pm.request.body.raw);\r",
											"if (requestBody.content && requestBody.content.items) {\r",
											"    requestBody.content.items.forEach(item => {\r",
											"        if (item.classifications) {\r",
											"            item.classifications.forEach(classification => {\r",
											"                console.log(`${item.itemId} ~ ${classification.name} ~ ${classification.selected}`);\r",
											"            });\r",
											"        }\r",
											"    });\r",
											"}\r",
											"*/\r",
											"\r",
											"\r",
											"let responseJson = pm.response.json();\r",
											"let jobId = responseJson.job_id;\r",
											"let mode = responseJson.mode;\r",
											"\r",
											"pm.environment.set(\"last_eval_job_id\", jobId);\r",
											"pm.environment.set(\"last_eval_mode\", mode);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"Xmodel35\":\"{{eval_model_vanilla_35}}\",\r\n   \"Xmodel4\":\"{{eval_model_vanilla_4}}\",\r\n   \"XmodelBase\":\"{{ft_model_id_base_mode2}}\",\r\n   \"XmodelExt\":\"{{ft_model_id_extended_current_agent}}\",\r\n   \"model\":\"{{eval_model_vanilla_4}}\",\r\n   \"tag_source\":\"{{eval_tag_source}}\",\r\n   \"tags_dest\":[\r\n      \"phase2-vanilla4-mode2-01\"\r\n   ],\r\n   \"persona\":{{current_agent_persona_json}},\r\n   \"perspectives\":[{{perspective_json_classification}}],\r\n   \"is_exclude_existing\":true,\r\n   \"is_most_recent\":false,\r\n   \"last_n_hours\":null,\r\n   \"by_uuid\":true,\r\n   \"subset_tag\":\"phase2\",\r\n   \"subset_percent_old1\":25,\r\n   \"subset_percent\":30,\r\n   \"openai_params\":{\r\n      \"max_tokens\": {{eval_max_tokens}},\r\n      \"presence_penalty\": {{eval_presence_penalty}},\r\n      \"temperature\": {{eval_temperature}}\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/eval/process-evals/:mode?client_id={{current_agent_id}}&async=true&items_to_process=100",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"eval",
										"process-evals",
										":mode"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "async",
											"value": "true"
										},
										{
											"key": "dry_run",
											"value": "true",
											"disabled": true
										},
										{
											"key": "items_to_process",
											"value": "100"
										}
									],
									"variable": [
										{
											"key": "mode",
											"value": "mode2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Adam - Vanilla GPT-4 - Mode 3 : phase2-vanilla4-mode3-01",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*\r",
											"const requestBody = JSON.parse(pm.request.body.raw);\r",
											"if (requestBody.content && requestBody.content.items) {\r",
											"    requestBody.content.items.forEach(item => {\r",
											"        if (item.classifications) {\r",
											"            item.classifications.forEach(classification => {\r",
											"                console.log(`${item.itemId} ~ ${classification.name} ~ ${classification.selected}`);\r",
											"            });\r",
											"        }\r",
											"    });\r",
											"}\r",
											"*/\r",
											"\r",
											"\r",
											"let responseJson = pm.response.json();\r",
											"let jobId = responseJson.job_id;\r",
											"let mode = responseJson.mode;\r",
											"\r",
											"pm.environment.set(\"last_eval_job_id\", jobId);\r",
											"pm.environment.set(\"last_eval_mode\", mode);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"Xmodel35\":\"{{eval_model_vanilla_35}}\",\r\n   \"Xmodel4\":\"{{eval_model_vanilla_4}}\",\r\n   \"XmodelBase\":\"{{ft_model_id_base_mode2}}\",\r\n   \"XmodelExt\":\"{{ft_model_id_extended_current_agent}}\",\r\n   \"model\":\"{{eval_model_vanilla_4}}\",\r\n   \"tag_source\":\"{{eval_tag_source}}\",\r\n   \"tags_dest\":[\r\n      \"phase2-vanilla4-mode3-01\"\r\n   ],\r\n   \"persona\":{{current_agent_persona_json}},\r\n   \"perspectives\":[{{perspective_json_classification}}],\r\n   \"is_exclude_existing\":true,\r\n   \"is_most_recent\":false,\r\n   \"last_n_hours\":null,\r\n   \"by_uuid\":true,\r\n   \"subset_tag\":\"phase2\",\r\n   \"subset_percent_old1\":25,\r\n   \"subset_percent\":50,\r\n   \"openai_params\":{\r\n      \"max_tokens\": {{eval_max_tokens}},\r\n      \"presence_penalty\": {{eval_presence_penalty}},\r\n      \"temperature\": {{eval_temperature}}\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/eval/process-evals/:mode?client_id={{current_agent_id}}&async=true&items_to_process=20",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"eval",
										"process-evals",
										":mode"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "async",
											"value": "true"
										},
										{
											"key": "dry_run",
											"value": "true",
											"disabled": true
										},
										{
											"key": "items_to_process",
											"value": "20"
										}
									],
									"variable": [
										{
											"key": "mode",
											"value": "mode3"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Adam - Vanilla GPT-4 - Mode 2 : phase2-vanilla4o-mode2-01",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*\r",
											"const requestBody = JSON.parse(pm.request.body.raw);\r",
											"if (requestBody.content && requestBody.content.items) {\r",
											"    requestBody.content.items.forEach(item => {\r",
											"        if (item.classifications) {\r",
											"            item.classifications.forEach(classification => {\r",
											"                console.log(`${item.itemId} ~ ${classification.name} ~ ${classification.selected}`);\r",
											"            });\r",
											"        }\r",
											"    });\r",
											"}\r",
											"*/\r",
											"\r",
											"\r",
											"let responseJson = pm.response.json();\r",
											"let jobId = responseJson.job_id;\r",
											"let mode = responseJson.mode;\r",
											"\r",
											"pm.environment.set(\"last_eval_job_id\", jobId);\r",
											"pm.environment.set(\"last_eval_mode\", mode);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"Xmodel35\":\"{{eval_model_vanilla_35}}\",\r\n   \"Xmodel4\":\"{{eval_model_vanilla_4}}\",\r\n   \"XmodelBase\":\"{{ft_model_id_base_mode2}}\",\r\n   \"XmodelExt\":\"{{ft_model_id_extended_current_agent}}\",\r\n   \"model\":\"{{eval_model_vanilla_4o}}\",\r\n   \"tag_source\":\"{{eval_tag_source}}\",\r\n   \"tags_dest\":[\r\n      \"phase2-vanilla4o-mode2-01\"\r\n   ],\r\n   \"persona\":{{current_agent_persona_json}},\r\n   \"perspectives\":[{{perspective_json_classification}}],\r\n   \"is_exclude_existing\":true,\r\n   \"is_most_recent\":false,\r\n   \"last_n_hours\":null,\r\n   \"by_uuid\":true,\r\n   \"subset_tag\":\"phase2\",\r\n   \"subset_percent\":30,\r\n   \"subset_percentY\":40,\r\n   \"openai_params\":{\r\n      \"max_tokens\": {{eval_max_tokens}},\r\n      \"presence_penalty\": {{eval_presence_penalty}},\r\n      \"temperature\": {{eval_temperature}}\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/eval/process-evals/:mode?client_id={{current_agent_id}}&async=true&items_to_process=300",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"eval",
										"process-evals",
										":mode"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "async",
											"value": "true"
										},
										{
											"key": "dry_run",
											"value": "true",
											"disabled": true
										},
										{
											"key": "items_to_process",
											"value": "300"
										}
									],
									"variable": [
										{
											"key": "mode",
											"value": "mode2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Adam- Vanilla GPT-4 - Mode 3 : phase2-vanilla4o-mode3-01",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*\r",
											"const requestBody = JSON.parse(pm.request.body.raw);\r",
											"if (requestBody.content && requestBody.content.items) {\r",
											"    requestBody.content.items.forEach(item => {\r",
											"        if (item.classifications) {\r",
											"            item.classifications.forEach(classification => {\r",
											"                console.log(`${item.itemId} ~ ${classification.name} ~ ${classification.selected}`);\r",
											"            });\r",
											"        }\r",
											"    });\r",
											"}\r",
											"*/\r",
											"\r",
											"\r",
											"let responseJson = pm.response.json();\r",
											"let jobId = responseJson.job_id;\r",
											"let mode = responseJson.mode;\r",
											"\r",
											"pm.environment.set(\"last_eval_job_id\", jobId);\r",
											"pm.environment.set(\"last_eval_mode\", mode);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"Xmodel35\":\"{{eval_model_vanilla_35}}\",\r\n   \"Xmodel4\":\"{{eval_model_vanilla_4}}\",\r\n   \"XmodelBase\":\"{{ft_model_id_base_mode2}}\",\r\n   \"XmodelExt\":\"{{ft_model_id_extended_current_agent}}\",\r\n   \"model\":\"{{eval_model_vanilla_4o}}\",\r\n   \"tag_source\":\"{{eval_tag_source}}\",\r\n   \"tags_dest\":[\r\n      \"phase2-vanilla4o-mode3-01\"\r\n   ],\r\n   \"persona\":{{current_agent_persona_json}},\r\n   \"perspectives\":[{{perspective_json_classification}}],\r\n   \"is_exclude_existing\":true,\r\n   \"is_most_recent\":false,\r\n   \"last_n_hours\":null,\r\n   \"by_uuid\":true,\r\n   \"subset_tag\":\"phase2\",\r\n   \"subset_percentX\":30,\r\n   \"subset_percent\":40,\r\n   \"openai_params\":{\r\n      \"max_tokens\": {{eval_max_tokens}},\r\n      \"presence_penalty\": {{eval_presence_penalty}},\r\n      \"temperature\": {{eval_temperature}}\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/eval/process-evals/:mode?client_id={{current_agent_id}}&async=true&items_to_process=100",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"eval",
										"process-evals",
										":mode"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "async",
											"value": "true"
										},
										{
											"key": "dry_run",
											"value": "true",
											"disabled": true
										},
										{
											"key": "items_to_process",
											"value": "100"
										}
									],
									"variable": [
										{
											"key": "mode",
											"value": "mode3"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									"console.log(\"AWAG Data/Evaluation/Adam\");\r",
									"\r",
									"var currentAgent = 'adam'\r",
									"\r",
									"pm.variables.set('current_agent', currentAgent);\r",
									"\r",
									"//console.log(\"function_sanitiseStringForJson: \" + pm.globals.get(\"function_sanitiseStringForJson\"));\r",
									"\r",
									"var sanitiseStringForJsonStr =  pm.globals.get(\"function_sanitiseStringForJson\")\r",
									"//console.log(\"function_sanitiseStringForJson: \" + sanitiseStringForJsonStr);\r",
									"var sanitiseStringForJson = eval(sanitiseStringForJsonStr);\r",
									"//console.log(\"sanitiseStringForJson: \" + sanitiseStringForJson);\r",
									"\r",
									"var agentIdVariableName = `agent_id_${currentAgent}`;\r",
									"var personaJsonVariableName = `persona_json_${currentAgent}`;\r",
									"\r",
									"pm.variables.set('agent_id_variable_name', agentIdVariableName);\r",
									"pm.variables.set('persona_json_variable_name', personaJsonVariableName);\r",
									"\r",
									"var agentIdValue = pm.environment.get(agentIdVariableName);\r",
									"pm.variables.set('current_agent_id', agentIdValue);\r",
									"\r",
									"var personaJsonValue = pm.environment.get(personaJsonVariableName);\r",
									"pm.variables.set('current_agent_persona_json', personaJsonValue);\r",
									"\r",
									"\r",
									"pm.variables.set('ft_model_id_extended_current_agent', 'ft:gpt-3.5-turbo-1106:hylozoical:ext-adam-0502:9KUJQCgZ');\r",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Phoebe",
					"item": [
						{
							"name": "Evaluation Jobs",
							"item": [
								{
									"name": "Get Evaluation Jobs (Phoebe) - phase2-vanilla4-mode2-01",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/eval/get-evaluation-jobs?client_id={{current_agent_id}}&first_tag_dest=phase2-vanilla4-mode2-01&show_info=false",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"eval",
												"get-evaluation-jobs"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "job_id",
													"value": "",
													"disabled": true
												},
												{
													"key": "mode",
													"value": "",
													"disabled": true
												},
												{
													"key": "status",
													"value": "PROCESSING",
													"disabled": true
												},
												{
													"key": "is_error",
													"value": "true",
													"disabled": true
												},
												{
													"key": "tag_source",
													"value": "phase2",
													"disabled": true
												},
												{
													"key": "first_tag_dest",
													"value": "phase2-vanilla4-mode2-01"
												},
												{
													"key": "openai_model",
													"value": "{{eval_model_vanilla_4}}",
													"disabled": true
												},
												{
													"key": "show_info",
													"value": "false"
												},
												{
													"key": "show_detail",
													"value": "true",
													"disabled": true
												},
												{
													"key": "last_n_hours",
													"value": "2",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "count",
													"value": "5",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Evaluation Jobs (Phoebe) - phase2-vanilla4-mode3-01",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/eval/get-evaluation-jobs?client_id={{current_agent_id}}&first_tag_dest=phase2-vanilla4-mode3-01&show_info=false",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"eval",
												"get-evaluation-jobs"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "job_id",
													"value": "",
													"disabled": true
												},
												{
													"key": "mode",
													"value": "",
													"disabled": true
												},
												{
													"key": "status",
													"value": "PROCESSING",
													"disabled": true
												},
												{
													"key": "is_error",
													"value": "true",
													"disabled": true
												},
												{
													"key": "tag_source",
													"value": "phase2",
													"disabled": true
												},
												{
													"key": "first_tag_dest",
													"value": "phase2-vanilla4-mode3-01"
												},
												{
													"key": "openai_model",
													"value": "{{eval_model_vanilla_4}}",
													"disabled": true
												},
												{
													"key": "show_info",
													"value": "false"
												},
												{
													"key": "show_detail",
													"value": "true",
													"disabled": true
												},
												{
													"key": "last_n_hours",
													"value": "2",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "count",
													"value": "5",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Evaluation Jobs (Phoebe) - phase2-vanilla4o-mode2-01",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/eval/get-evaluation-jobs?client_id={{current_agent_id}}&first_tag_dest=phase2-vanilla4o-mode2-01&show_info=false",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"eval",
												"get-evaluation-jobs"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "job_id",
													"value": "",
													"disabled": true
												},
												{
													"key": "mode",
													"value": "",
													"disabled": true
												},
												{
													"key": "status",
													"value": "PROCESSING",
													"disabled": true
												},
												{
													"key": "is_error",
													"value": "true",
													"disabled": true
												},
												{
													"key": "tag_source",
													"value": "phase2",
													"disabled": true
												},
												{
													"key": "first_tag_dest",
													"value": "phase2-vanilla4o-mode2-01"
												},
												{
													"key": "openai_model",
													"value": "{{eval_model_vanilla_4o}}",
													"disabled": true
												},
												{
													"key": "show_info",
													"value": "false"
												},
												{
													"key": "show_detail",
													"value": "true",
													"disabled": true
												},
												{
													"key": "last_n_hours",
													"value": "2",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "count",
													"value": "5",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Evaluation Jobs (Phoebe) - phase2-vanilla4o-mode3-01",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/eval/get-evaluation-jobs?client_id={{current_agent_id}}&first_tag_dest=phase2-vanilla4o-mode3-01&show_info=false",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"eval",
												"get-evaluation-jobs"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "job_id",
													"value": "",
													"disabled": true
												},
												{
													"key": "mode",
													"value": "",
													"disabled": true
												},
												{
													"key": "status",
													"value": "PROCESSING",
													"disabled": true
												},
												{
													"key": "is_error",
													"value": "true",
													"disabled": true
												},
												{
													"key": "tag_source",
													"value": "phase2",
													"disabled": true
												},
												{
													"key": "first_tag_dest",
													"value": "phase2-vanilla4o-mode3-01"
												},
												{
													"key": "openai_model",
													"value": "{{eval_model_vanilla_4o}}",
													"disabled": true
												},
												{
													"key": "show_info",
													"value": "false"
												},
												{
													"key": "show_detail",
													"value": "true",
													"disabled": true
												},
												{
													"key": "last_n_hours",
													"value": "2",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "count",
													"value": "5",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Query Evaluations (Phoebe)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/eval/process-evals/:mode/:job_id?client_id={{current_agent_id}}",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"eval",
										"process-evals",
										":mode",
										":job_id"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										}
									],
									"variable": [
										{
											"key": "mode",
											"value": "{{last_eval_mode}}"
										},
										{
											"key": "job_id",
											"value": "{{last_eval_job_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Phoebe - Vanilla GPT-4 - Mode 2 : phase2-vanilla4-mode2-01",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*\r",
											"const requestBody = JSON.parse(pm.request.body.raw);\r",
											"if (requestBody.content && requestBody.content.items) {\r",
											"    requestBody.content.items.forEach(item => {\r",
											"        if (item.classifications) {\r",
											"            item.classifications.forEach(classification => {\r",
											"                console.log(`${item.itemId} ~ ${classification.name} ~ ${classification.selected}`);\r",
											"            });\r",
											"        }\r",
											"    });\r",
											"}\r",
											"*/\r",
											"\r",
											"\r",
											"let responseJson = pm.response.json();\r",
											"let jobId = responseJson.job_id;\r",
											"let mode = responseJson.mode;\r",
											"\r",
											"pm.environment.set(\"last_eval_job_id\", jobId);\r",
											"pm.environment.set(\"last_eval_mode\", mode);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"Xmodel35\":\"{{eval_model_vanilla_35}}\",\r\n   \"Xmodel4\":\"{{eval_model_vanilla_4}}\",\r\n   \"XmodelBase\":\"{{ft_model_id_base_mode2}}\",\r\n   \"XmodelExt\":\"{{ft_model_id_extended_current_agent}}\",\r\n   \"model\":\"{{eval_model_vanilla_4}}\",\r\n   \"tag_source\":\"{{eval_tag_source}}\",\r\n   \"tags_dest\":[\r\n      \"phase2-vanilla4-mode2-01\"\r\n   ],\r\n   \"persona\":{{current_agent_persona_json}},\r\n   \"perspectives\":[{{perspective_json_classification}}],\r\n   \"is_exclude_existing\":true,\r\n   \"is_most_recent\":false,\r\n   \"last_n_hours\":null,\r\n   \"by_uuid\":true,\r\n   \"subset_tag\":\"phase2\",\r\n   \"subset_percent_old1\":25,\r\n   \"subset_percent\":40,\r\n   \"openai_params\":{\r\n      \"max_tokens\": {{eval_max_tokens}},\r\n      \"presence_penalty\": {{eval_presence_penalty}},\r\n      \"temperature\": {{eval_temperature}}\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/eval/process-evals/:mode?client_id={{current_agent_id}}&async=true&items_to_process=100",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"eval",
										"process-evals",
										":mode"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "async",
											"value": "true"
										},
										{
											"key": "dry_run",
											"value": "true",
											"disabled": true
										},
										{
											"key": "items_to_process",
											"value": "100"
										}
									],
									"variable": [
										{
											"key": "mode",
											"value": "mode2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Phoebe - Vanilla GPT-4 - Mode 3 : phase2-vanilla4-mode3-01",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*\r",
											"const requestBody = JSON.parse(pm.request.body.raw);\r",
											"if (requestBody.content && requestBody.content.items) {\r",
											"    requestBody.content.items.forEach(item => {\r",
											"        if (item.classifications) {\r",
											"            item.classifications.forEach(classification => {\r",
											"                console.log(`${item.itemId} ~ ${classification.name} ~ ${classification.selected}`);\r",
											"            });\r",
											"        }\r",
											"    });\r",
											"}\r",
											"*/\r",
											"\r",
											"\r",
											"let responseJson = pm.response.json();\r",
											"let jobId = responseJson.job_id;\r",
											"let mode = responseJson.mode;\r",
											"\r",
											"pm.environment.set(\"last_eval_job_id\", jobId);\r",
											"pm.environment.set(\"last_eval_mode\", mode);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"Xmodel35\":\"{{eval_model_vanilla_35}}\",\r\n   \"Xmodel4\":\"{{eval_model_vanilla_4}}\",\r\n   \"XmodelBase\":\"{{ft_model_id_base_mode2}}\",\r\n   \"XmodelExt\":\"{{ft_model_id_extended_current_agent}}\",\r\n   \"model\":\"{{eval_model_vanilla_4}}\",\r\n   \"tag_source\":\"{{eval_tag_source}}\",\r\n   \"tags_dest\":[\r\n      \"phase2-vanilla4-mode3-01\"\r\n   ],\r\n   \"persona\":{{current_agent_persona_json}},\r\n   \"perspectives\":[{{perspective_json_classification}}],\r\n   \"is_exclude_existing\":true,\r\n   \"is_most_recent\":false,\r\n   \"last_n_hours\":null,\r\n   \"by_uuid\":true,\r\n   \"subset_tag\":\"phase2\",\r\n   \"subset_percent_old1\":25,\r\n   \"subset_percent\":40,\r\n   \"openai_params\":{\r\n      \"max_tokens\": {{eval_max_tokens}},\r\n      \"presence_penalty\": {{eval_presence_penalty}},\r\n      \"temperature\": {{eval_temperature}}\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/eval/process-evals/:mode?client_id={{current_agent_id}}&async=true&items_to_process=100",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"eval",
										"process-evals",
										":mode"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "async",
											"value": "true"
										},
										{
											"key": "dry_run",
											"value": "true",
											"disabled": true
										},
										{
											"key": "items_to_process",
											"value": "100"
										}
									],
									"variable": [
										{
											"key": "mode",
											"value": "mode3"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Phoebe - Vanilla GPT-4o - Mode 2 : phase2-vanilla4o-mode2-01",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*\r",
											"const requestBody = JSON.parse(pm.request.body.raw);\r",
											"if (requestBody.content && requestBody.content.items) {\r",
											"    requestBody.content.items.forEach(item => {\r",
											"        if (item.classifications) {\r",
											"            item.classifications.forEach(classification => {\r",
											"                console.log(`${item.itemId} ~ ${classification.name} ~ ${classification.selected}`);\r",
											"            });\r",
											"        }\r",
											"    });\r",
											"}\r",
											"*/\r",
											"\r",
											"\r",
											"let responseJson = pm.response.json();\r",
											"let jobId = responseJson.job_id;\r",
											"let mode = responseJson.mode;\r",
											"\r",
											"pm.environment.set(\"last_eval_job_id\", jobId);\r",
											"pm.environment.set(\"last_eval_mode\", mode);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"Xmodel35\":\"{{eval_model_vanilla_35}}\",\r\n   \"Xmodel4\":\"{{eval_model_vanilla_4}}\",\r\n   \"XmodelBase\":\"{{ft_model_id_base_mode2}}\",\r\n   \"XmodelExt\":\"{{ft_model_id_extended_current_agent}}\",\r\n   \"model\":\"{{eval_model_vanilla_4o}}\",\r\n   \"tag_source\":\"{{eval_tag_source}}\",\r\n   \"tags_dest\":[\r\n      \"phase2-vanilla4o-mode2-01\"\r\n   ],\r\n   \"persona\":{{current_agent_persona_json}},\r\n   \"perspectives\":[{{perspective_json_classification}}],\r\n   \"is_exclude_existing\":true,\r\n   \"is_most_recent\":false,\r\n   \"last_n_hours\":null,\r\n   \"by_uuid\":true,\r\n   \"subset_tag\":\"phase2\",\r\n   \"subset_percent_old1\":25,\r\n   \"subset_percent\":40,\r\n   \"openai_params\":{\r\n      \"max_tokens\": {{eval_max_tokens}},\r\n      \"presence_penalty\": {{eval_presence_penalty}},\r\n      \"temperature\": {{eval_temperature}}\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/eval/process-evals/:mode?client_id={{current_agent_id}}&async=true&items_to_process=100",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"eval",
										"process-evals",
										":mode"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "async",
											"value": "true"
										},
										{
											"key": "dry_run",
											"value": "true",
											"disabled": true
										},
										{
											"key": "items_to_process",
											"value": "100"
										}
									],
									"variable": [
										{
											"key": "mode",
											"value": "mode2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Phoebe - Vanilla GPT-4o - Mode 3 : phase2-vanilla4o-mode3-01",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*\r",
											"const requestBody = JSON.parse(pm.request.body.raw);\r",
											"if (requestBody.content && requestBody.content.items) {\r",
											"    requestBody.content.items.forEach(item => {\r",
											"        if (item.classifications) {\r",
											"            item.classifications.forEach(classification => {\r",
											"                console.log(`${item.itemId} ~ ${classification.name} ~ ${classification.selected}`);\r",
											"            });\r",
											"        }\r",
											"    });\r",
											"}\r",
											"*/\r",
											"\r",
											"\r",
											"let responseJson = pm.response.json();\r",
											"let jobId = responseJson.job_id;\r",
											"let mode = responseJson.mode;\r",
											"\r",
											"pm.environment.set(\"last_eval_job_id\", jobId);\r",
											"pm.environment.set(\"last_eval_mode\", mode);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"Xmodel35\":\"{{eval_model_vanilla_35}}\",\r\n   \"Xmodel4\":\"{{eval_model_vanilla_4}}\",\r\n   \"XmodelBase\":\"{{ft_model_id_base_mode2}}\",\r\n   \"XmodelExt\":\"{{ft_model_id_extended_current_agent}}\",\r\n   \"model\":\"{{eval_model_vanilla_4o}}\",\r\n   \"tag_source\":\"{{eval_tag_source}}\",\r\n   \"tags_dest\":[\r\n      \"phase2-vanilla4o-mode3-01\"\r\n   ],\r\n   \"persona\":{{current_agent_persona_json}},\r\n   \"perspectives\":[{{perspective_json_classification}}],\r\n   \"is_exclude_existing\":true,\r\n   \"is_most_recent\":false,\r\n   \"last_n_hours\":null,\r\n   \"by_uuid\":true,\r\n   \"subset_tag\":\"phase2\",\r\n   \"subset_percent_old1\":25,\r\n   \"subset_percent\":40,\r\n   \"openai_params\":{\r\n      \"max_tokens\": {{eval_max_tokens}},\r\n      \"presence_penalty\": {{eval_presence_penalty}},\r\n      \"temperature\": {{eval_temperature}}\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/eval/process-evals/:mode?client_id={{current_agent_id}}&async=true&items_to_process=100",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"eval",
										"process-evals",
										":mode"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "async",
											"value": "true"
										},
										{
											"key": "dry_run",
											"value": "true",
											"disabled": true
										},
										{
											"key": "items_to_process",
											"value": "100"
										}
									],
									"variable": [
										{
											"key": "mode",
											"value": "mode3"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Phoebe - Generate Subset - 25%",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function randomString(minValue, maxValue, dataSet = 'abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ') {\r",
											"    if (!minValue) {\r",
											"        minValue = 20;\r",
											"        maxValue = 20;\r",
											"    }\r",
											"\r",
											"    if (!maxValue) {\r",
											"        maxValue = minValue;\r",
											"    }\r",
											"\r",
											"    let length = _.random(minValue, maxValue),\r",
											"        randomString = \"\";\r",
											"\r",
											"    for (let i = 0; i < length; i++)\r",
											"        randomString += dataSet.charAt(Math.floor(Math.random() * dataSet.length));\r",
											"    return randomString;\r",
											"}\r",
											"\r",
											"pm.variables.set('randomString', randomString());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/subsets/subset/:tag/:subset_percent?output_tag=phase2&client_id={{current_agent_id}}",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"subsets",
										"subset",
										":tag",
										":subset_percent"
									],
									"query": [
										{
											"key": "output_tag",
											"value": "phase2"
										},
										{
											"key": "incremental",
											"value": "true",
											"disabled": true
										},
										{
											"key": "client_id",
											"value": "{{current_agent_id}}"
										}
									],
									"variable": [
										{
											"key": "tag",
											"value": "phase2"
										},
										{
											"key": "subset_percent",
											"value": "25"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Phoebe - Generate Subset - 30%",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function randomString(minValue, maxValue, dataSet = 'abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ') {\r",
											"    if (!minValue) {\r",
											"        minValue = 20;\r",
											"        maxValue = 20;\r",
											"    }\r",
											"\r",
											"    if (!maxValue) {\r",
											"        maxValue = minValue;\r",
											"    }\r",
											"\r",
											"    let length = _.random(minValue, maxValue),\r",
											"        randomString = \"\";\r",
											"\r",
											"    for (let i = 0; i < length; i++)\r",
											"        randomString += dataSet.charAt(Math.floor(Math.random() * dataSet.length));\r",
											"    return randomString;\r",
											"}\r",
											"\r",
											"pm.variables.set('randomString', randomString());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/subsets/subset/:tag/:subset_percent?output_tag=phase2&client_id={{current_agent_id}}",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"subsets",
										"subset",
										":tag",
										":subset_percent"
									],
									"query": [
										{
											"key": "output_tag",
											"value": "phase2"
										},
										{
											"key": "incremental",
											"value": "true",
											"disabled": true
										},
										{
											"key": "client_id",
											"value": "{{current_agent_id}}"
										}
									],
									"variable": [
										{
											"key": "tag",
											"value": "phase2"
										},
										{
											"key": "subset_percent",
											"value": "30"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Phoebe - Generate Subset - 40%",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function randomString(minValue, maxValue, dataSet = 'abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ') {\r",
											"    if (!minValue) {\r",
											"        minValue = 20;\r",
											"        maxValue = 20;\r",
											"    }\r",
											"\r",
											"    if (!maxValue) {\r",
											"        maxValue = minValue;\r",
											"    }\r",
											"\r",
											"    let length = _.random(minValue, maxValue),\r",
											"        randomString = \"\";\r",
											"\r",
											"    for (let i = 0; i < length; i++)\r",
											"        randomString += dataSet.charAt(Math.floor(Math.random() * dataSet.length));\r",
											"    return randomString;\r",
											"}\r",
											"\r",
											"pm.variables.set('randomString', randomString());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/subsets/subset/:tag/:subset_percent?output_tag=phase2&client_id={{current_agent_id}}",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"subsets",
										"subset",
										":tag",
										":subset_percent"
									],
									"query": [
										{
											"key": "output_tag",
											"value": "phase2"
										},
										{
											"key": "incremental",
											"value": "true",
											"disabled": true
										},
										{
											"key": "client_id",
											"value": "{{current_agent_id}}"
										}
									],
									"variable": [
										{
											"key": "tag",
											"value": "phase2"
										},
										{
											"key": "subset_percent",
											"value": "40"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Phoebe - Generate Subset - 50%",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function randomString(minValue, maxValue, dataSet = 'abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ') {\r",
											"    if (!minValue) {\r",
											"        minValue = 20;\r",
											"        maxValue = 20;\r",
											"    }\r",
											"\r",
											"    if (!maxValue) {\r",
											"        maxValue = minValue;\r",
											"    }\r",
											"\r",
											"    let length = _.random(minValue, maxValue),\r",
											"        randomString = \"\";\r",
											"\r",
											"    for (let i = 0; i < length; i++)\r",
											"        randomString += dataSet.charAt(Math.floor(Math.random() * dataSet.length));\r",
											"    return randomString;\r",
											"}\r",
											"\r",
											"pm.variables.set('randomString', randomString());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/subsets/subset/:tag/:subset_percent?output_tag=phase2&client_id={{current_agent_id}}",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"subsets",
										"subset",
										":tag",
										":subset_percent"
									],
									"query": [
										{
											"key": "output_tag",
											"value": "phase2"
										},
										{
											"key": "incremental",
											"value": "true",
											"disabled": true
										},
										{
											"key": "client_id",
											"value": "{{current_agent_id}}"
										}
									],
									"variable": [
										{
											"key": "tag",
											"value": "phase2"
										},
										{
											"key": "subset_percent",
											"value": "50"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									"console.log(\"AWAG Data/Evaluation/Phoebe\");\r",
									"\r",
									"var currentAgent = 'phoebe'\r",
									"\r",
									"pm.variables.set('current_agent', currentAgent);\r",
									"\r",
									"//console.log(\"function_sanitiseStringForJson: \" + pm.globals.get(\"function_sanitiseStringForJson\"));\r",
									"\r",
									"var sanitiseStringForJsonStr =  pm.globals.get(\"function_sanitiseStringForJson\")\r",
									"//console.log(\"function_sanitiseStringForJson: \" + sanitiseStringForJsonStr);\r",
									"var sanitiseStringForJson = eval(sanitiseStringForJsonStr);\r",
									"//console.log(\"sanitiseStringForJson: \" + sanitiseStringForJson);\r",
									"\r",
									"var agentIdVariableName = `agent_id_${currentAgent}`;\r",
									"var personaJsonVariableName = `persona_json_${currentAgent}`;\r",
									"\r",
									"pm.variables.set('agent_id_variable_name', agentIdVariableName);\r",
									"pm.variables.set('persona_json_variable_name', personaJsonVariableName);\r",
									"\r",
									"var agentIdValue = pm.environment.get(agentIdVariableName);\r",
									"pm.variables.set('current_agent_id', agentIdValue);\r",
									"\r",
									"var personaJsonValue = pm.environment.get(personaJsonVariableName);\r",
									"pm.variables.set('current_agent_persona_json', personaJsonValue);\r",
									"\r",
									"\r",
									"//pm.variables.set('ft_model_id_extended_current_agent', 'ft:gpt-3.5-turbo-1106:hylozoical:ext-adam-0502:9KUJQCgZ');\r",
									"pm.variables.set('ft_model_id_extended_current_agent', 'ft:gpt-3.5-turbo-1106:hylozoical:ext-phoebe-1234:xxxxxxxx');\r",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Usha",
					"item": [
						{
							"name": "Evaluation Jobs",
							"item": [
								{
									"name": "Get Evaluation Jobs (Usha) - phase2-vanilla4-mode2-01",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/eval/get-evaluation-jobs?client_id={{current_agent_id}}&first_tag_dest=phase2-vanilla4-mode2-01&show_info=false",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"eval",
												"get-evaluation-jobs"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "job_id",
													"value": "",
													"disabled": true
												},
												{
													"key": "mode",
													"value": "",
													"disabled": true
												},
												{
													"key": "status",
													"value": "PROCESSING",
													"disabled": true
												},
												{
													"key": "is_error",
													"value": "true",
													"disabled": true
												},
												{
													"key": "tag_source",
													"value": "phase2",
													"disabled": true
												},
												{
													"key": "first_tag_dest",
													"value": "phase2-vanilla4-mode2-01"
												},
												{
													"key": "openai_model",
													"value": "{{eval_model_vanilla_4}}",
													"disabled": true
												},
												{
													"key": "show_info",
													"value": "false"
												},
												{
													"key": "show_detail",
													"value": "true",
													"disabled": true
												},
												{
													"key": "last_n_hours",
													"value": "2",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "count",
													"value": "5",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Evaluation Jobs (Usha) - phase2-vanilla4-mode3-01",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/eval/get-evaluation-jobs?client_id={{current_agent_id}}&first_tag_dest=phase2-vanilla4-mode3-01&show_info=false",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"eval",
												"get-evaluation-jobs"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "job_id",
													"value": "",
													"disabled": true
												},
												{
													"key": "mode",
													"value": "",
													"disabled": true
												},
												{
													"key": "status",
													"value": "PROCESSING",
													"disabled": true
												},
												{
													"key": "is_error",
													"value": "true",
													"disabled": true
												},
												{
													"key": "tag_source",
													"value": "phase2",
													"disabled": true
												},
												{
													"key": "first_tag_dest",
													"value": "phase2-vanilla4-mode3-01"
												},
												{
													"key": "openai_model",
													"value": "{{eval_model_vanilla_4}}",
													"disabled": true
												},
												{
													"key": "show_info",
													"value": "false"
												},
												{
													"key": "show_detail",
													"value": "true",
													"disabled": true
												},
												{
													"key": "last_n_hours",
													"value": "2",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "count",
													"value": "5",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Evaluation Jobs (Usha) - phase2-vanilla4o-mode2-01",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/eval/get-evaluation-jobs?client_id={{current_agent_id}}&first_tag_dest=phase2-vanilla4o-mode2-01&show_info=false",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"eval",
												"get-evaluation-jobs"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "job_id",
													"value": "",
													"disabled": true
												},
												{
													"key": "mode",
													"value": "",
													"disabled": true
												},
												{
													"key": "status",
													"value": "PROCESSING",
													"disabled": true
												},
												{
													"key": "is_error",
													"value": "true",
													"disabled": true
												},
												{
													"key": "tag_source",
													"value": "phase2",
													"disabled": true
												},
												{
													"key": "first_tag_dest",
													"value": "phase2-vanilla4o-mode2-01"
												},
												{
													"key": "openai_model",
													"value": "{{eval_model_vanilla_4o}}",
													"disabled": true
												},
												{
													"key": "show_info",
													"value": "false"
												},
												{
													"key": "show_detail",
													"value": "true",
													"disabled": true
												},
												{
													"key": "last_n_hours",
													"value": "2",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "count",
													"value": "5",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Evaluation Jobs (Usha) - phase2-vanilla4o-mode3-01",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/eval/get-evaluation-jobs?client_id={{current_agent_id}}&first_tag_dest=phase2-vanilla4o-mode3-01&show_info=false",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"eval",
												"get-evaluation-jobs"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "job_id",
													"value": "",
													"disabled": true
												},
												{
													"key": "mode",
													"value": "",
													"disabled": true
												},
												{
													"key": "status",
													"value": "PROCESSING",
													"disabled": true
												},
												{
													"key": "is_error",
													"value": "true",
													"disabled": true
												},
												{
													"key": "tag_source",
													"value": "phase2",
													"disabled": true
												},
												{
													"key": "first_tag_dest",
													"value": "phase2-vanilla4o-mode3-01"
												},
												{
													"key": "openai_model",
													"value": "{{eval_model_vanilla_4o}}",
													"disabled": true
												},
												{
													"key": "show_info",
													"value": "false"
												},
												{
													"key": "show_detail",
													"value": "true",
													"disabled": true
												},
												{
													"key": "last_n_hours",
													"value": "2",
													"disabled": true
												},
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "count",
													"value": "5",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Query Evaluations (Usha)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/eval/process-evals/:mode/:job_id?client_id={{current_agent_id}}",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"eval",
										"process-evals",
										":mode",
										":job_id"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										}
									],
									"variable": [
										{
											"key": "mode",
											"value": "{{last_eval_mode}}"
										},
										{
											"key": "job_id",
											"value": "{{last_eval_job_id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Usha - Vanilla GPT-4 - Mode 2 : phase2-vanilla4-mode2-01",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*\r",
											"const requestBody = JSON.parse(pm.request.body.raw);\r",
											"if (requestBody.content && requestBody.content.items) {\r",
											"    requestBody.content.items.forEach(item => {\r",
											"        if (item.classifications) {\r",
											"            item.classifications.forEach(classification => {\r",
											"                console.log(`${item.itemId} ~ ${classification.name} ~ ${classification.selected}`);\r",
											"            });\r",
											"        }\r",
											"    });\r",
											"}\r",
											"*/\r",
											"\r",
											"\r",
											"let responseJson = pm.response.json();\r",
											"let jobId = responseJson.job_id;\r",
											"let mode = responseJson.mode;\r",
											"\r",
											"pm.environment.set(\"last_eval_job_id\", jobId);\r",
											"pm.environment.set(\"last_eval_mode\", mode);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"Xmodel35\":\"{{eval_model_vanilla_35}}\",\r\n   \"Xmodel4\":\"{{eval_model_vanilla_4}}\",\r\n   \"XmodelBase\":\"{{ft_model_id_base_mode2}}\",\r\n   \"XmodelExt\":\"{{ft_model_id_extended_current_agent}}\",\r\n   \"model\":\"{{eval_model_vanilla_4}}\",\r\n   \"tag_source\":\"{{eval_tag_source}}\",\r\n   \"tags_dest\":[\r\n      \"phase2-vanilla4-mode2-01\"\r\n   ],\r\n   \"persona\":{{current_agent_persona_json}},\r\n   \"perspectives\":[{{perspective_json_classification}}],\r\n   \"is_exclude_existing\":true,\r\n   \"is_most_recent\":false,\r\n   \"last_n_hours\":null,\r\n   \"by_uuid\":true,\r\n   \"subset_tag\":\"phase2\",\r\n   \"subset_percent_old1\":25,\r\n   \"subset_percent\":25,\r\n   \"openai_params\":{\r\n      \"max_tokens\": {{eval_max_tokens}},\r\n      \"presence_penalty\": {{eval_presence_penalty}},\r\n      \"temperature\": {{eval_temperature}}\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/eval/process-evals/:mode?client_id={{current_agent_id}}&async=true&items_to_process=200",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"eval",
										"process-evals",
										":mode"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "async",
											"value": "true"
										},
										{
											"key": "dry_run",
											"value": "true",
											"disabled": true
										},
										{
											"key": "items_to_process",
											"value": "200"
										}
									],
									"variable": [
										{
											"key": "mode",
											"value": "mode2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Usha - Vanilla GPT-4 - Mode 3 : phase2-vanilla4-mode3-01",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*\r",
											"const requestBody = JSON.parse(pm.request.body.raw);\r",
											"if (requestBody.content && requestBody.content.items) {\r",
											"    requestBody.content.items.forEach(item => {\r",
											"        if (item.classifications) {\r",
											"            item.classifications.forEach(classification => {\r",
											"                console.log(`${item.itemId} ~ ${classification.name} ~ ${classification.selected}`);\r",
											"            });\r",
											"        }\r",
											"    });\r",
											"}\r",
											"*/\r",
											"\r",
											"\r",
											"let responseJson = pm.response.json();\r",
											"let jobId = responseJson.job_id;\r",
											"let mode = responseJson.mode;\r",
											"\r",
											"pm.environment.set(\"last_eval_job_id\", jobId);\r",
											"pm.environment.set(\"last_eval_mode\", mode);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"Xmodel35\":\"{{eval_model_vanilla_35}}\",\r\n   \"Xmodel4\":\"{{eval_model_vanilla_4}}\",\r\n   \"XmodelBase\":\"{{ft_model_id_base_mode2}}\",\r\n   \"XmodelExt\":\"{{ft_model_id_extended_current_agent}}\",\r\n   \"model\":\"{{eval_model_vanilla_4}}\",\r\n   \"tag_source\":\"{{eval_tag_source}}\",\r\n   \"tags_dest\":[\r\n      \"phase2-vanilla4-mode3-01\"\r\n   ],\r\n   \"persona\":{{current_agent_persona_json}},\r\n   \"perspectives\":[{{perspective_json_classification}}],\r\n   \"is_exclude_existing\":true,\r\n   \"is_most_recent\":false,\r\n   \"last_n_hours\":null,\r\n   \"by_uuid\":true,\r\n   \"subset_tag\":\"phase2\",\r\n   \"subset_percent_old1\":25,\r\n   \"subset_percent\":25,\r\n   \"openai_params\":{\r\n      \"max_tokens\": {{eval_max_tokens}},\r\n      \"presence_penalty\": {{eval_presence_penalty}},\r\n      \"temperature\": {{eval_temperature}}\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/eval/process-evals/:mode?client_id={{current_agent_id}}&async=true&items_to_process=100",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"eval",
										"process-evals",
										":mode"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "async",
											"value": "true"
										},
										{
											"key": "dry_run",
											"value": "true",
											"disabled": true
										},
										{
											"key": "items_to_process",
											"value": "100"
										}
									],
									"variable": [
										{
											"key": "mode",
											"value": "mode3"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Usha - Vanilla GPT-4o - Mode 2 : phase2-vanilla4o-mode2-01",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*\r",
											"const requestBody = JSON.parse(pm.request.body.raw);\r",
											"if (requestBody.content && requestBody.content.items) {\r",
											"    requestBody.content.items.forEach(item => {\r",
											"        if (item.classifications) {\r",
											"            item.classifications.forEach(classification => {\r",
											"                console.log(`${item.itemId} ~ ${classification.name} ~ ${classification.selected}`);\r",
											"            });\r",
											"        }\r",
											"    });\r",
											"}\r",
											"*/\r",
											"\r",
											"\r",
											"let responseJson = pm.response.json();\r",
											"let jobId = responseJson.job_id;\r",
											"let mode = responseJson.mode;\r",
											"\r",
											"pm.environment.set(\"last_eval_job_id\", jobId);\r",
											"pm.environment.set(\"last_eval_mode\", mode);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"Xmodel35\":\"{{eval_model_vanilla_35}}\",\r\n   \"Xmodel4\":\"{{eval_model_vanilla_4}}\",\r\n   \"XmodelBase\":\"{{ft_model_id_base_mode2}}\",\r\n   \"XmodelExt\":\"{{ft_model_id_extended_current_agent}}\",\r\n   \"model\":\"{{eval_model_vanilla_4o}}\",\r\n   \"tag_source\":\"{{eval_tag_source}}\",\r\n   \"tags_dest\":[\r\n      \"phase2-vanilla4o-mode2-01\"\r\n   ],\r\n   \"persona\":{{current_agent_persona_json}},\r\n   \"perspectives\":[{{perspective_json_classification}}],\r\n   \"is_exclude_existing\":true,\r\n   \"is_most_recent\":false,\r\n   \"last_n_hours\":null,\r\n   \"by_uuid\":true,\r\n   \"subset_tag\":\"phase2\",\r\n   \"subset_percent_old1\":25,\r\n   \"subset_percent\":25,\r\n   \"openai_params\":{\r\n      \"max_tokens\": {{eval_max_tokens}},\r\n      \"presence_penalty\": {{eval_presence_penalty}},\r\n      \"temperature\": {{eval_temperature}}\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/eval/process-evals/:mode?client_id={{current_agent_id}}&async=true&items_to_process=100",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"eval",
										"process-evals",
										":mode"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "async",
											"value": "true"
										},
										{
											"key": "dry_run",
											"value": "true",
											"disabled": true
										},
										{
											"key": "items_to_process",
											"value": "100"
										}
									],
									"variable": [
										{
											"key": "mode",
											"value": "mode2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Usha - Vanilla GPT-4o - Mode 3 : phase2-vanilla4o-mode3-01",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"/*\r",
											"const requestBody = JSON.parse(pm.request.body.raw);\r",
											"if (requestBody.content && requestBody.content.items) {\r",
											"    requestBody.content.items.forEach(item => {\r",
											"        if (item.classifications) {\r",
											"            item.classifications.forEach(classification => {\r",
											"                console.log(`${item.itemId} ~ ${classification.name} ~ ${classification.selected}`);\r",
											"            });\r",
											"        }\r",
											"    });\r",
											"}\r",
											"*/\r",
											"\r",
											"\r",
											"let responseJson = pm.response.json();\r",
											"let jobId = responseJson.job_id;\r",
											"let mode = responseJson.mode;\r",
											"\r",
											"pm.environment.set(\"last_eval_job_id\", jobId);\r",
											"pm.environment.set(\"last_eval_mode\", mode);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"Xmodel35\":\"{{eval_model_vanilla_35}}\",\r\n   \"Xmodel4\":\"{{eval_model_vanilla_4}}\",\r\n   \"XmodelBase\":\"{{ft_model_id_base_mode2}}\",\r\n   \"XmodelExt\":\"{{ft_model_id_extended_current_agent}}\",\r\n   \"model\":\"{{eval_model_vanilla_4o}}\",\r\n   \"tag_source\":\"{{eval_tag_source}}\",\r\n   \"tags_dest\":[\r\n      \"phase2-vanilla4o-mode3-01\"\r\n   ],\r\n   \"persona\":{{current_agent_persona_json}},\r\n   \"perspectives\":[{{perspective_json_classification}}],\r\n   \"is_exclude_existing\":true,\r\n   \"is_most_recent\":false,\r\n   \"last_n_hours\":null,\r\n   \"by_uuid\":true,\r\n   \"subset_tag\":\"phase2\",\r\n   \"subset_percent_old1\":25,\r\n   \"subset_percent\":25,\r\n   \"openai_params\":{\r\n      \"max_tokens\": {{eval_max_tokens}},\r\n      \"presence_penalty\": {{eval_presence_penalty}},\r\n      \"temperature\": {{eval_temperature}}\r\n   }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/eval/process-evals/:mode?client_id={{current_agent_id}}&async=true&items_to_process=100",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"eval",
										"process-evals",
										":mode"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "async",
											"value": "true"
										},
										{
											"key": "dry_run",
											"value": "true",
											"disabled": true
										},
										{
											"key": "items_to_process",
											"value": "100"
										}
									],
									"variable": [
										{
											"key": "mode",
											"value": "mode3"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Usha - Generate Subset - 25%",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function randomString(minValue, maxValue, dataSet = 'abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ') {\r",
											"    if (!minValue) {\r",
											"        minValue = 20;\r",
											"        maxValue = 20;\r",
											"    }\r",
											"\r",
											"    if (!maxValue) {\r",
											"        maxValue = minValue;\r",
											"    }\r",
											"\r",
											"    let length = _.random(minValue, maxValue),\r",
											"        randomString = \"\";\r",
											"\r",
											"    for (let i = 0; i < length; i++)\r",
											"        randomString += dataSet.charAt(Math.floor(Math.random() * dataSet.length));\r",
											"    return randomString;\r",
											"}\r",
											"\r",
											"pm.variables.set('randomString', randomString());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/subsets/subset/:tag/:subset_percent?output_tag=phase2&client_id={{current_agent_id}}",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"subsets",
										"subset",
										":tag",
										":subset_percent"
									],
									"query": [
										{
											"key": "output_tag",
											"value": "phase2"
										},
										{
											"key": "incremental",
											"value": "true",
											"disabled": true
										},
										{
											"key": "client_id",
											"value": "{{current_agent_id}}"
										}
									],
									"variable": [
										{
											"key": "tag",
											"value": "phase2"
										},
										{
											"key": "subset_percent",
											"value": "25"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Usha - Generate Subset - 30%",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function randomString(minValue, maxValue, dataSet = 'abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ') {\r",
											"    if (!minValue) {\r",
											"        minValue = 20;\r",
											"        maxValue = 20;\r",
											"    }\r",
											"\r",
											"    if (!maxValue) {\r",
											"        maxValue = minValue;\r",
											"    }\r",
											"\r",
											"    let length = _.random(minValue, maxValue),\r",
											"        randomString = \"\";\r",
											"\r",
											"    for (let i = 0; i < length; i++)\r",
											"        randomString += dataSet.charAt(Math.floor(Math.random() * dataSet.length));\r",
											"    return randomString;\r",
											"}\r",
											"\r",
											"pm.variables.set('randomString', randomString());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/subsets/subset/:tag/:subset_percent?output_tag=phase2&client_id={{current_agent_id}}",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"subsets",
										"subset",
										":tag",
										":subset_percent"
									],
									"query": [
										{
											"key": "output_tag",
											"value": "phase2"
										},
										{
											"key": "incremental",
											"value": "true",
											"disabled": true
										},
										{
											"key": "client_id",
											"value": "{{current_agent_id}}"
										}
									],
									"variable": [
										{
											"key": "tag",
											"value": "phase2"
										},
										{
											"key": "subset_percent",
											"value": "30"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Usha - Generate Subset - 40%",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function randomString(minValue, maxValue, dataSet = 'abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ') {\r",
											"    if (!minValue) {\r",
											"        minValue = 20;\r",
											"        maxValue = 20;\r",
											"    }\r",
											"\r",
											"    if (!maxValue) {\r",
											"        maxValue = minValue;\r",
											"    }\r",
											"\r",
											"    let length = _.random(minValue, maxValue),\r",
											"        randomString = \"\";\r",
											"\r",
											"    for (let i = 0; i < length; i++)\r",
											"        randomString += dataSet.charAt(Math.floor(Math.random() * dataSet.length));\r",
											"    return randomString;\r",
											"}\r",
											"\r",
											"pm.variables.set('randomString', randomString());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/subsets/subset/:tag/:subset_percent?output_tag=phase2&client_id={{current_agent_id}}",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"subsets",
										"subset",
										":tag",
										":subset_percent"
									],
									"query": [
										{
											"key": "output_tag",
											"value": "phase2"
										},
										{
											"key": "incremental",
											"value": "true",
											"disabled": true
										},
										{
											"key": "client_id",
											"value": "{{current_agent_id}}"
										}
									],
									"variable": [
										{
											"key": "tag",
											"value": "phase2"
										},
										{
											"key": "subset_percent",
											"value": "40"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Usha - Generate Subset - 50%",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function randomString(minValue, maxValue, dataSet = 'abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ') {\r",
											"    if (!minValue) {\r",
											"        minValue = 20;\r",
											"        maxValue = 20;\r",
											"    }\r",
											"\r",
											"    if (!maxValue) {\r",
											"        maxValue = minValue;\r",
											"    }\r",
											"\r",
											"    let length = _.random(minValue, maxValue),\r",
											"        randomString = \"\";\r",
											"\r",
											"    for (let i = 0; i < length; i++)\r",
											"        randomString += dataSet.charAt(Math.floor(Math.random() * dataSet.length));\r",
											"    return randomString;\r",
											"}\r",
											"\r",
											"pm.variables.set('randomString', randomString());\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/subsets/subset/:tag/:subset_percent?output_tag=phase2&client_id={{current_agent_id}}",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"subsets",
										"subset",
										":tag",
										":subset_percent"
									],
									"query": [
										{
											"key": "output_tag",
											"value": "phase2"
										},
										{
											"key": "incremental",
											"value": "true",
											"disabled": true
										},
										{
											"key": "client_id",
											"value": "{{current_agent_id}}"
										}
									],
									"variable": [
										{
											"key": "tag",
											"value": "phase2"
										},
										{
											"key": "subset_percent",
											"value": "50"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									"console.log(\"AWAG Data/Evaluation/Usha\");\r",
									"\r",
									"var currentAgent = 'usha'\r",
									"\r",
									"pm.variables.set('current_agent', currentAgent);\r",
									"\r",
									"//console.log(\"function_sanitiseStringForJson: \" + pm.globals.get(\"function_sanitiseStringForJson\"));\r",
									"\r",
									"var sanitiseStringForJsonStr =  pm.globals.get(\"function_sanitiseStringForJson\")\r",
									"//console.log(\"function_sanitiseStringForJson: \" + sanitiseStringForJsonStr);\r",
									"var sanitiseStringForJson = eval(sanitiseStringForJsonStr);\r",
									"//console.log(\"sanitiseStringForJson: \" + sanitiseStringForJson);\r",
									"\r",
									"var agentIdVariableName = `agent_id_${currentAgent}`;\r",
									"var personaJsonVariableName = `persona_json_${currentAgent}`;\r",
									"\r",
									"pm.variables.set('agent_id_variable_name', agentIdVariableName);\r",
									"pm.variables.set('persona_json_variable_name', personaJsonVariableName);\r",
									"\r",
									"var agentIdValue = pm.environment.get(agentIdVariableName);\r",
									"pm.variables.set('current_agent_id', agentIdValue);\r",
									"\r",
									"var personaJsonValue = pm.environment.get(personaJsonVariableName);\r",
									"pm.variables.set('current_agent_persona_json', personaJsonValue);\r",
									"\r",
									"\r",
									"//pm.variables.set('ft_model_id_extended_current_agent', 'ft:gpt-3.5-turbo-1106:hylozoical:ext-adam-0502:9KUJQCgZ');\r",
									"pm.variables.set('ft_model_id_extended_current_agent', 'ft:gpt-3.5-turbo-1106:hylozoical:ext-usha-1234:xxxxxxxx');\r",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							"console.log(\"AWAG Data/Evaluation\");\r",
							"console.log(\"function_sanitiseStringForJson: \" + pm.globals.get(\"function_sanitiseStringForJson\"));\r",
							"\r",
							"/*\r",
							"function sanitiseStringForJson(str) {\r",
							"\r",
							"    return str\r",
							"        .replace(/\\\\/g, '\\\\\\\\') // Escape backslashes\r",
							"        .replace(/\"/g, '\\\\\"') // Escape double quotes\r",
							"        .replace(/\\n/g, '\\\\n') // Escape newlines\r",
							"        .replace(/\\r/g, '\\\\r') // Escape carriage returns\r",
							"        .replace(/\\t/g, '\\\\t') // Escape tabs\r",
							"        .replace(/\\f/g, '\\\\f') // Escape form feeds\r",
							"        //.replace(/\\b/g, '\\\\b'); // Escape backspaces\r",
							"}\r",
							"\r",
							"console.log(sanitiseStringForJson(\"test\\\"string\"));\r",
							"*/\r",
							"\r",
							"\r",
							"let currentDate = new Date();\r",
							"let formattedDate = currentDate.toLocaleDateString('en-GB', {\r",
							"  day: '2-digit',\r",
							"  month: 'short',\r",
							"  year: 'numeric'\r",
							"});\r",
							"formattedDate = formattedDate.replace(/ /g, ' '); // Ensures single space\r",
							"pm.environment.set(\"current_date\", formattedDate);\r",
							"\r",
							"let month = ('0' + (currentDate.getMonth() + 1)).slice(-2); // Get month, format to 2 digits\r",
							"let day = ('0' + currentDate.getDate()).slice(-2); // Get day, format to 2 digits\r",
							"let formattedDateMMDD = month + day; // Concatenate for MMDD format\r",
							"\r",
							"// Set the formatted date as an environment variable\r",
							"pm.environment.set(\"current_date_MMDD\", formattedDateMMDD);\r",
							"\r",
							"//pm.variables.set('ext_dataset_id_mode3', 'ext_mode3');\r",
							"//pm.variables.set('ext_dataset_id_mode3', 'ext_mode3');\r",
							"\r",
							"//pm.environment.set(\"eval_model_vanilla_35\", \"gpt-3.5-turbo-0125\");\r",
							"//pm.environment.set(\"eval_model_vanilla_35\", \"gpt-3.5-turbo-1106\");\r",
							"//pm.environment.set(\"eval_model_vanilla_4\", \"gpt-4-turbo\");\r",
							"\r",
							"pm.environment.set(\"eval_tag_source\", \"phase2\");\r",
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Reporting",
			"item": [
				{
					"name": "Susan",
					"item": [
						{
							"name": "Source Data",
							"item": [
								{
									"name": "AwAgData Get Base Data [Susan]",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/reporting/get-base-data?client_id={{current_agent_id}}&tagMain=phase2&page=1&count=5&desc=true",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"reporting",
												"get-base-data"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "itemId",
													"value": "ee3d9915-3965-4dad-ac38-59f644f07324",
													"disabled": true
												},
												{
													"key": "tagMain",
													"value": "phase2"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "count",
													"value": "5"
												},
												{
													"key": "desc",
													"value": "true"
												},
												{
													"key": "format",
													"value": "csv",
													"disabled": true
												},
												{
													"key": "personaId",
													"value": "adam",
													"disabled": true
												},
												{
													"key": "lastNHours",
													"value": "1",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithManual",
													"value": "true",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AwAgData Get Combined Evaluation Data [Susan] - phase2-vanilla-mode1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/reporting/get-combined-evaluation-data?client_id={{current_agent_id}}&tagMain=phase2&tagEval=phase2-vanilla-mode1-01&page=1&count=20&desc=true&onlyIncludeWithEval=true&onlyIncludeWithManual=true&onlyIncludeWithAgreement=true",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"reporting",
												"get-combined-evaluation-data"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "itemId",
													"value": "0bc3c507-82c4-4228-8b90-a3cdd6103e03",
													"disabled": true
												},
												{
													"key": "tagMain",
													"value": "phase2"
												},
												{
													"key": "tagEval",
													"value": "phase2-vanilla-mode1-01",
													"description": "eval-vanilla-phase2, eval-base-0221-phase2, eval-ext-0229-phase2"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "count",
													"value": "20"
												},
												{
													"key": "desc",
													"value": "true"
												},
												{
													"key": "format",
													"value": "csv",
													"disabled": true
												},
												{
													"key": "personaId",
													"value": "adam",
													"disabled": true
												},
												{
													"key": "lastNHours",
													"value": "1",
													"disabled": true
												},
												{
													"key": "contextId",
													"value": "CONTEXT-QPDdCpNnmfuQ8LsjPMAH",
													"disabled": true
												},
												{
													"key": "classificationName",
													"value": "tech",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithEval",
													"value": "true"
												},
												{
													"key": "onlyIncludeWithFeedback",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithManual",
													"value": "true"
												},
												{
													"key": "onlyIncludeWithLikert",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithAgreement",
													"value": "true"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AwAgData Get Combined Evaluation Data [Susan] - phase2-vanilla-mode2",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/reporting/get-combined-evaluation-data?client_id={{current_agent_id}}&tagMain=phase2&tagEval=phase2-vanilla-mode2-01&page=1&count=20&desc=true&onlyIncludeWithEval=true&onlyIncludeWithManual=true&onlyIncludeWithAgreement=true",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"reporting",
												"get-combined-evaluation-data"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "itemId",
													"value": "0bc3c507-82c4-4228-8b90-a3cdd6103e03",
													"disabled": true
												},
												{
													"key": "tagMain",
													"value": "phase2"
												},
												{
													"key": "tagEval",
													"value": "phase2-vanilla-mode2-01",
													"description": "eval-vanilla-phase2, eval-base-0221-phase2, eval-ext-0229-phase2"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "count",
													"value": "20"
												},
												{
													"key": "desc",
													"value": "true"
												},
												{
													"key": "format",
													"value": "csv",
													"disabled": true
												},
												{
													"key": "personaId",
													"value": "adam",
													"disabled": true
												},
												{
													"key": "lastNHours",
													"value": "1",
													"disabled": true
												},
												{
													"key": "contextId",
													"value": "CONTEXT-QPDdCpNnmfuQ8LsjPMAH",
													"disabled": true
												},
												{
													"key": "classificationName",
													"value": "tech",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithEval",
													"value": "true"
												},
												{
													"key": "onlyIncludeWithFeedback",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithManual",
													"value": "true"
												},
												{
													"key": "onlyIncludeWithLikert",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithAgreement",
													"value": "true"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AwAgData Get Combined Evaluation Data [Susan] - phase2-vanilla-mode3",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/reporting/get-combined-evaluation-data?client_id={{current_agent_id}}&tagMain=phase2&tagEval=phase2-vanilla-mode3-01&page=1&count=20&desc=true&onlyIncludeWithEval=true&onlyIncludeWithManual=true&onlyIncludeWithAgreement=true",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"reporting",
												"get-combined-evaluation-data"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "itemId",
													"value": "0bc3c507-82c4-4228-8b90-a3cdd6103e03",
													"disabled": true
												},
												{
													"key": "tagMain",
													"value": "phase2"
												},
												{
													"key": "tagEval",
													"value": "phase2-vanilla-mode3-01",
													"description": "eval-vanilla-phase2, eval-base-0221-phase2, eval-ext-0229-phase2"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "count",
													"value": "20"
												},
												{
													"key": "desc",
													"value": "true"
												},
												{
													"key": "format",
													"value": "csv",
													"disabled": true
												},
												{
													"key": "personaId",
													"value": "adam",
													"disabled": true
												},
												{
													"key": "lastNHours",
													"value": "1",
													"disabled": true
												},
												{
													"key": "contextId",
													"value": "CONTEXT-QPDdCpNnmfuQ8LsjPMAH",
													"disabled": true
												},
												{
													"key": "classificationName",
													"value": "tech",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithEval",
													"value": "true"
												},
												{
													"key": "onlyIncludeWithFeedback",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithManual",
													"value": "true"
												},
												{
													"key": "onlyIncludeWithLikert",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithAgreement",
													"value": "true"
												}
											]
										}
									},
									"response": []
								}
							],
							"description": "These queries retrieve data directly from the evaluation tables. They are used as sources by the update APIs, which populate tables based on this data."
						},
						{
							"name": "Update Reporting Data From Source",
							"item": [
								{
									"name": "Update Base Data [Susan]",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/reporting/update-base-data?client_id={{current_agent_id}}&tagMain=phase2&itemsPerPass=250",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"reporting",
												"update-base-data"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "tagMain",
													"value": "phase2"
												},
												{
													"key": "itemsPerPass",
													"value": "250"
												},
												{
													"key": "itemId",
													"value": "ee3d9915-3965-4dad-ac38-59f644f07324",
													"disabled": true
												},
												{
													"key": "lastNHours",
													"value": "1",
													"disabled": true
												},
												{
													"key": "classificationName",
													"value": "tech",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithManual",
													"value": "true",
													"disabled": true
												},
												{
													"key": "clearFirst",
													"value": "true",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Combined Evaluation Data [Susan] - mode1 & mode2",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/reporting/update-combined-evaluation-data?client_id={{current_agent_id}}&tagMain=phase2&tagsEval={{eval_stats_list_mode1_mode2}}&itemsPerPass=250&clearFirst=true&onlyIncludeWithLikert=true",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"reporting",
												"update-combined-evaluation-data"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "tagMain",
													"value": "phase2"
												},
												{
													"key": "tagsEval",
													"value": "{{eval_stats_list_mode1_mode2}}"
												},
												{
													"key": "itemsPerPass",
													"value": "250"
												},
												{
													"key": "itemId",
													"value": "ee3d9915-3965-4dad-ac38-59f644f07324",
													"disabled": true
												},
												{
													"key": "personaId",
													"value": "{{current_agent}}",
													"disabled": true
												},
												{
													"key": "lastNHours",
													"value": "1",
													"disabled": true
												},
												{
													"key": "contextId",
													"value": "CONTEXT-QPDdCpNnmfuQ8LsjPMAH",
													"disabled": true
												},
												{
													"key": "classificationName",
													"value": "tech",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithManual",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithEval",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithFeedback",
													"value": "true",
													"disabled": true
												},
												{
													"key": "clearFirst",
													"value": "true"
												},
												{
													"key": "onlyIncludeWithLikert",
													"value": "true"
												},
												{
													"key": "onlyIncludeWithAgreement",
													"value": "true",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Combined Evaluation Data [Susan] - mode3",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/reporting/update-combined-evaluation-data?client_id={{current_agent_id}}&tagMain=phase2&tagsEval={{eval_stats_list_mode3}}&itemsPerPass=250&clearFirst=true&onlyIncludeWithAgreement=true",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"reporting",
												"update-combined-evaluation-data"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "tagMain",
													"value": "phase2"
												},
												{
													"key": "tagsEval",
													"value": "{{eval_stats_list_mode3}}"
												},
												{
													"key": "itemsPerPass",
													"value": "250"
												},
												{
													"key": "itemId",
													"value": "ee3d9915-3965-4dad-ac38-59f644f07324",
													"disabled": true
												},
												{
													"key": "personaId",
													"value": "{{current_agent}}",
													"disabled": true
												},
												{
													"key": "lastNHours",
													"value": "1",
													"disabled": true
												},
												{
													"key": "contextId",
													"value": "CONTEXT-QPDdCpNnmfuQ8LsjPMAH",
													"disabled": true
												},
												{
													"key": "classificationName",
													"value": "tech",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithManual",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithEval",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithFeedback",
													"value": "true",
													"disabled": true
												},
												{
													"key": "clearFirst",
													"value": "true"
												},
												{
													"key": "onlyIncludeWithLikert",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithAgreement",
													"value": "true"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Combined Evaluation Data [Susan] - phase2-vanilla-mode2",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/reporting/update-combined-evaluation-data?client_id={{current_agent_id}}&tagMain=phase2&tagEval=phase2-vanilla-mode2-01&itemsPerPass=250&clearFirst=true&onlyIncludeWithLikert=true",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"reporting",
												"update-combined-evaluation-data"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "tagMain",
													"value": "phase2"
												},
												{
													"key": "tagEval",
													"value": "phase2-vanilla-mode2-01"
												},
												{
													"key": "itemsPerPass",
													"value": "250"
												},
												{
													"key": "itemId",
													"value": "ee3d9915-3965-4dad-ac38-59f644f07324",
													"disabled": true
												},
												{
													"key": "personaId",
													"value": "adam",
													"disabled": true
												},
												{
													"key": "lastNHours",
													"value": "1",
													"disabled": true
												},
												{
													"key": "contextId",
													"value": "CONTEXT-QPDdCpNnmfuQ8LsjPMAH",
													"disabled": true
												},
												{
													"key": "classificationName",
													"value": "tech",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithManual",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithEval",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithFeedback",
													"value": "true",
													"disabled": true
												},
												{
													"key": "clearFirst",
													"value": "true"
												},
												{
													"key": "onlyIncludeWithLikert",
													"value": "true"
												},
												{
													"key": "onlyIncludeWithAgreementXXX",
													"value": "true",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Combined Evaluation Data [Susan] - phase2-vanilla-mode3",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/reporting/update-combined-evaluation-data?client_id={{current_agent_id}}&tagMain=phase2&tagEval=phase2-vanilla-mode3-01&itemsPerPass=250&clearFirst=true&onlyIncludeWithAgreement=true",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"reporting",
												"update-combined-evaluation-data"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "tagMain",
													"value": "phase2"
												},
												{
													"key": "tagEval",
													"value": "phase2-vanilla-mode3-01"
												},
												{
													"key": "itemsPerPass",
													"value": "250"
												},
												{
													"key": "itemId",
													"value": "ee3d9915-3965-4dad-ac38-59f644f07324",
													"disabled": true
												},
												{
													"key": "personaId",
													"value": "adam",
													"disabled": true
												},
												{
													"key": "lastNHours",
													"value": "1",
													"disabled": true
												},
												{
													"key": "contextId",
													"value": "CONTEXT-QPDdCpNnmfuQ8LsjPMAH",
													"disabled": true
												},
												{
													"key": "classificationName",
													"value": "tech",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithManual",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithEval",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithFeedback",
													"value": "true",
													"disabled": true
												},
												{
													"key": "clearFirst",
													"value": "true"
												},
												{
													"key": "onlyIncludeWithLikert",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithAgreement",
													"value": "true"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Combined Evaluation Data [Susan] - phase2-base-mode2",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/reporting/update-combined-evaluation-data?client_id={{current_agent_id}}&tagMain=phase2&tagEval=phase2-base-mode2-01&itemsPerPass=250&clearFirst=true&onlyIncludeWithLikert=true",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"reporting",
												"update-combined-evaluation-data"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "tagMain",
													"value": "phase2"
												},
												{
													"key": "tagEval",
													"value": "phase2-base-mode2-01"
												},
												{
													"key": "itemsPerPass",
													"value": "250"
												},
												{
													"key": "itemId",
													"value": "ee3d9915-3965-4dad-ac38-59f644f07324",
													"disabled": true
												},
												{
													"key": "personaId",
													"value": "adam",
													"disabled": true
												},
												{
													"key": "lastNHours",
													"value": "1",
													"disabled": true
												},
												{
													"key": "contextId",
													"value": "CONTEXT-QPDdCpNnmfuQ8LsjPMAH",
													"disabled": true
												},
												{
													"key": "classificationName",
													"value": "tech",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithManual",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithEval",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithFeedback",
													"value": "true",
													"disabled": true
												},
												{
													"key": "clearFirst",
													"value": "true"
												},
												{
													"key": "onlyIncludeWithLikert",
													"value": "true"
												},
												{
													"key": "onlyIncludeWithAgreementXXX",
													"value": "true",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Combined Evaluation Data [Susan] - phase2-base-mode3",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/reporting/update-combined-evaluation-data?client_id={{current_agent_id}}&tagMain=phase2&tagEval=phase2-base-mode3-01&itemsPerPass=250&clearFirst=true&onlyIncludeWithAgreement=true",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"reporting",
												"update-combined-evaluation-data"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "tagMain",
													"value": "phase2"
												},
												{
													"key": "tagEval",
													"value": "phase2-base-mode3-01"
												},
												{
													"key": "itemsPerPass",
													"value": "250"
												},
												{
													"key": "itemId",
													"value": "ee3d9915-3965-4dad-ac38-59f644f07324",
													"disabled": true
												},
												{
													"key": "personaId",
													"value": "adam",
													"disabled": true
												},
												{
													"key": "lastNHours",
													"value": "1",
													"disabled": true
												},
												{
													"key": "contextId",
													"value": "CONTEXT-QPDdCpNnmfuQ8LsjPMAH",
													"disabled": true
												},
												{
													"key": "classificationName",
													"value": "tech",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithManual",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithEval",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithFeedback",
													"value": "true",
													"disabled": true
												},
												{
													"key": "clearFirst",
													"value": "true"
												},
												{
													"key": "onlyIncludeWithLikert",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithAgreement",
													"value": "true"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Combined Evaluation Data [Susan] - phase2-ext-mode3",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/reporting/update-combined-evaluation-data?client_id={{current_agent_id}}&tagMain=phase2&tagEval=phase2-ext-mode3-01&itemsPerPass=250&clearFirst=true&onlyIncludeWithAgreement=true",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"reporting",
												"update-combined-evaluation-data"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "tagMain",
													"value": "phase2"
												},
												{
													"key": "tagEval",
													"value": "phase2-ext-mode3-01"
												},
												{
													"key": "itemsPerPass",
													"value": "250"
												},
												{
													"key": "itemId",
													"value": "ee3d9915-3965-4dad-ac38-59f644f07324",
													"disabled": true
												},
												{
													"key": "personaId",
													"value": "adam",
													"disabled": true
												},
												{
													"key": "lastNHours",
													"value": "1",
													"disabled": true
												},
												{
													"key": "contextId",
													"value": "CONTEXT-QPDdCpNnmfuQ8LsjPMAH",
													"disabled": true
												},
												{
													"key": "classificationName",
													"value": "tech",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithManual",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithEval",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithFeedback",
													"value": "true",
													"disabled": true
												},
												{
													"key": "clearFirst",
													"value": "true"
												},
												{
													"key": "onlyIncludeWithLikert",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithAgreement",
													"value": "true"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Combined Evaluation Data [Susan] - phase2-vanilla4-mode2",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/reporting/update-combined-evaluation-data?client_id={{current_agent_id}}&tagMain=phase2&tagEval=phase2-vanilla4-mode2-01&itemsPerPass=250&clearFirst=true&onlyIncludeWithLikert=true",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"reporting",
												"update-combined-evaluation-data"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "tagMain",
													"value": "phase2"
												},
												{
													"key": "tagEval",
													"value": "phase2-vanilla4-mode2-01"
												},
												{
													"key": "itemsPerPass",
													"value": "250"
												},
												{
													"key": "itemId",
													"value": "ee3d9915-3965-4dad-ac38-59f644f07324",
													"disabled": true
												},
												{
													"key": "personaId",
													"value": "adam",
													"disabled": true
												},
												{
													"key": "lastNHours",
													"value": "1",
													"disabled": true
												},
												{
													"key": "contextId",
													"value": "CONTEXT-QPDdCpNnmfuQ8LsjPMAH",
													"disabled": true
												},
												{
													"key": "classificationName",
													"value": "tech",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithManual",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithEval",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithFeedback",
													"value": "true",
													"disabled": true
												},
												{
													"key": "clearFirst",
													"value": "true"
												},
												{
													"key": "onlyIncludeWithLikert",
													"value": "true"
												},
												{
													"key": "onlyIncludeWithAgreementXXX",
													"value": "true",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Combined Evaluation Data [Susan] - phase2-vanilla4-mode3",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/reporting/update-combined-evaluation-data?client_id={{current_agent_id}}&tagMain=phase2&tagEval=phase2-vanilla4-mode3-01&itemsPerPass=250&clearFirst=true&onlyIncludeWithAgreement=true",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"reporting",
												"update-combined-evaluation-data"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "tagMain",
													"value": "phase2"
												},
												{
													"key": "tagEval",
													"value": "phase2-vanilla4-mode3-01"
												},
												{
													"key": "itemsPerPass",
													"value": "250"
												},
												{
													"key": "itemId",
													"value": "ee3d9915-3965-4dad-ac38-59f644f07324",
													"disabled": true
												},
												{
													"key": "personaId",
													"value": "adam",
													"disabled": true
												},
												{
													"key": "lastNHours",
													"value": "1",
													"disabled": true
												},
												{
													"key": "contextId",
													"value": "CONTEXT-QPDdCpNnmfuQ8LsjPMAH",
													"disabled": true
												},
												{
													"key": "classificationName",
													"value": "tech",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithManual",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithEval",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithFeedback",
													"value": "true",
													"disabled": true
												},
												{
													"key": "clearFirst",
													"value": "true"
												},
												{
													"key": "onlyIncludeWithLikert",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithAgreement",
													"value": "true"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Get General Stats [Susan] - phase2-vanilla-mode1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/stats/get-general-stats?client_id={{current_agent_id}}&tagMain=phase2&tagEval=phase2-vanilla-mode1-01&includeEmpty=false",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"stats",
										"get-general-stats"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "tagMain",
											"value": "phase2"
										},
										{
											"key": "tagEval",
											"value": "phase2-vanilla-mode1-01"
										},
										{
											"key": "classificationName",
											"value": "golf",
											"disabled": true
										},
										{
											"key": "perspectiveId",
											"value": "",
											"disabled": true
										},
										{
											"key": "personaId",
											"value": "",
											"disabled": true
										},
										{
											"key": "includeVariants",
											"value": "false",
											"description": "Whether to include extra variant statistics",
											"disabled": true
										},
										{
											"key": "includeEmpty",
											"value": "false"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get General Stats [Susan] - phase2-vanilla-mode1 TEST",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix_int_dev}}/api/v1/awag/data/stats/get-general-stats?client_id={{current_agent_id}}&tagMain=phase2&tagEval=phase2-vanilla-mode2-01&includeBreakdowns={\n \"having_eval\":true,\n \"having_feedback\":true\n}",
									"host": [
										"{{url_prefix_int_dev}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"stats",
										"get-general-stats"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "tagMain",
											"value": "phase2"
										},
										{
											"key": "tagEval",
											"value": "phase2-vanilla-mode2-01"
										},
										{
											"key": "classificationName",
											"value": "golf",
											"disabled": true
										},
										{
											"key": "perspectiveId",
											"value": "",
											"disabled": true
										},
										{
											"key": "personaId",
											"value": "",
											"disabled": true
										},
										{
											"key": "includeVariants",
											"value": "false",
											"description": "Whether to include extra variant statistics",
											"disabled": true
										},
										{
											"key": "includeEmpty",
											"value": "false",
											"disabled": true
										},
										{
											"key": "includeBreakdowns",
											"value": "{\n \"having_eval\":true,\n \"having_feedback\":true\n}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get General Stats [Susan] - phase2-vanilla-mode2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/stats/get-general-stats?client_id={{current_agent_id}}&tagMain=phase2&tagEval=phase2-vanilla-mode2-01&includeEmpty=false",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"stats",
										"get-general-stats"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "tagMain",
											"value": "phase2"
										},
										{
											"key": "tagEval",
											"value": "phase2-vanilla-mode2-01"
										},
										{
											"key": "classificationName",
											"value": "golf",
											"disabled": true
										},
										{
											"key": "perspectiveId",
											"value": "",
											"disabled": true
										},
										{
											"key": "personaId",
											"value": "",
											"disabled": true
										},
										{
											"key": "includeVariants",
											"value": "false",
											"description": "Whether to include extra variant statistics",
											"disabled": true
										},
										{
											"key": "includeEmpty",
											"value": "false"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get General Stats [Susan] - phase2-vanilla-mode3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/stats/get-general-stats?client_id={{current_agent_id}}&tagMain=phase2&tagEval=phase2-vanilla-mode3-01&includeVariants=false&includeEmpty=false",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"stats",
										"get-general-stats"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "tagMain",
											"value": "phase2"
										},
										{
											"key": "tagEval",
											"value": "phase2-vanilla-mode3-01"
										},
										{
											"key": "classificationName",
											"value": "golf",
											"disabled": true
										},
										{
											"key": "perspectiveId",
											"value": "",
											"disabled": true
										},
										{
											"key": "personaId",
											"value": "",
											"disabled": true
										},
										{
											"key": "includeVariants",
											"value": "false",
											"description": "Whether to include extra variant statistics"
										},
										{
											"key": "includeEmpty",
											"value": "false"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get General Stats [Susan] - phase2-base-mode3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/stats/get-general-stats?client_id={{current_agent_id}}&tagMain=phase2&tagEval=phase2-base-mode3-01&includeVariants=false&includeEmpty=false",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"stats",
										"get-general-stats"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "tagMain",
											"value": "phase2"
										},
										{
											"key": "tagEval",
											"value": "phase2-base-mode3-01"
										},
										{
											"key": "classificationName",
											"value": "golf",
											"disabled": true
										},
										{
											"key": "perspectiveId",
											"value": "",
											"disabled": true
										},
										{
											"key": "personaId",
											"value": "",
											"disabled": true
										},
										{
											"key": "includeVariants",
											"value": "false",
											"description": "Whether to include extra variant statistics"
										},
										{
											"key": "includeEmpty",
											"value": "false"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get General Stats [Susan] - phase2-ext-mode3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/stats/get-general-stats?client_id={{current_agent_id}}&tagMain=phase2&tagEval=phase2-ext-mode3-01&includeVariants=false&includeEmpty=false",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"stats",
										"get-general-stats"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "tagMain",
											"value": "phase2"
										},
										{
											"key": "tagEval",
											"value": "phase2-ext-mode3-01"
										},
										{
											"key": "classificationName",
											"value": "golf",
											"disabled": true
										},
										{
											"key": "perspectiveId",
											"value": "",
											"disabled": true
										},
										{
											"key": "personaId",
											"value": "",
											"disabled": true
										},
										{
											"key": "includeVariants",
											"value": "false",
											"description": "Whether to include extra variant statistics"
										},
										{
											"key": "includeEmpty",
											"value": "false"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get General Stats [Susan] - phase2-vanilla4-mode2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/stats/get-general-stats?client_id={{current_agent_id}}&tagMain=phase2&tagEval=phase2-vanilla4-mode2-01&includeVariants=false&includeEmpty=false",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"stats",
										"get-general-stats"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "tagMain",
											"value": "phase2"
										},
										{
											"key": "tagEval",
											"value": "phase2-vanilla4-mode2-01"
										},
										{
											"key": "classificationName",
											"value": "golf",
											"disabled": true
										},
										{
											"key": "perspectiveId",
											"value": "",
											"disabled": true
										},
										{
											"key": "personaId",
											"value": "",
											"disabled": true
										},
										{
											"key": "includeVariants",
											"value": "false",
											"description": "Whether to include extra variant statistics"
										},
										{
											"key": "includeEmpty",
											"value": "false"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get General Stats [Susan] - phase2-vanilla4-mode3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/stats/get-general-stats?client_id={{current_agent_id}}&tagMain=phase2&tagEval=phase2-vanilla4-mode3-01&includeVariants=false&includeEmpty=false",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"stats",
										"get-general-stats"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "tagMain",
											"value": "phase2"
										},
										{
											"key": "tagEval",
											"value": "phase2-vanilla4-mode3-01"
										},
										{
											"key": "classificationName",
											"value": "golf",
											"disabled": true
										},
										{
											"key": "perspectiveId",
											"value": "",
											"disabled": true
										},
										{
											"key": "personaId",
											"value": "",
											"disabled": true
										},
										{
											"key": "includeVariants",
											"value": "false",
											"description": "Whether to include extra variant statistics"
										},
										{
											"key": "includeEmpty",
											"value": "false"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "JUNK Get Tabular Stats as Excel [Susan]",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/stats/get-tabular-stats?client_id={{current_agent_id}}&tagMain=phase2&tagsEval={{eval_stats_list}}&format=excel",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"stats",
										"get-tabular-stats"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "tagMain",
											"value": "phase2"
										},
										{
											"key": "tagsEval",
											"value": "{{eval_stats_list}}"
										},
										{
											"key": "classificationName",
											"value": "golf",
											"disabled": true
										},
										{
											"key": "perspectiveId",
											"value": "",
											"disabled": true
										},
										{
											"key": "personaId",
											"value": "",
											"disabled": true
										},
										{
											"key": "includeVariants",
											"value": "false",
											"description": "Whether to include extra variant statistics",
											"disabled": true
										},
										{
											"key": "includeEmpty",
											"value": "false",
											"disabled": true
										},
										{
											"key": "format",
											"value": "excel"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Tabular Stats as Excel [Susan] DEV",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix_int_dev}}/api/v1/awag/data/stats/get-tabular-stats?client_id={{current_agent_id}}&tagMain=phase2&tagsEval={{eval_stats_list_tranche1}}&format=excel",
									"host": [
										"{{url_prefix_int_dev}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"stats",
										"get-tabular-stats"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "tagMain",
											"value": "phase2"
										},
										{
											"key": "tagsEval",
											"value": "{{eval_stats_list_tranche1}}"
										},
										{
											"key": "tagsEval",
											"value": "['phase2-vanilla-mode1-01', 'phase2-vanilla-mode2-01', 'phase2-vanilla-mode3-01', 'phase2-base-mode2-01', 'phase2-base-mode3-01', 'phase2-ext-mode3-01', 'phase2-vanilla4-mode2-01', 'phase2-vanilla4o-mode2-01']\n",
											"disabled": true
										},
										{
											"key": "classificationName",
											"value": "golf",
											"disabled": true
										},
										{
											"key": "perspectiveId",
											"value": "",
											"disabled": true
										},
										{
											"key": "personaId",
											"value": "",
											"disabled": true
										},
										{
											"key": "includeVariants",
											"value": "false",
											"description": "Whether to include extra variant statistics",
											"disabled": true
										},
										{
											"key": "includeEmpty",
											"value": "false",
											"disabled": true
										},
										{
											"key": "format",
											"value": "excel"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Tabular Stats as Excel [Susan] - Tranche1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/stats/get-tabular-stats?client_id={{current_agent_id}}&tagMain=phase2&tagsEval={{eval_stats_list_tranche1}}&format=excel",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"stats",
										"get-tabular-stats"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "tagMain",
											"value": "phase2"
										},
										{
											"key": "tagsEval",
											"value": "{{eval_stats_list_tranche1}}"
										},
										{
											"key": "classificationName",
											"value": "golf",
											"disabled": true
										},
										{
											"key": "perspectiveId",
											"value": "",
											"disabled": true
										},
										{
											"key": "personaId",
											"value": "",
											"disabled": true
										},
										{
											"key": "includeVariants",
											"value": "false",
											"description": "Whether to include extra variant statistics",
											"disabled": true
										},
										{
											"key": "includeEmpty",
											"value": "false",
											"disabled": true
										},
										{
											"key": "format",
											"value": "excel"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Tabular Stats as JSON [Susan] - Tranche1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/stats/get-tabular-stats?client_id={{current_agent_id}}&tagMain=phase2&tagsEval={{eval_stats_list_tranche1}}",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"stats",
										"get-tabular-stats"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "tagMain",
											"value": "phase2"
										},
										{
											"key": "tagsEval",
											"value": "{{eval_stats_list_tranche1}}"
										},
										{
											"key": "classificationName",
											"value": "golf",
											"disabled": true
										},
										{
											"key": "perspectiveId",
											"value": "",
											"disabled": true
										},
										{
											"key": "personaId",
											"value": "",
											"disabled": true
										},
										{
											"key": "includeVariants",
											"value": "false",
											"description": "Whether to include extra variant statistics",
											"disabled": true
										},
										{
											"key": "includeEmpty",
											"value": "false",
											"disabled": true
										},
										{
											"key": "format",
											"value": "json",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Tabular Stats as JSON [Susan] - DEV",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix_int_dev}}/api/v1/awag/data/stats/get-tabular-stats?client_id={{current_agent_id}}&tagMain=phase2&tagsEval={{eval_stats_list_tranche1}}",
									"host": [
										"{{url_prefix_int_dev}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"stats",
										"get-tabular-stats"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "tagMain",
											"value": "phase2"
										},
										{
											"key": "tagsEval",
											"value": "{{eval_stats_list_tranche1}}"
										},
										{
											"key": "classificationName",
											"value": "golf",
											"disabled": true
										},
										{
											"key": "perspectiveId",
											"value": "",
											"disabled": true
										},
										{
											"key": "personaId",
											"value": "",
											"disabled": true
										},
										{
											"key": "includeVariants",
											"value": "false",
											"description": "Whether to include extra variant statistics",
											"disabled": true
										},
										{
											"key": "includeEmpty",
											"value": "false",
											"disabled": true
										},
										{
											"key": "format",
											"value": "json",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Tabular Stats as Excel [Susan] - Mode 1 Compare",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/stats/get-tabular-stats?client_id={{current_agent_id}}&tagMain=phase2&tagsEval={{eval_stats_list_mode1_compare}}&format=excel",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"stats",
										"get-tabular-stats"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "tagMain",
											"value": "phase2"
										},
										{
											"key": "tagsEval",
											"value": "{{eval_stats_list_mode1_compare}}"
										},
										{
											"key": "classificationName",
											"value": "golf",
											"disabled": true
										},
										{
											"key": "perspectiveId",
											"value": "",
											"disabled": true
										},
										{
											"key": "personaId",
											"value": "",
											"disabled": true
										},
										{
											"key": "includeVariants",
											"value": "false",
											"description": "Whether to include extra variant statistics",
											"disabled": true
										},
										{
											"key": "includeEmpty",
											"value": "false",
											"disabled": true
										},
										{
											"key": "format",
											"value": "excel"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									"console.log(\"AWAG Data/Reporting/Susan\");\r",
									"\r",
									"var currentAgent = 'susan'\r",
									"\r",
									"pm.variables.set('current_agent', currentAgent);\r",
									"\r",
									"//console.log(\"function_sanitiseStringForJson: \" + pm.globals.get(\"function_sanitiseStringForJson\"));\r",
									"\r",
									"var sanitiseStringForJsonStr =  pm.globals.get(\"function_sanitiseStringForJson\")\r",
									"//console.log(\"function_sanitiseStringForJson: \" + sanitiseStringForJsonStr);\r",
									"var sanitiseStringForJson = eval(sanitiseStringForJsonStr);\r",
									"//console.log(\"sanitiseStringForJson: \" + sanitiseStringForJson);\r",
									"\r",
									"var agentIdVariableName = `agent_id_${currentAgent}`;\r",
									"var personaJsonVariableName = `persona_json_${currentAgent}`;\r",
									"\r",
									"pm.variables.set('agent_id_variable_name', agentIdVariableName);\r",
									"pm.variables.set('persona_json_variable_name', personaJsonVariableName);\r",
									"\r",
									"var agentIdValue = pm.environment.get(agentIdVariableName);\r",
									"pm.variables.set('current_agent_id', agentIdValue);\r",
									"\r",
									"var personaJsonValue = pm.environment.get(personaJsonVariableName);\r",
									"pm.variables.set('current_agent_persona_json', personaJsonValue);\r",
									"\r",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Phoebe",
					"item": [
						{
							"name": "Source Data",
							"item": [
								{
									"name": "AwAgData Get Base Data [Phoebe]",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/reporting/get-base-data?client_id={{current_agent_id}}&tagMain=phase2&page=1&count=5&desc=true",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"reporting",
												"get-base-data"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "itemId",
													"value": "ee3d9915-3965-4dad-ac38-59f644f07324",
													"disabled": true
												},
												{
													"key": "tagMain",
													"value": "phase2"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "count",
													"value": "5"
												},
												{
													"key": "desc",
													"value": "true"
												},
												{
													"key": "format",
													"value": "csv",
													"disabled": true
												},
												{
													"key": "personaId",
													"value": "adam",
													"disabled": true
												},
												{
													"key": "lastNHours",
													"value": "1",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithManual",
													"value": "true",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AwAgData Get Combined Evaluation Data [Phoebe] - phase2-vanilla-mode1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/reporting/get-combined-evaluation-data?client_id={{current_agent_id}}&tagMain=phase2&tagEval=phase2-vanilla-mode1-01&page=1&count=20&desc=true&onlyIncludeWithEval=true&onlyIncludeWithManual=true&onlyIncludeWithAgreement=true",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"reporting",
												"get-combined-evaluation-data"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "itemId",
													"value": "0bc3c507-82c4-4228-8b90-a3cdd6103e03",
													"disabled": true
												},
												{
													"key": "tagMain",
													"value": "phase2"
												},
												{
													"key": "tagEval",
													"value": "phase2-vanilla-mode1-01",
													"description": "eval-vanilla-phase2, eval-base-0221-phase2, eval-ext-0229-phase2"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "count",
													"value": "20"
												},
												{
													"key": "desc",
													"value": "true"
												},
												{
													"key": "format",
													"value": "csv",
													"disabled": true
												},
												{
													"key": "personaId",
													"value": "adam",
													"disabled": true
												},
												{
													"key": "lastNHours",
													"value": "1",
													"disabled": true
												},
												{
													"key": "contextId",
													"value": "CONTEXT-QPDdCpNnmfuQ8LsjPMAH",
													"disabled": true
												},
												{
													"key": "classificationName",
													"value": "tech",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithEval",
													"value": "true"
												},
												{
													"key": "onlyIncludeWithFeedback",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithManual",
													"value": "true"
												},
												{
													"key": "onlyIncludeWithLikert",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithAgreement",
													"value": "true"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AwAgData Get Combined Evaluation Data [Phoebe] - phase2-vanilla-mode2",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/reporting/get-combined-evaluation-data?client_id={{current_agent_id}}&tagMain=phase2&tagEval=phase2-vanilla-mode2-01&page=1&count=20&desc=true&onlyIncludeWithEval=true&onlyIncludeWithManual=true&onlyIncludeWithAgreement=true",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"reporting",
												"get-combined-evaluation-data"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "itemId",
													"value": "0bc3c507-82c4-4228-8b90-a3cdd6103e03",
													"disabled": true
												},
												{
													"key": "tagMain",
													"value": "phase2"
												},
												{
													"key": "tagEval",
													"value": "phase2-vanilla-mode2-01",
													"description": "eval-vanilla-phase2, eval-base-0221-phase2, eval-ext-0229-phase2"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "count",
													"value": "20"
												},
												{
													"key": "desc",
													"value": "true"
												},
												{
													"key": "format",
													"value": "csv",
													"disabled": true
												},
												{
													"key": "personaId",
													"value": "adam",
													"disabled": true
												},
												{
													"key": "lastNHours",
													"value": "1",
													"disabled": true
												},
												{
													"key": "contextId",
													"value": "CONTEXT-QPDdCpNnmfuQ8LsjPMAH",
													"disabled": true
												},
												{
													"key": "classificationName",
													"value": "tech",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithEval",
													"value": "true"
												},
												{
													"key": "onlyIncludeWithFeedback",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithManual",
													"value": "true"
												},
												{
													"key": "onlyIncludeWithLikert",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithAgreement",
													"value": "true"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AwAgData Get Combined Evaluation Data [Phoebe] - phase2-vanilla-mode3",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/reporting/get-combined-evaluation-data?client_id={{current_agent_id}}&tagMain=phase2&tagEval=phase2-vanilla-mode3-01&page=1&count=20&desc=true&onlyIncludeWithEval=true&onlyIncludeWithManual=true&onlyIncludeWithAgreement=true",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"reporting",
												"get-combined-evaluation-data"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "itemId",
													"value": "0bc3c507-82c4-4228-8b90-a3cdd6103e03",
													"disabled": true
												},
												{
													"key": "tagMain",
													"value": "phase2"
												},
												{
													"key": "tagEval",
													"value": "phase2-vanilla-mode3-01",
													"description": "eval-vanilla-phase2, eval-base-0221-phase2, eval-ext-0229-phase2"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "count",
													"value": "20"
												},
												{
													"key": "desc",
													"value": "true"
												},
												{
													"key": "format",
													"value": "csv",
													"disabled": true
												},
												{
													"key": "personaId",
													"value": "adam",
													"disabled": true
												},
												{
													"key": "lastNHours",
													"value": "1",
													"disabled": true
												},
												{
													"key": "contextId",
													"value": "CONTEXT-QPDdCpNnmfuQ8LsjPMAH",
													"disabled": true
												},
												{
													"key": "classificationName",
													"value": "tech",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithEval",
													"value": "true"
												},
												{
													"key": "onlyIncludeWithFeedback",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithManual",
													"value": "true"
												},
												{
													"key": "onlyIncludeWithLikert",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithAgreement",
													"value": "true"
												}
											]
										}
									},
									"response": []
								}
							],
							"description": "These queries retrieve data directly from the evaluation tables. They are used as sources by the update APIs, which populate tables based on this data."
						},
						{
							"name": "Update Reporting Data From Source",
							"item": [
								{
									"name": "Update Base Data [Phoebe]",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/reporting/update-base-data?client_id={{current_agent_id}}&tagMain=phase2&itemsPerPass=250",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"reporting",
												"update-base-data"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "tagMain",
													"value": "phase2"
												},
												{
													"key": "itemsPerPass",
													"value": "250"
												},
												{
													"key": "itemId",
													"value": "ee3d9915-3965-4dad-ac38-59f644f07324",
													"disabled": true
												},
												{
													"key": "lastNHours",
													"value": "1",
													"disabled": true
												},
												{
													"key": "classificationName",
													"value": "tech",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithManual",
													"value": "true",
													"disabled": true
												},
												{
													"key": "clearFirst",
													"value": "true",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Combined Evaluation Data [Phoebe] - mode1 & mode2",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/reporting/update-combined-evaluation-data?client_id={{current_agent_id}}&tagMain=phase2&tagsEval={{eval_stats_list_mode1_mode2}}&itemsPerPass=250&clearFirst=true&onlyIncludeWithLikert=true",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"reporting",
												"update-combined-evaluation-data"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "tagMain",
													"value": "phase2"
												},
												{
													"key": "tagsEval",
													"value": "{{eval_stats_list_mode1_mode2}}"
												},
												{
													"key": "itemsPerPass",
													"value": "250"
												},
												{
													"key": "itemId",
													"value": "ee3d9915-3965-4dad-ac38-59f644f07324",
													"disabled": true
												},
												{
													"key": "personaId",
													"value": "{{current_agent}}",
													"disabled": true
												},
												{
													"key": "lastNHours",
													"value": "1",
													"disabled": true
												},
												{
													"key": "contextId",
													"value": "CONTEXT-QPDdCpNnmfuQ8LsjPMAH",
													"disabled": true
												},
												{
													"key": "classificationName",
													"value": "tech",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithManual",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithEval",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithFeedback",
													"value": "true",
													"disabled": true
												},
												{
													"key": "clearFirst",
													"value": "true"
												},
												{
													"key": "onlyIncludeWithLikert",
													"value": "true"
												},
												{
													"key": "onlyIncludeWithAgreement",
													"value": "true",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Combined Evaluation Data [Phoebe] - mode3",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/reporting/update-combined-evaluation-data?client_id={{current_agent_id}}&tagMain=phase2&tagsEval={{eval_stats_list_mode3}}&itemsPerPass=250&clearFirst=true&onlyIncludeWithAgreement=true",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"reporting",
												"update-combined-evaluation-data"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "tagMain",
													"value": "phase2"
												},
												{
													"key": "tagsEval",
													"value": "{{eval_stats_list_mode3}}"
												},
												{
													"key": "itemsPerPass",
													"value": "250"
												},
												{
													"key": "itemId",
													"value": "ee3d9915-3965-4dad-ac38-59f644f07324",
													"disabled": true
												},
												{
													"key": "personaId",
													"value": "{{current_agent}}",
													"disabled": true
												},
												{
													"key": "lastNHours",
													"value": "1",
													"disabled": true
												},
												{
													"key": "contextId",
													"value": "CONTEXT-QPDdCpNnmfuQ8LsjPMAH",
													"disabled": true
												},
												{
													"key": "classificationName",
													"value": "tech",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithManual",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithEval",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithFeedback",
													"value": "true",
													"disabled": true
												},
												{
													"key": "clearFirst",
													"value": "true"
												},
												{
													"key": "onlyIncludeWithLikert",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithAgreement",
													"value": "true"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Get General Stats [Phoebe] - phase2-vanilla4-mode2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/stats/get-general-stats?client_id={{current_agent_id}}&tagMain=phase2&tagEval=phase2-vanilla4-mode2-01&includeVariants=false&includeEmpty=false",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"stats",
										"get-general-stats"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "tagMain",
											"value": "phase2"
										},
										{
											"key": "tagEval",
											"value": "phase2-vanilla4-mode2-01"
										},
										{
											"key": "classificationName",
											"value": "golf",
											"disabled": true
										},
										{
											"key": "perspectiveId",
											"value": "",
											"disabled": true
										},
										{
											"key": "personaId",
											"value": "",
											"disabled": true
										},
										{
											"key": "includeVariants",
											"value": "false",
											"description": "Whether to include extra variant statistics"
										},
										{
											"key": "includeEmpty",
											"value": "false"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get General Stats [Phoebe] - phase2-vanilla4-mode3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/stats/get-general-stats?client_id={{current_agent_id}}&tagMain=phase2&tagEval=phase2-vanilla4-mode3-01&includeVariants=false&includeEmpty=false",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"stats",
										"get-general-stats"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "tagMain",
											"value": "phase2"
										},
										{
											"key": "tagEval",
											"value": "phase2-vanilla4-mode3-01"
										},
										{
											"key": "classificationName",
											"value": "golf",
											"disabled": true
										},
										{
											"key": "perspectiveId",
											"value": "",
											"disabled": true
										},
										{
											"key": "personaId",
											"value": "",
											"disabled": true
										},
										{
											"key": "includeVariants",
											"value": "false",
											"description": "Whether to include extra variant statistics"
										},
										{
											"key": "includeEmpty",
											"value": "false"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Tabular Stats as Excel [Phoebe] - Tranche2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/stats/get-tabular-stats?client_id={{current_agent_id}}&tagMain=phase2&tagsEval={{eval_stats_list_tranche2}}&format=excel",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"stats",
										"get-tabular-stats"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "tagMain",
											"value": "phase2"
										},
										{
											"key": "tagsEval",
											"value": "{{eval_stats_list_tranche2}}"
										},
										{
											"key": "classificationName",
											"value": "golf",
											"disabled": true
										},
										{
											"key": "perspectiveId",
											"value": "",
											"disabled": true
										},
										{
											"key": "personaId",
											"value": "",
											"disabled": true
										},
										{
											"key": "includeVariants",
											"value": "false",
											"description": "Whether to include extra variant statistics",
											"disabled": true
										},
										{
											"key": "includeEmpty",
											"value": "false",
											"disabled": true
										},
										{
											"key": "format",
											"value": "excel"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Tabular Stats as JSON [Phoebe] - Tranche2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/stats/get-tabular-stats?client_id={{current_agent_id}}&tagMain=phase2&tagsEval={{eval_stats_list_tranche2}}",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"stats",
										"get-tabular-stats"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "tagMain",
											"value": "phase2"
										},
										{
											"key": "tagsEval",
											"value": "{{eval_stats_list_tranche2}}"
										},
										{
											"key": "classificationName",
											"value": "golf",
											"disabled": true
										},
										{
											"key": "perspectiveId",
											"value": "",
											"disabled": true
										},
										{
											"key": "personaId",
											"value": "",
											"disabled": true
										},
										{
											"key": "includeVariants",
											"value": "false",
											"description": "Whether to include extra variant statistics",
											"disabled": true
										},
										{
											"key": "includeEmpty",
											"value": "false",
											"disabled": true
										},
										{
											"key": "format",
											"value": "json",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									"console.log(\"AWAG Data/Reporting/Phoebe\");\r",
									"\r",
									"var currentAgent = 'phoebe'\r",
									"\r",
									"pm.variables.set('current_agent', currentAgent);\r",
									"\r",
									"//console.log(\"function_sanitiseStringForJson: \" + pm.globals.get(\"function_sanitiseStringForJson\"));\r",
									"\r",
									"var sanitiseStringForJsonStr =  pm.globals.get(\"function_sanitiseStringForJson\")\r",
									"//console.log(\"function_sanitiseStringForJson: \" + sanitiseStringForJsonStr);\r",
									"var sanitiseStringForJson = eval(sanitiseStringForJsonStr);\r",
									"//console.log(\"sanitiseStringForJson: \" + sanitiseStringForJson);\r",
									"\r",
									"var agentIdVariableName = `agent_id_${currentAgent}`;\r",
									"var personaJsonVariableName = `persona_json_${currentAgent}`;\r",
									"\r",
									"pm.variables.set('agent_id_variable_name', agentIdVariableName);\r",
									"pm.variables.set('persona_json_variable_name', personaJsonVariableName);\r",
									"\r",
									"var agentIdValue = pm.environment.get(agentIdVariableName);\r",
									"pm.variables.set('current_agent_id', agentIdValue);\r",
									"\r",
									"var personaJsonValue = pm.environment.get(personaJsonVariableName);\r",
									"pm.variables.set('current_agent_persona_json', personaJsonValue);\r",
									"\r",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Usha",
					"item": [
						{
							"name": "Source Data",
							"item": [
								{
									"name": "AwAgData Get Base Data [Usha]",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/reporting/get-base-data?client_id={{current_agent_id}}&tagMain=phase2&page=1&count=5&desc=true",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"reporting",
												"get-base-data"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "itemId",
													"value": "ee3d9915-3965-4dad-ac38-59f644f07324",
													"disabled": true
												},
												{
													"key": "tagMain",
													"value": "phase2"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "count",
													"value": "5"
												},
												{
													"key": "desc",
													"value": "true"
												},
												{
													"key": "format",
													"value": "csv",
													"disabled": true
												},
												{
													"key": "personaId",
													"value": "adam",
													"disabled": true
												},
												{
													"key": "lastNHours",
													"value": "1",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithManual",
													"value": "true",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AwAgData Get Combined Evaluation Data [Usha] - phase2-vanilla-mode1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/reporting/get-combined-evaluation-data?client_id={{current_agent_id}}&tagMain=phase2&tagEval=phase2-vanilla-mode1-01&page=1&count=20&desc=true&onlyIncludeWithEval=true&onlyIncludeWithManual=true&onlyIncludeWithAgreement=true",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"reporting",
												"get-combined-evaluation-data"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "itemId",
													"value": "0bc3c507-82c4-4228-8b90-a3cdd6103e03",
													"disabled": true
												},
												{
													"key": "tagMain",
													"value": "phase2"
												},
												{
													"key": "tagEval",
													"value": "phase2-vanilla-mode1-01",
													"description": "eval-vanilla-phase2, eval-base-0221-phase2, eval-ext-0229-phase2"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "count",
													"value": "20"
												},
												{
													"key": "desc",
													"value": "true"
												},
												{
													"key": "format",
													"value": "csv",
													"disabled": true
												},
												{
													"key": "personaId",
													"value": "adam",
													"disabled": true
												},
												{
													"key": "lastNHours",
													"value": "1",
													"disabled": true
												},
												{
													"key": "contextId",
													"value": "CONTEXT-QPDdCpNnmfuQ8LsjPMAH",
													"disabled": true
												},
												{
													"key": "classificationName",
													"value": "tech",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithEval",
													"value": "true"
												},
												{
													"key": "onlyIncludeWithFeedback",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithManual",
													"value": "true"
												},
												{
													"key": "onlyIncludeWithLikert",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithAgreement",
													"value": "true"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AwAgData Get Combined Evaluation Data [Usha] - phase2-vanilla-mode2",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/reporting/get-combined-evaluation-data?client_id={{current_agent_id}}&tagMain=phase2&tagEval=phase2-vanilla-mode2-01&page=1&count=20&desc=true&onlyIncludeWithEval=true&onlyIncludeWithManual=true&onlyIncludeWithAgreement=true",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"reporting",
												"get-combined-evaluation-data"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "itemId",
													"value": "0bc3c507-82c4-4228-8b90-a3cdd6103e03",
													"disabled": true
												},
												{
													"key": "tagMain",
													"value": "phase2"
												},
												{
													"key": "tagEval",
													"value": "phase2-vanilla-mode2-01",
													"description": "eval-vanilla-phase2, eval-base-0221-phase2, eval-ext-0229-phase2"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "count",
													"value": "20"
												},
												{
													"key": "desc",
													"value": "true"
												},
												{
													"key": "format",
													"value": "csv",
													"disabled": true
												},
												{
													"key": "personaId",
													"value": "adam",
													"disabled": true
												},
												{
													"key": "lastNHours",
													"value": "1",
													"disabled": true
												},
												{
													"key": "contextId",
													"value": "CONTEXT-QPDdCpNnmfuQ8LsjPMAH",
													"disabled": true
												},
												{
													"key": "classificationName",
													"value": "tech",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithEval",
													"value": "true"
												},
												{
													"key": "onlyIncludeWithFeedback",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithManual",
													"value": "true"
												},
												{
													"key": "onlyIncludeWithLikert",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithAgreement",
													"value": "true"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AwAgData Get Combined Evaluation Data [Usha] - phase2-vanilla-mode3",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/reporting/get-combined-evaluation-data?client_id={{current_agent_id}}&tagMain=phase2&tagEval=phase2-vanilla-mode3-01&page=1&count=20&desc=true&onlyIncludeWithEval=true&onlyIncludeWithManual=true&onlyIncludeWithAgreement=true",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"reporting",
												"get-combined-evaluation-data"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "itemId",
													"value": "0bc3c507-82c4-4228-8b90-a3cdd6103e03",
													"disabled": true
												},
												{
													"key": "tagMain",
													"value": "phase2"
												},
												{
													"key": "tagEval",
													"value": "phase2-vanilla-mode3-01",
													"description": "eval-vanilla-phase2, eval-base-0221-phase2, eval-ext-0229-phase2"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "count",
													"value": "20"
												},
												{
													"key": "desc",
													"value": "true"
												},
												{
													"key": "format",
													"value": "csv",
													"disabled": true
												},
												{
													"key": "personaId",
													"value": "adam",
													"disabled": true
												},
												{
													"key": "lastNHours",
													"value": "1",
													"disabled": true
												},
												{
													"key": "contextId",
													"value": "CONTEXT-QPDdCpNnmfuQ8LsjPMAH",
													"disabled": true
												},
												{
													"key": "classificationName",
													"value": "tech",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithEval",
													"value": "true"
												},
												{
													"key": "onlyIncludeWithFeedback",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithManual",
													"value": "true"
												},
												{
													"key": "onlyIncludeWithLikert",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithAgreement",
													"value": "true"
												}
											]
										}
									},
									"response": []
								}
							],
							"description": "These queries retrieve data directly from the evaluation tables. They are used as sources by the update APIs, which populate tables based on this data."
						},
						{
							"name": "Update Reporting Data From Source",
							"item": [
								{
									"name": "Update Base Data [Usha]",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/reporting/update-base-data?client_id={{current_agent_id}}&tagMain=phase2&itemsPerPass=250",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"reporting",
												"update-base-data"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "tagMain",
													"value": "phase2"
												},
												{
													"key": "itemsPerPass",
													"value": "250"
												},
												{
													"key": "itemId",
													"value": "ee3d9915-3965-4dad-ac38-59f644f07324",
													"disabled": true
												},
												{
													"key": "lastNHours",
													"value": "1",
													"disabled": true
												},
												{
													"key": "classificationName",
													"value": "tech",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithManual",
													"value": "true",
													"disabled": true
												},
												{
													"key": "clearFirst",
													"value": "true",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Combined Evaluation Data [Usha] - mode1 & mode2",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/reporting/update-combined-evaluation-data?client_id={{current_agent_id}}&tagMain=phase2&tagsEval={{eval_stats_list_mode1_mode2}}&itemsPerPass=250&clearFirst=true&onlyIncludeWithLikert=true",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"reporting",
												"update-combined-evaluation-data"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "tagMain",
													"value": "phase2"
												},
												{
													"key": "tagsEval",
													"value": "{{eval_stats_list_mode1_mode2}}"
												},
												{
													"key": "itemsPerPass",
													"value": "250"
												},
												{
													"key": "itemId",
													"value": "ee3d9915-3965-4dad-ac38-59f644f07324",
													"disabled": true
												},
												{
													"key": "personaId",
													"value": "{{current_agent}}",
													"disabled": true
												},
												{
													"key": "lastNHours",
													"value": "1",
													"disabled": true
												},
												{
													"key": "contextId",
													"value": "CONTEXT-QPDdCpNnmfuQ8LsjPMAH",
													"disabled": true
												},
												{
													"key": "classificationName",
													"value": "tech",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithManual",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithEval",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithFeedback",
													"value": "true",
													"disabled": true
												},
												{
													"key": "clearFirst",
													"value": "true"
												},
												{
													"key": "onlyIncludeWithLikert",
													"value": "true"
												},
												{
													"key": "onlyIncludeWithAgreement",
													"value": "true",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Combined Evaluation Data [Usha] - mode3",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/reporting/update-combined-evaluation-data?client_id={{current_agent_id}}&tagMain=phase2&tagsEval={{eval_stats_list_mode3}}&itemsPerPass=250&clearFirst=true&onlyIncludeWithAgreement=true",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"reporting",
												"update-combined-evaluation-data"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "tagMain",
													"value": "phase2"
												},
												{
													"key": "tagsEval",
													"value": "{{eval_stats_list_mode3}}"
												},
												{
													"key": "itemsPerPass",
													"value": "250"
												},
												{
													"key": "itemId",
													"value": "ee3d9915-3965-4dad-ac38-59f644f07324",
													"disabled": true
												},
												{
													"key": "personaId",
													"value": "{{current_agent}}",
													"disabled": true
												},
												{
													"key": "lastNHours",
													"value": "1",
													"disabled": true
												},
												{
													"key": "contextId",
													"value": "CONTEXT-QPDdCpNnmfuQ8LsjPMAH",
													"disabled": true
												},
												{
													"key": "classificationName",
													"value": "tech",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithManual",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithEval",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithFeedback",
													"value": "true",
													"disabled": true
												},
												{
													"key": "clearFirst",
													"value": "true"
												},
												{
													"key": "onlyIncludeWithLikert",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithAgreement",
													"value": "true"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Get General Stats [Usha] - phase2-vanilla4-mode2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/stats/get-general-stats?client_id={{current_agent_id}}&tagMain=phase2&tagEval=phase2-vanilla4-mode2-01&includeVariants=false&includeEmpty=false",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"stats",
										"get-general-stats"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "tagMain",
											"value": "phase2"
										},
										{
											"key": "tagEval",
											"value": "phase2-vanilla4-mode2-01"
										},
										{
											"key": "classificationName",
											"value": "golf",
											"disabled": true
										},
										{
											"key": "perspectiveId",
											"value": "",
											"disabled": true
										},
										{
											"key": "personaId",
											"value": "",
											"disabled": true
										},
										{
											"key": "includeVariants",
											"value": "false",
											"description": "Whether to include extra variant statistics"
										},
										{
											"key": "includeEmpty",
											"value": "false"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get General Stats [Usha] - phase2-vanilla4-mode3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/stats/get-general-stats?client_id={{current_agent_id}}&tagMain=phase2&tagEval=phase2-vanilla4-mode3-01&includeVariants=false&includeEmpty=false",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"stats",
										"get-general-stats"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "tagMain",
											"value": "phase2"
										},
										{
											"key": "tagEval",
											"value": "phase2-vanilla4-mode3-01"
										},
										{
											"key": "classificationName",
											"value": "golf",
											"disabled": true
										},
										{
											"key": "perspectiveId",
											"value": "",
											"disabled": true
										},
										{
											"key": "personaId",
											"value": "",
											"disabled": true
										},
										{
											"key": "includeVariants",
											"value": "false",
											"description": "Whether to include extra variant statistics"
										},
										{
											"key": "includeEmpty",
											"value": "false"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Tabular Stats as Excel [Usha] - Tranche2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/stats/get-tabular-stats?client_id={{current_agent_id}}&tagMain=phase2&tagsEval={{eval_stats_list_tranche2}}&format=excel",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"stats",
										"get-tabular-stats"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "tagMain",
											"value": "phase2"
										},
										{
											"key": "tagsEval",
											"value": "{{eval_stats_list_tranche2}}"
										},
										{
											"key": "classificationName",
											"value": "golf",
											"disabled": true
										},
										{
											"key": "perspectiveId",
											"value": "",
											"disabled": true
										},
										{
											"key": "personaId",
											"value": "",
											"disabled": true
										},
										{
											"key": "includeVariants",
											"value": "false",
											"description": "Whether to include extra variant statistics",
											"disabled": true
										},
										{
											"key": "includeEmpty",
											"value": "false",
											"disabled": true
										},
										{
											"key": "format",
											"value": "excel"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Tabular Stats as JSON [Usha] - Tranche2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/stats/get-tabular-stats?client_id={{current_agent_id}}&tagMain=phase2&tagsEval={{eval_stats_list_tranche2}}",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"stats",
										"get-tabular-stats"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "tagMain",
											"value": "phase2"
										},
										{
											"key": "tagsEval",
											"value": "{{eval_stats_list_tranche2}}"
										},
										{
											"key": "classificationName",
											"value": "golf",
											"disabled": true
										},
										{
											"key": "perspectiveId",
											"value": "",
											"disabled": true
										},
										{
											"key": "personaId",
											"value": "",
											"disabled": true
										},
										{
											"key": "includeVariants",
											"value": "false",
											"description": "Whether to include extra variant statistics",
											"disabled": true
										},
										{
											"key": "includeEmpty",
											"value": "false",
											"disabled": true
										},
										{
											"key": "format",
											"value": "json",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									"console.log(\"AWAG Data/Reporting/Usha\");\r",
									"\r",
									"var currentAgent = 'usha'\r",
									"\r",
									"pm.variables.set('current_agent', currentAgent);\r",
									"\r",
									"//console.log(\"function_sanitiseStringForJson: \" + pm.globals.get(\"function_sanitiseStringForJson\"));\r",
									"\r",
									"var sanitiseStringForJsonStr =  pm.globals.get(\"function_sanitiseStringForJson\")\r",
									"//console.log(\"function_sanitiseStringForJson: \" + sanitiseStringForJsonStr);\r",
									"var sanitiseStringForJson = eval(sanitiseStringForJsonStr);\r",
									"//console.log(\"sanitiseStringForJson: \" + sanitiseStringForJson);\r",
									"\r",
									"var agentIdVariableName = `agent_id_${currentAgent}`;\r",
									"var personaJsonVariableName = `persona_json_${currentAgent}`;\r",
									"\r",
									"pm.variables.set('agent_id_variable_name', agentIdVariableName);\r",
									"pm.variables.set('persona_json_variable_name', personaJsonVariableName);\r",
									"\r",
									"var agentIdValue = pm.environment.get(agentIdVariableName);\r",
									"pm.variables.set('current_agent_id', agentIdValue);\r",
									"\r",
									"var personaJsonValue = pm.environment.get(personaJsonVariableName);\r",
									"pm.variables.set('current_agent_persona_json', personaJsonValue);\r",
									"\r",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Adam",
					"item": [
						{
							"name": "Source Data",
							"item": [
								{
									"name": "AwAgData Get Base Data [Adam]",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/reporting/get-base-data?client_id={{current_agent_id}}&tagMain=phase2&page=1&count=5&desc=true",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"reporting",
												"get-base-data"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "itemId",
													"value": "ee3d9915-3965-4dad-ac38-59f644f07324",
													"disabled": true
												},
												{
													"key": "tagMain",
													"value": "phase2"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "count",
													"value": "5"
												},
												{
													"key": "desc",
													"value": "true"
												},
												{
													"key": "format",
													"value": "csv",
													"disabled": true
												},
												{
													"key": "personaId",
													"value": "adam",
													"disabled": true
												},
												{
													"key": "lastNHours",
													"value": "1",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithManual",
													"value": "true",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AwAgData Get Combined Evaluation Data [Adam] - phase2-vanilla-mode1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/reporting/get-combined-evaluation-data?client_id={{current_agent_id}}&tagMain=phase2&tagEval=phase2-vanilla-mode1-01&page=1&count=20&desc=true&onlyIncludeWithEval=true&onlyIncludeWithManual=true&onlyIncludeWithAgreement=true",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"reporting",
												"get-combined-evaluation-data"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "itemId",
													"value": "0bc3c507-82c4-4228-8b90-a3cdd6103e03",
													"disabled": true
												},
												{
													"key": "tagMain",
													"value": "phase2"
												},
												{
													"key": "tagEval",
													"value": "phase2-vanilla-mode1-01",
													"description": "eval-vanilla-phase2, eval-base-0221-phase2, eval-ext-0229-phase2"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "count",
													"value": "20"
												},
												{
													"key": "desc",
													"value": "true"
												},
												{
													"key": "format",
													"value": "csv",
													"disabled": true
												},
												{
													"key": "personaId",
													"value": "adam",
													"disabled": true
												},
												{
													"key": "lastNHours",
													"value": "1",
													"disabled": true
												},
												{
													"key": "contextId",
													"value": "CONTEXT-QPDdCpNnmfuQ8LsjPMAH",
													"disabled": true
												},
												{
													"key": "classificationName",
													"value": "tech",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithEval",
													"value": "true"
												},
												{
													"key": "onlyIncludeWithFeedback",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithManual",
													"value": "true"
												},
												{
													"key": "onlyIncludeWithLikert",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithAgreement",
													"value": "true"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AwAgData Get Combined Evaluation Data [Adam] - phase2-vanilla-mode2",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/reporting/get-combined-evaluation-data?client_id={{current_agent_id}}&tagMain=phase2&tagEval=phase2-vanilla-mode2-01&page=1&count=20&desc=true&onlyIncludeWithEval=true&onlyIncludeWithManual=true&onlyIncludeWithAgreement=true",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"reporting",
												"get-combined-evaluation-data"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "itemId",
													"value": "0bc3c507-82c4-4228-8b90-a3cdd6103e03",
													"disabled": true
												},
												{
													"key": "tagMain",
													"value": "phase2"
												},
												{
													"key": "tagEval",
													"value": "phase2-vanilla-mode2-01",
													"description": "eval-vanilla-phase2, eval-base-0221-phase2, eval-ext-0229-phase2"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "count",
													"value": "20"
												},
												{
													"key": "desc",
													"value": "true"
												},
												{
													"key": "format",
													"value": "csv",
													"disabled": true
												},
												{
													"key": "personaId",
													"value": "adam",
													"disabled": true
												},
												{
													"key": "lastNHours",
													"value": "1",
													"disabled": true
												},
												{
													"key": "contextId",
													"value": "CONTEXT-QPDdCpNnmfuQ8LsjPMAH",
													"disabled": true
												},
												{
													"key": "classificationName",
													"value": "tech",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithEval",
													"value": "true"
												},
												{
													"key": "onlyIncludeWithFeedback",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithManual",
													"value": "true"
												},
												{
													"key": "onlyIncludeWithLikert",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithAgreement",
													"value": "true"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AwAgData Get Combined Evaluation Data [Adam] - phase2-vanilla-mode3",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/reporting/get-combined-evaluation-data?client_id={{current_agent_id}}&tagMain=phase2&tagEval=phase2-vanilla-mode3-01&page=1&count=20&desc=true&onlyIncludeWithEval=true&onlyIncludeWithManual=true&onlyIncludeWithAgreement=true",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"reporting",
												"get-combined-evaluation-data"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "itemId",
													"value": "0bc3c507-82c4-4228-8b90-a3cdd6103e03",
													"disabled": true
												},
												{
													"key": "tagMain",
													"value": "phase2"
												},
												{
													"key": "tagEval",
													"value": "phase2-vanilla-mode3-01",
													"description": "eval-vanilla-phase2, eval-base-0221-phase2, eval-ext-0229-phase2"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "count",
													"value": "20"
												},
												{
													"key": "desc",
													"value": "true"
												},
												{
													"key": "format",
													"value": "csv",
													"disabled": true
												},
												{
													"key": "personaId",
													"value": "adam",
													"disabled": true
												},
												{
													"key": "lastNHours",
													"value": "1",
													"disabled": true
												},
												{
													"key": "contextId",
													"value": "CONTEXT-QPDdCpNnmfuQ8LsjPMAH",
													"disabled": true
												},
												{
													"key": "classificationName",
													"value": "tech",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithEval",
													"value": "true"
												},
												{
													"key": "onlyIncludeWithFeedback",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithManual",
													"value": "true"
												},
												{
													"key": "onlyIncludeWithLikert",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithAgreement",
													"value": "true"
												}
											]
										}
									},
									"response": []
								}
							],
							"description": "These queries retrieve data directly from the evaluation tables. They are used as sources by the update APIs, which populate tables based on this data."
						},
						{
							"name": "Update Reporting Data From Source",
							"item": [
								{
									"name": "Update Base Data [Adam]",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/reporting/update-base-data?client_id={{current_agent_id}}&tagMain=phase2&itemsPerPass=250",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"reporting",
												"update-base-data"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "tagMain",
													"value": "phase2"
												},
												{
													"key": "itemsPerPass",
													"value": "250"
												},
												{
													"key": "itemId",
													"value": "ee3d9915-3965-4dad-ac38-59f644f07324",
													"disabled": true
												},
												{
													"key": "lastNHours",
													"value": "1",
													"disabled": true
												},
												{
													"key": "classificationName",
													"value": "tech",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithManual",
													"value": "true",
													"disabled": true
												},
												{
													"key": "clearFirst",
													"value": "true",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Combined Evaluation Data [Adam] - mode1 & mode2",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/reporting/update-combined-evaluation-data?client_id={{current_agent_id}}&tagMain=phase2&tagsEval={{eval_stats_list_mode1_mode2}}&itemsPerPass=250&clearFirst=true&onlyIncludeWithLikert=true",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"reporting",
												"update-combined-evaluation-data"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "tagMain",
													"value": "phase2"
												},
												{
													"key": "tagsEval",
													"value": "{{eval_stats_list_mode1_mode2}}"
												},
												{
													"key": "itemsPerPass",
													"value": "250"
												},
												{
													"key": "itemId",
													"value": "ee3d9915-3965-4dad-ac38-59f644f07324",
													"disabled": true
												},
												{
													"key": "personaId",
													"value": "{{current_agent}}",
													"disabled": true
												},
												{
													"key": "lastNHours",
													"value": "1",
													"disabled": true
												},
												{
													"key": "contextId",
													"value": "CONTEXT-QPDdCpNnmfuQ8LsjPMAH",
													"disabled": true
												},
												{
													"key": "classificationName",
													"value": "tech",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithManual",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithEval",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithFeedback",
													"value": "true",
													"disabled": true
												},
												{
													"key": "clearFirst",
													"value": "true"
												},
												{
													"key": "onlyIncludeWithLikert",
													"value": "true"
												},
												{
													"key": "onlyIncludeWithAgreement",
													"value": "true",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Combined Evaluation Data [Adam] - mode3",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/reporting/update-combined-evaluation-data?client_id={{current_agent_id}}&tagMain=phase2&tagsEval={{eval_stats_list_mode3}}&itemsPerPass=250&clearFirst=true&onlyIncludeWithAgreement=true",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"reporting",
												"update-combined-evaluation-data"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "tagMain",
													"value": "phase2"
												},
												{
													"key": "tagsEval",
													"value": "{{eval_stats_list_mode3}}"
												},
												{
													"key": "itemsPerPass",
													"value": "250"
												},
												{
													"key": "itemId",
													"value": "ee3d9915-3965-4dad-ac38-59f644f07324",
													"disabled": true
												},
												{
													"key": "personaId",
													"value": "{{current_agent}}",
													"disabled": true
												},
												{
													"key": "lastNHours",
													"value": "1",
													"disabled": true
												},
												{
													"key": "contextId",
													"value": "CONTEXT-QPDdCpNnmfuQ8LsjPMAH",
													"disabled": true
												},
												{
													"key": "classificationName",
													"value": "tech",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithManual",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithEval",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithFeedback",
													"value": "true",
													"disabled": true
												},
												{
													"key": "clearFirst",
													"value": "true"
												},
												{
													"key": "onlyIncludeWithLikert",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithAgreement",
													"value": "true"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Get General Stats [Adam] - phase2-vanilla-mode1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/stats/get-general-stats?client_id={{current_agent_id}}&tagMain=phase2&tagEval=phase2-vanilla-mode1-01&includeEmpty=false",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"stats",
										"get-general-stats"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "tagMain",
											"value": "phase2"
										},
										{
											"key": "tagEval",
											"value": "phase2-vanilla-mode1-01"
										},
										{
											"key": "classificationName",
											"value": "golf",
											"disabled": true
										},
										{
											"key": "perspectiveId",
											"value": "",
											"disabled": true
										},
										{
											"key": "personaId",
											"value": "",
											"disabled": true
										},
										{
											"key": "includeVariants",
											"value": "false",
											"description": "Whether to include extra variant statistics",
											"disabled": true
										},
										{
											"key": "includeEmpty",
											"value": "false"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get General Stats [Adam] - phase2-vanilla-mode1 02",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/stats/get-general-stats?client_id={{current_agent_id}}&tagMain=phase2&tagEval=phase2-vanilla-mode1-02&includeEmpty=false",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"stats",
										"get-general-stats"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "tagMain",
											"value": "phase2"
										},
										{
											"key": "tagEval",
											"value": "phase2-vanilla-mode1-02"
										},
										{
											"key": "classificationName",
											"value": "golf",
											"disabled": true
										},
										{
											"key": "perspectiveId",
											"value": "",
											"disabled": true
										},
										{
											"key": "personaId",
											"value": "",
											"disabled": true
										},
										{
											"key": "includeVariants",
											"value": "false",
											"description": "Whether to include extra variant statistics",
											"disabled": true
										},
										{
											"key": "includeEmpty",
											"value": "false"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get General Stats [Adam] - phase2-vanilla-mode3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/stats/get-general-stats?client_id={{current_agent_id}}&tagMain=phase2&tagEval=phase2-vanilla-mode3-01&includeVariants=false&includeEmpty=false",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"stats",
										"get-general-stats"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "tagMain",
											"value": "phase2"
										},
										{
											"key": "tagEval",
											"value": "phase2-vanilla-mode3-01"
										},
										{
											"key": "classificationName",
											"value": "golf",
											"disabled": true
										},
										{
											"key": "perspectiveId",
											"value": "",
											"disabled": true
										},
										{
											"key": "personaId",
											"value": "",
											"disabled": true
										},
										{
											"key": "includeVariants",
											"value": "false",
											"description": "Whether to include extra variant statistics"
										},
										{
											"key": "includeEmpty",
											"value": "false"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get General Stats [Adam] - phase2-vanilla4o-mode3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/stats/get-general-stats?client_id={{current_agent_id}}&tagMain=phase2&tagEval=phase2-vanilla4o-mode3-01&includeVariants=false&includeEmpty=false",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"stats",
										"get-general-stats"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "tagMain",
											"value": "phase2"
										},
										{
											"key": "tagEval",
											"value": "phase2-vanilla4o-mode3-01"
										},
										{
											"key": "classificationName",
											"value": "golf",
											"disabled": true
										},
										{
											"key": "perspectiveId",
											"value": "",
											"disabled": true
										},
										{
											"key": "personaId",
											"value": "",
											"disabled": true
										},
										{
											"key": "includeVariants",
											"value": "false",
											"description": "Whether to include extra variant statistics"
										},
										{
											"key": "includeEmpty",
											"value": "false"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Tabular Stats as JSON [Adam] DEV",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix_int_dev}}/api/v1/awag/data/stats/get-tabular-stats?client_id={{current_agent_id}}&tagMain=phase2&tagsEval={{eval_stats_list}}&format=json",
									"host": [
										"{{url_prefix_int_dev}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"stats",
										"get-tabular-stats"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "tagMain",
											"value": "phase2"
										},
										{
											"key": "tagsEval",
											"value": "{{eval_stats_list}}"
										},
										{
											"key": "classificationName",
											"value": "golf",
											"disabled": true
										},
										{
											"key": "perspectiveId",
											"value": "",
											"disabled": true
										},
										{
											"key": "personaId",
											"value": "",
											"disabled": true
										},
										{
											"key": "includeVariants",
											"value": "false",
											"description": "Whether to include extra variant statistics",
											"disabled": true
										},
										{
											"key": "includeEmpty",
											"value": "false",
											"disabled": true
										},
										{
											"key": "format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Tabular Stats as Excel [Adam] - Tranche1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/stats/get-tabular-stats?client_id={{current_agent_id}}&tagMain=phase2&tagsEval={{eval_stats_list_tranche1}}&format=excel",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"stats",
										"get-tabular-stats"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "tagMain",
											"value": "phase2"
										},
										{
											"key": "tagsEval",
											"value": "{{eval_stats_list_tranche1}}"
										},
										{
											"key": "classificationName",
											"value": "golf",
											"disabled": true
										},
										{
											"key": "perspectiveId",
											"value": "",
											"disabled": true
										},
										{
											"key": "personaId",
											"value": "",
											"disabled": true
										},
										{
											"key": "includeVariants",
											"value": "false",
											"description": "Whether to include extra variant statistics",
											"disabled": true
										},
										{
											"key": "includeEmpty",
											"value": "false",
											"disabled": true
										},
										{
											"key": "format",
											"value": "excel"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Tabular Stats as JSON [Adam] - Tranche1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/stats/get-tabular-stats?client_id={{current_agent_id}}&tagMain=phase2&tagsEval={{eval_stats_list_tranche1}}&format=json",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"stats",
										"get-tabular-stats"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "tagMain",
											"value": "phase2"
										},
										{
											"key": "tagsEval",
											"value": "{{eval_stats_list_tranche1}}"
										},
										{
											"key": "classificationName",
											"value": "golf",
											"disabled": true
										},
										{
											"key": "perspectiveId",
											"value": "",
											"disabled": true
										},
										{
											"key": "personaId",
											"value": "",
											"disabled": true
										},
										{
											"key": "includeVariants",
											"value": "false",
											"description": "Whether to include extra variant statistics",
											"disabled": true
										},
										{
											"key": "includeEmpty",
											"value": "false",
											"disabled": true
										},
										{
											"key": "format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Tabular Stats as Excel [Adam] - Mode 1 Compare",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/stats/get-tabular-stats?client_id={{current_agent_id}}&tagMain=phase2&tagsEval={{eval_stats_list_mode1_compare}}&format=excel",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"stats",
										"get-tabular-stats"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "tagMain",
											"value": "phase2"
										},
										{
											"key": "tagsEval",
											"value": "{{eval_stats_list_mode1_compare}}"
										},
										{
											"key": "classificationName",
											"value": "golf",
											"disabled": true
										},
										{
											"key": "perspectiveId",
											"value": "",
											"disabled": true
										},
										{
											"key": "personaId",
											"value": "",
											"disabled": true
										},
										{
											"key": "includeVariants",
											"value": "false",
											"description": "Whether to include extra variant statistics",
											"disabled": true
										},
										{
											"key": "includeEmpty",
											"value": "false",
											"disabled": true
										},
										{
											"key": "format",
											"value": "excel"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Tabular Stats as Excel [Adam] DEV",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix_int_dev}}/api/v1/awag/data/stats/get-tabular-stats?client_id={{current_agent_id}}&tagMain=phase2&tagsEval=['phase2-vanilla-mode1-02', 'phase2-vanilla-mode2-01', 'phase2-vanilla-mode3-01', 'phase2-base-mode2-01', 'phase2-base-mode3-01', 'phase2-ext-mode3-01', 'phase2-vanilla4-mode2-01', 'phase2-vanilla4o-mode2-01', 'phase2-vanilla4-mode3-01', 'phase2-vanilla4o-mode3-01']&format=excel",
									"host": [
										"{{url_prefix_int_dev}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"stats",
										"get-tabular-stats"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "tagMain",
											"value": "phase2"
										},
										{
											"key": "tagsEval",
											"value": "{{eval_stats_list}}",
											"disabled": true
										},
										{
											"key": "tagsEval",
											"value": "['phase2-vanilla-mode1-02', 'phase2-vanilla-mode2-01', 'phase2-vanilla-mode3-01', 'phase2-base-mode2-01', 'phase2-base-mode3-01', 'phase2-ext-mode3-01', 'phase2-vanilla4-mode2-01', 'phase2-vanilla4o-mode2-01', 'phase2-vanilla4-mode3-01', 'phase2-vanilla4o-mode3-01']"
										},
										{
											"key": "classificationName",
											"value": "golf",
											"disabled": true
										},
										{
											"key": "perspectiveId",
											"value": "",
											"disabled": true
										},
										{
											"key": "personaId",
											"value": "",
											"disabled": true
										},
										{
											"key": "includeVariants",
											"value": "false",
											"description": "Whether to include extra variant statistics",
											"disabled": true
										},
										{
											"key": "includeEmpty",
											"value": "false",
											"disabled": true
										},
										{
											"key": "format",
											"value": "excel"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									"console.log(\"AWAG Data/Reporting/Adam\");\r",
									"\r",
									"var currentAgent = 'adam'\r",
									"\r",
									"pm.variables.set('current_agent', currentAgent);\r",
									"\r",
									"//console.log(\"function_sanitiseStringForJson: \" + pm.globals.get(\"function_sanitiseStringForJson\"));\r",
									"\r",
									"var sanitiseStringForJsonStr =  pm.globals.get(\"function_sanitiseStringForJson\")\r",
									"//console.log(\"function_sanitiseStringForJson: \" + sanitiseStringForJsonStr);\r",
									"var sanitiseStringForJson = eval(sanitiseStringForJsonStr);\r",
									"//console.log(\"sanitiseStringForJson: \" + sanitiseStringForJson);\r",
									"\r",
									"var agentIdVariableName = `agent_id_${currentAgent}`;\r",
									"var personaJsonVariableName = `persona_json_${currentAgent}`;\r",
									"\r",
									"pm.variables.set('agent_id_variable_name', agentIdVariableName);\r",
									"pm.variables.set('persona_json_variable_name', personaJsonVariableName);\r",
									"\r",
									"var agentIdValue = pm.environment.get(agentIdVariableName);\r",
									"pm.variables.set('current_agent_id', agentIdValue);\r",
									"\r",
									"var personaJsonValue = pm.environment.get(personaJsonVariableName);\r",
									"pm.variables.set('current_agent_persona_json', personaJsonValue);\r",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Kenton",
					"item": [
						{
							"name": "Source Data",
							"item": [
								{
									"name": "AwAgData Get Base Data [Kenton]",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/reporting/get-base-data?client_id={{current_agent_id}}&tagMain=phase2&page=1&count=5&desc=true",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"reporting",
												"get-base-data"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "itemId",
													"value": "ee3d9915-3965-4dad-ac38-59f644f07324",
													"disabled": true
												},
												{
													"key": "tagMain",
													"value": "phase2"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "count",
													"value": "5"
												},
												{
													"key": "desc",
													"value": "true"
												},
												{
													"key": "format",
													"value": "csv",
													"disabled": true
												},
												{
													"key": "personaId",
													"value": "{{current_agent}}",
													"disabled": true
												},
												{
													"key": "lastNHours",
													"value": "1",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithManual",
													"value": "true",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AwAgData Get Combined Evaluation Data [Kenton] - phase2-vanilla-mode1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/reporting/get-combined-evaluation-data?client_id={{current_agent_id}}&tagMain=phase2&tagEval=phase2-vanilla-mode1-01&page=1&count=20&desc=true&onlyIncludeWithEval=true&onlyIncludeWithManual=true&onlyIncludeWithAgreement=true",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"reporting",
												"get-combined-evaluation-data"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "itemId",
													"value": "0bc3c507-82c4-4228-8b90-a3cdd6103e03",
													"disabled": true
												},
												{
													"key": "tagMain",
													"value": "phase2"
												},
												{
													"key": "tagEval",
													"value": "phase2-vanilla-mode1-01",
													"description": "eval-vanilla-phase2, eval-base-0221-phase2, eval-ext-0229-phase2"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "count",
													"value": "20"
												},
												{
													"key": "desc",
													"value": "true"
												},
												{
													"key": "format",
													"value": "csv",
													"disabled": true
												},
												{
													"key": "personaId",
													"value": "{{current_agent}}",
													"disabled": true
												},
												{
													"key": "lastNHours",
													"value": "1",
													"disabled": true
												},
												{
													"key": "contextId",
													"value": "CONTEXT-QPDdCpNnmfuQ8LsjPMAH",
													"disabled": true
												},
												{
													"key": "classificationName",
													"value": "tech",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithEval",
													"value": "true"
												},
												{
													"key": "onlyIncludeWithFeedback",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithManual",
													"value": "true"
												},
												{
													"key": "onlyIncludeWithLikert",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithAgreement",
													"value": "true"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AwAgData Get Combined Evaluation Data [Kenton] - phase2-vanilla-mode2",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/reporting/get-combined-evaluation-data?client_id={{current_agent_id}}&tagMain=phase2&tagEval=phase2-vanilla-mode2-01&page=1&count=20&desc=true&onlyIncludeWithEval=true&onlyIncludeWithManual=true&onlyIncludeWithAgreement=true",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"reporting",
												"get-combined-evaluation-data"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "itemId",
													"value": "0bc3c507-82c4-4228-8b90-a3cdd6103e03",
													"disabled": true
												},
												{
													"key": "tagMain",
													"value": "phase2"
												},
												{
													"key": "tagEval",
													"value": "phase2-vanilla-mode2-01",
													"description": "eval-vanilla-phase2, eval-base-0221-phase2, eval-ext-0229-phase2"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "count",
													"value": "20"
												},
												{
													"key": "desc",
													"value": "true"
												},
												{
													"key": "format",
													"value": "csv",
													"disabled": true
												},
												{
													"key": "personaId",
													"value": "{{current_agent}}",
													"disabled": true
												},
												{
													"key": "lastNHours",
													"value": "1",
													"disabled": true
												},
												{
													"key": "contextId",
													"value": "CONTEXT-QPDdCpNnmfuQ8LsjPMAH",
													"disabled": true
												},
												{
													"key": "classificationName",
													"value": "tech",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithEval",
													"value": "true"
												},
												{
													"key": "onlyIncludeWithFeedback",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithManual",
													"value": "true"
												},
												{
													"key": "onlyIncludeWithLikert",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithAgreement",
													"value": "true"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AwAgData Get Combined Evaluation Data [Kenton] - phase2-vanilla-mode3",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/reporting/get-combined-evaluation-data?client_id={{current_agent_id}}&tagMain=phase2&tagEval=phase2-vanilla-mode3-01&page=1&count=20&desc=true&onlyIncludeWithEval=true&onlyIncludeWithManual=true&onlyIncludeWithAgreement=true",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"reporting",
												"get-combined-evaluation-data"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "itemId",
													"value": "0bc3c507-82c4-4228-8b90-a3cdd6103e03",
													"disabled": true
												},
												{
													"key": "tagMain",
													"value": "phase2"
												},
												{
													"key": "tagEval",
													"value": "phase2-vanilla-mode3-01",
													"description": "eval-vanilla-phase2, eval-base-0221-phase2, eval-ext-0229-phase2"
												},
												{
													"key": "page",
													"value": "1"
												},
												{
													"key": "count",
													"value": "20"
												},
												{
													"key": "desc",
													"value": "true"
												},
												{
													"key": "format",
													"value": "csv",
													"disabled": true
												},
												{
													"key": "personaId",
													"value": "{{current_agent}}",
													"disabled": true
												},
												{
													"key": "lastNHours",
													"value": "1",
													"disabled": true
												},
												{
													"key": "contextId",
													"value": "CONTEXT-QPDdCpNnmfuQ8LsjPMAH",
													"disabled": true
												},
												{
													"key": "classificationName",
													"value": "tech",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithEval",
													"value": "true"
												},
												{
													"key": "onlyIncludeWithFeedback",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithManual",
													"value": "true"
												},
												{
													"key": "onlyIncludeWithLikert",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithAgreement",
													"value": "true"
												}
											]
										}
									},
									"response": []
								}
							],
							"description": "These queries retrieve data directly from the evaluation tables. They are used as sources by the update APIs, which populate tables based on this data."
						},
						{
							"name": "Update Reporting Data From Source",
							"item": [
								{
									"name": "Update Base Data [Kenton]",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/reporting/update-base-data?client_id={{current_agent_id}}&tagMain=phase2&itemsPerPass=250",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"reporting",
												"update-base-data"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "tagMain",
													"value": "phase2"
												},
												{
													"key": "itemsPerPass",
													"value": "250"
												},
												{
													"key": "itemId",
													"value": "ee3d9915-3965-4dad-ac38-59f644f07324",
													"disabled": true
												},
												{
													"key": "lastNHours",
													"value": "1",
													"disabled": true
												},
												{
													"key": "classificationName",
													"value": "tech",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithManual",
													"value": "true",
													"disabled": true
												},
												{
													"key": "clearFirst",
													"value": "true",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Combined Evaluation Data [Kenton] - mode1 & mode2",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/reporting/update-combined-evaluation-data?client_id={{current_agent_id}}&tagMain=phase2&tagsEval={{eval_stats_list_mode1_mode2}}&itemsPerPass=250&clearFirst=true&onlyIncludeWithLikert=true",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"reporting",
												"update-combined-evaluation-data"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "tagMain",
													"value": "phase2"
												},
												{
													"key": "tagsEval",
													"value": "{{eval_stats_list_mode1_mode2}}"
												},
												{
													"key": "itemsPerPass",
													"value": "250"
												},
												{
													"key": "itemId",
													"value": "ee3d9915-3965-4dad-ac38-59f644f07324",
													"disabled": true
												},
												{
													"key": "personaId",
													"value": "{{current_agent}}",
													"disabled": true
												},
												{
													"key": "lastNHours",
													"value": "1",
													"disabled": true
												},
												{
													"key": "contextId",
													"value": "CONTEXT-QPDdCpNnmfuQ8LsjPMAH",
													"disabled": true
												},
												{
													"key": "classificationName",
													"value": "tech",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithManual",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithEval",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithFeedback",
													"value": "true",
													"disabled": true
												},
												{
													"key": "clearFirst",
													"value": "true"
												},
												{
													"key": "onlyIncludeWithLikert",
													"value": "true"
												},
												{
													"key": "onlyIncludeWithAgreement",
													"value": "true",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Combined Evaluation Data [Kenton] - mode3",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url_prefix}}/api/v1/awag/data/reporting/update-combined-evaluation-data?client_id={{current_agent_id}}&tagMain=phase2&tagsEval={{eval_stats_list_mode3}}&itemsPerPass=250&clearFirst=true&onlyIncludeWithAgreement=true",
											"host": [
												"{{url_prefix}}"
											],
											"path": [
												"api",
												"v1",
												"awag",
												"data",
												"reporting",
												"update-combined-evaluation-data"
											],
											"query": [
												{
													"key": "client_id",
													"value": "{{current_agent_id}}",
													"description": "Overides the x-client-id header to specify different agent"
												},
												{
													"key": "tagMain",
													"value": "phase2"
												},
												{
													"key": "tagsEval",
													"value": "{{eval_stats_list_mode3}}"
												},
												{
													"key": "itemsPerPass",
													"value": "250"
												},
												{
													"key": "itemId",
													"value": "ee3d9915-3965-4dad-ac38-59f644f07324",
													"disabled": true
												},
												{
													"key": "personaId",
													"value": "{{current_agent}}",
													"disabled": true
												},
												{
													"key": "lastNHours",
													"value": "1",
													"disabled": true
												},
												{
													"key": "contextId",
													"value": "CONTEXT-QPDdCpNnmfuQ8LsjPMAH",
													"disabled": true
												},
												{
													"key": "classificationName",
													"value": "tech",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithManual",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithEval",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithFeedback",
													"value": "true",
													"disabled": true
												},
												{
													"key": "clearFirst",
													"value": "true"
												},
												{
													"key": "onlyIncludeWithLikert",
													"value": "true",
													"disabled": true
												},
												{
													"key": "onlyIncludeWithAgreement",
													"value": "true"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Get General Stats [Kenton] - phase2-vanilla-mode1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/stats/get-general-stats?client_id={{current_agent_id}}&tagMain=phase2&tagEval=phase2-vanilla-mode1-01&includeEmpty=false",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"stats",
										"get-general-stats"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "tagMain",
											"value": "phase2"
										},
										{
											"key": "tagEval",
											"value": "phase2-vanilla-mode1-01"
										},
										{
											"key": "classificationName",
											"value": "golf",
											"disabled": true
										},
										{
											"key": "perspectiveId",
											"value": "",
											"disabled": true
										},
										{
											"key": "personaId",
											"value": "",
											"disabled": true
										},
										{
											"key": "includeVariants",
											"value": "false",
											"description": "Whether to include extra variant statistics",
											"disabled": true
										},
										{
											"key": "includeEmpty",
											"value": "false"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get General Stats [Kenton] - phase2-vanilla-mode1 DEV",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix_int_dev}}/api/v1/awag/data/stats/get-general-stats?client_id={{current_agent_id}}&tagMain=phase2&tagEval=phase2-vanilla-mode2-01&includeEmpty=false",
									"host": [
										"{{url_prefix_int_dev}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"stats",
										"get-general-stats"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "tagMain",
											"value": "phase2"
										},
										{
											"key": "tagEval",
											"value": "phase2-vanilla-mode2-01"
										},
										{
											"key": "classificationName",
											"value": "golf",
											"disabled": true
										},
										{
											"key": "perspectiveId",
											"value": "",
											"disabled": true
										},
										{
											"key": "personaId",
											"value": "",
											"disabled": true
										},
										{
											"key": "includeVariants",
											"value": "false",
											"description": "Whether to include extra variant statistics",
											"disabled": true
										},
										{
											"key": "includeEmpty",
											"value": "false"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get General Stats [Kenton] - phase2-vanilla-mode3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/stats/get-general-stats?client_id={{current_agent_id}}&tagMain=phase2&tagEval=phase2-vanilla-mode3-01&includeVariants=false&includeEmpty=false",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"stats",
										"get-general-stats"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "tagMain",
											"value": "phase2"
										},
										{
											"key": "tagEval",
											"value": "phase2-vanilla-mode3-01"
										},
										{
											"key": "classificationName",
											"value": "golf",
											"disabled": true
										},
										{
											"key": "perspectiveId",
											"value": "",
											"disabled": true
										},
										{
											"key": "personaId",
											"value": "",
											"disabled": true
										},
										{
											"key": "includeVariants",
											"value": "false",
											"description": "Whether to include extra variant statistics"
										},
										{
											"key": "includeEmpty",
											"value": "false"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "JUNK Get Tabular Stats as Excel [Kenton]",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/stats/get-tabular-stats?client_id={{current_agent_id}}&tagMain=phase2&tagsEval={{eval_stats_list}}&format=excel",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"stats",
										"get-tabular-stats"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "tagMain",
											"value": "phase2"
										},
										{
											"key": "tagsEval",
											"value": "{{eval_stats_list}}"
										},
										{
											"key": "classificationName",
											"value": "golf",
											"disabled": true
										},
										{
											"key": "perspectiveId",
											"value": "",
											"disabled": true
										},
										{
											"key": "personaId",
											"value": "",
											"disabled": true
										},
										{
											"key": "includeVariants",
											"value": "false",
											"description": "Whether to include extra variant statistics",
											"disabled": true
										},
										{
											"key": "includeEmpty",
											"value": "false",
											"disabled": true
										},
										{
											"key": "format",
											"value": "excel"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "JUNK Get Tabular Stats as LaTeX [Kenton]",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/stats/get-tabular-stats?client_id={{current_agent_id}}&tagMain=phase2&tagsEvalX={{eval_stats_list}}&tagsEval={{eval_stats_list_test}}&format=latex&minimal=true",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"stats",
										"get-tabular-stats"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "tagMain",
											"value": "phase2"
										},
										{
											"key": "tagsEvalX",
											"value": "{{eval_stats_list}}"
										},
										{
											"key": "tagsEval",
											"value": "{{eval_stats_list_test}}"
										},
										{
											"key": "classificationName",
											"value": "golf",
											"disabled": true
										},
										{
											"key": "perspectiveId",
											"value": "",
											"disabled": true
										},
										{
											"key": "personaId",
											"value": "",
											"disabled": true
										},
										{
											"key": "includeVariants",
											"value": "false",
											"description": "Whether to include extra variant statistics",
											"disabled": true
										},
										{
											"key": "includeEmpty",
											"value": "false",
											"disabled": true
										},
										{
											"key": "format",
											"value": "latex"
										},
										{
											"key": "minimal",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Tabular Stats as Excel [Kenton] DEV",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix_int_dev}}/api/v1/awag/data/stats/get-tabular-stats?client_id={{current_agent_id}}&tagMain=phase2&tagsEval={{eval_stats_list}}&format=excel",
									"host": [
										"{{url_prefix_int_dev}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"stats",
										"get-tabular-stats"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "tagMain",
											"value": "phase2"
										},
										{
											"key": "tagsEval",
											"value": "{{eval_stats_list}}"
										},
										{
											"key": "classificationName",
											"value": "golf",
											"disabled": true
										},
										{
											"key": "perspectiveId",
											"value": "",
											"disabled": true
										},
										{
											"key": "personaId",
											"value": "",
											"disabled": true
										},
										{
											"key": "includeVariants",
											"value": "false",
											"description": "Whether to include extra variant statistics",
											"disabled": true
										},
										{
											"key": "includeEmpty",
											"value": "false",
											"disabled": true
										},
										{
											"key": "format",
											"value": "excel"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Tabular Stats as JSON [Kenton]",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/stats/get-tabular-stats?client_id={{current_agent_id}}&tagMain=phase2&tagsEval={{eval_stats_list_tranche1}}&format=json",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"stats",
										"get-tabular-stats"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "tagMain",
											"value": "phase2"
										},
										{
											"key": "tagsEval",
											"value": "{{eval_stats_list_tranche1}}"
										},
										{
											"key": "classificationName",
											"value": "golf",
											"disabled": true
										},
										{
											"key": "perspectiveId",
											"value": "",
											"disabled": true
										},
										{
											"key": "personaId",
											"value": "",
											"disabled": true
										},
										{
											"key": "includeVariants",
											"value": "false",
											"description": "Whether to include extra variant statistics",
											"disabled": true
										},
										{
											"key": "includeEmpty",
											"value": "false",
											"disabled": true
										},
										{
											"key": "format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Tabular Stats as JSON [Kenton] DEV",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix_int_dev}}/api/v1/awag/data/stats/get-tabular-stats?client_id={{current_agent_id}}&tagMain=phase2&tagsEval={{eval_stats_list_tranche1}}&format=json",
									"host": [
										"{{url_prefix_int_dev}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"stats",
										"get-tabular-stats"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "tagMain",
											"value": "phase2"
										},
										{
											"key": "tagsEval",
											"value": "{{eval_stats_list_tranche1}}"
										},
										{
											"key": "tagsEval",
											"value": "['phase2-vanilla-mode1-01']",
											"disabled": true
										},
										{
											"key": "classificationName",
											"value": "golf",
											"disabled": true
										},
										{
											"key": "perspectiveId",
											"value": "",
											"disabled": true
										},
										{
											"key": "personaId",
											"value": "",
											"disabled": true
										},
										{
											"key": "includeVariants",
											"value": "false",
											"description": "Whether to include extra variant statistics",
											"disabled": true
										},
										{
											"key": "includeEmpty",
											"value": "false",
											"disabled": true
										},
										{
											"key": "format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Tabular Stats as Excel [Kenton] - Tranche1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/stats/get-tabular-stats?client_id={{current_agent_id}}&tagMain=phase2&tagsEval={{eval_stats_list_tranche1}}&format=excel",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"stats",
										"get-tabular-stats"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "tagMain",
											"value": "phase2"
										},
										{
											"key": "tagsEval",
											"value": "{{eval_stats_list_tranche1}}"
										},
										{
											"key": "tagsEval",
											"value": "['phase2-vanilla-mode1-02', 'phase2-vanilla-mode2-01', 'phase2-base-mode2-01', 'phase2-vanilla4-mode2-01', 'phase2-vanilla4o-mode2-01']",
											"disabled": true
										},
										{
											"key": "classificationName",
											"value": "golf",
											"disabled": true
										},
										{
											"key": "perspectiveId",
											"value": "",
											"disabled": true
										},
										{
											"key": "personaId",
											"value": "",
											"disabled": true
										},
										{
											"key": "includeVariants",
											"value": "false",
											"description": "Whether to include extra variant statistics",
											"disabled": true
										},
										{
											"key": "includeEmpty",
											"value": "false",
											"disabled": true
										},
										{
											"key": "format",
											"value": "excel"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Tabular Stats as Excel [Kenton] - Tranche1 DEV",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix_int_dev}}/api/v1/awag/data/stats/get-tabular-stats?client_id={{current_agent_id}}&tagMain=phase2&tagsEval={{eval_stats_list_tranche1}}&format=excel",
									"host": [
										"{{url_prefix_int_dev}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"stats",
										"get-tabular-stats"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "tagMain",
											"value": "phase2"
										},
										{
											"key": "tagsEval",
											"value": "{{eval_stats_list_tranche1}}"
										},
										{
											"key": "tagsEval",
											"value": "['phase2-vanilla-mode1-02', 'phase2-vanilla-mode2-01', 'phase2-base-mode2-01', 'phase2-vanilla4-mode2-01', 'phase2-vanilla4o-mode2-01']",
											"disabled": true
										},
										{
											"key": "classificationName",
											"value": "golf",
											"disabled": true
										},
										{
											"key": "perspectiveId",
											"value": "",
											"disabled": true
										},
										{
											"key": "personaId",
											"value": "",
											"disabled": true
										},
										{
											"key": "includeVariants",
											"value": "false",
											"description": "Whether to include extra variant statistics",
											"disabled": true
										},
										{
											"key": "includeEmpty",
											"value": "false",
											"disabled": true
										},
										{
											"key": "format",
											"value": "excel"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Tabular Stats as Excel [Kenton] - Mode 1 Compare",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_prefix}}/api/v1/awag/data/stats/get-tabular-stats?client_id={{current_agent_id}}&tagMain=phase2&tagsEval={{eval_stats_list_mode1_compare}}&format=excel",
									"host": [
										"{{url_prefix}}"
									],
									"path": [
										"api",
										"v1",
										"awag",
										"data",
										"stats",
										"get-tabular-stats"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{current_agent_id}}",
											"description": "Overides the x-client-id header to specify different agent"
										},
										{
											"key": "tagMain",
											"value": "phase2"
										},
										{
											"key": "tagsEval",
											"value": "{{eval_stats_list_mode1_compare}}"
										},
										{
											"key": "classificationName",
											"value": "golf",
											"disabled": true
										},
										{
											"key": "perspectiveId",
											"value": "",
											"disabled": true
										},
										{
											"key": "personaId",
											"value": "",
											"disabled": true
										},
										{
											"key": "includeVariants",
											"value": "false",
											"description": "Whether to include extra variant statistics",
											"disabled": true
										},
										{
											"key": "includeEmpty",
											"value": "false",
											"disabled": true
										},
										{
											"key": "format",
											"value": "excel"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									"console.log(\"AWAG Data/Reporting/Kenton\");\r",
									"\r",
									"var currentAgent = 'kenton'\r",
									"\r",
									"pm.variables.set('current_agent', currentAgent);\r",
									"\r",
									"//console.log(\"function_sanitiseStringForJson: \" + pm.globals.get(\"function_sanitiseStringForJson\"));\r",
									"\r",
									"var sanitiseStringForJsonStr =  pm.globals.get(\"function_sanitiseStringForJson\")\r",
									"//console.log(\"function_sanitiseStringForJson: \" + sanitiseStringForJsonStr);\r",
									"var sanitiseStringForJson = eval(sanitiseStringForJsonStr);\r",
									"//console.log(\"sanitiseStringForJson: \" + sanitiseStringForJson);\r",
									"\r",
									"var agentIdVariableName = `agent_id_${currentAgent}`;\r",
									"var personaJsonVariableName = `persona_json_${currentAgent}`;\r",
									"\r",
									"pm.variables.set('agent_id_variable_name', agentIdVariableName);\r",
									"pm.variables.set('persona_json_variable_name', personaJsonVariableName);\r",
									"\r",
									"var agentIdValue = pm.environment.get(agentIdVariableName);\r",
									"pm.variables.set('current_agent_id', agentIdValue);\r",
									"\r",
									"var personaJsonValue = pm.environment.get(personaJsonVariableName);\r",
									"pm.variables.set('current_agent_persona_json', personaJsonValue);\r",
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "OpenAI",
			"item": [
				{
					"name": "Manual Object Store Calls",
					"item": [
						{
							"name": "AwAgObjectStore - Retrieve openai_ft_fa_dataset_test_dataset_meta object",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_objectstore}}/retrieve/:namespace_id/:object_id?client_id={{agent_id_kenton}}",
									"host": [
										"{{url_objectstore}}"
									],
									"path": [
										"retrieve",
										":namespace_id",
										":object_id"
									],
									"query": [
										{
											"key": "revision_id",
											"value": "3562f592-c27f-4c58-b149-f05fc5012335",
											"disabled": true
										},
										{
											"key": "client_id",
											"value": "{{agent_id_kenton}}",
											"description": "Overides the x-client-id header to specify different agent"
										}
									],
									"variable": [
										{
											"key": "namespace_id",
											"value": "openai_ft_fa_dataset_test_dataset_meta"
										},
										{
											"key": "object_id",
											"value": "004f5e91-9a73-4768-a9a1-b5f56470a3a6"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "AwAgObjectStore - Retrieve openai_ft_files object",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_objectstore}}/retrieve/:namespace_id/:object_id?client_id={{agent_id_adam}}",
									"host": [
										"{{url_objectstore}}"
									],
									"path": [
										"retrieve",
										":namespace_id",
										":object_id"
									],
									"query": [
										{
											"key": "revision_id",
											"value": "3562f592-c27f-4c58-b149-f05fc5012335",
											"disabled": true
										},
										{
											"key": "client_id",
											"value": "{{agent_id_adam}}",
											"description": "Overides the x-client-id header to specify different agent"
										}
									],
									"variable": [
										{
											"key": "namespace_id",
											"value": "openai_ft_files"
										},
										{
											"key": "object_id",
											"value": "file-41AsNjeGj3IOZfI9AfI238wM"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "AwAgObjectStore - Retrieve Item",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_objectstore}}/retrieve/:namespace_id/:object_id?client_id={{agent_id_adam}}",
									"host": [
										"{{url_objectstore}}"
									],
									"path": [
										"retrieve",
										":namespace_id",
										":object_id"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{agent_id_adam}}",
											"description": "Overides the x-client-id header to specify different agent"
										}
									],
									"variable": [
										{
											"key": "namespace_id",
											"value": "openai_files_ft_meta"
										},
										{
											"key": "object_id",
											"value": "file-t1wyEONXYGQVKdLxs7YLkSSp"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "AwAgObjectStore - Delete Item",
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_objectstore}}/delete/:namespace_id/:object_id?client_id={{agent_id_adam}}",
									"host": [
										"{{url_objectstore}}"
									],
									"path": [
										"delete",
										":namespace_id",
										":object_id"
									],
									"query": [
										{
											"key": "client_id",
											"value": "{{agent_id_adam}}",
											"description": "Overides the x-client-id header to specify different agent"
										}
									],
									"variable": [
										{
											"key": "namespace_id",
											"value": "openai_files_ft"
										},
										{
											"key": "object_id",
											"value": "file-8Nka4sIztd2W5rKCUsUruPCG"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "AwAgObjectStore - Query [namespace] openai_ft_ff_dataset_test_dataset_meta",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_objectstore}}/query/:namespace_id?client_id={{agent_id_kenton}}",
									"host": [
										"{{url_objectstore}}"
									],
									"path": [
										"query",
										":namespace_id"
									],
									"query": [
										{
											"key": "tag",
											"value": "adam-run7",
											"disabled": true
										},
										{
											"key": "client_id",
											"value": "{{agent_id_kenton}}"
										}
									],
									"variable": [
										{
											"key": "namespace_id",
											"value": "openai_ft_ff_dataset_test_dataset_meta"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "AwAgObjectStore - Query [namespace] openai_ft_fa_dataset_ext_mode3_agree_meta",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_objectstore}}/query/:namespace_id?client_id={{agent_id_kenton}}",
									"host": [
										"{{url_objectstore}}"
									],
									"path": [
										"query",
										":namespace_id"
									],
									"query": [
										{
											"key": "tag",
											"value": "adam-run7",
											"disabled": true
										},
										{
											"key": "client_id",
											"value": "{{agent_id_kenton}}"
										}
									],
									"variable": [
										{
											"key": "namespace_id",
											"value": "openai_ft_ff_dataset_test_dataset_meta"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "AwAgObjectStore - Query [namespace] openai_ft_ff_dataset_test_dataset",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_objectstore}}/query/:namespace_id?client_id={{agent_id_kenton}}",
									"host": [
										"{{url_objectstore}}"
									],
									"path": [
										"query",
										":namespace_id"
									],
									"query": [
										{
											"key": "tag",
											"value": "adam-run7",
											"disabled": true
										},
										{
											"key": "client_id",
											"value": "{{agent_id_kenton}}"
										}
									],
									"variable": [
										{
											"key": "namespace_id",
											"value": "openai_ft_ff_dataset_test_dataset"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "AwAgObjectStore - Query [namespace] openai_ft_files_meta",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_objectstore}}/query/:namespace_id?client_id={{agent_id_adam}}",
									"host": [
										"{{url_objectstore}}"
									],
									"path": [
										"query",
										":namespace_id"
									],
									"query": [
										{
											"key": "tag",
											"value": "adam-run7",
											"disabled": true
										},
										{
											"key": "client_id",
											"value": "{{agent_id_adam}}"
										}
									],
									"variable": [
										{
											"key": "namespace_id",
											"value": "openai_ft_files_meta"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "AwAgObjectStore - Query [namespace] openai_ft_files",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_objectstore}}/query/:namespace_id?client_id={{agent_id_adam}}",
									"host": [
										"{{url_objectstore}}"
									],
									"path": [
										"query",
										":namespace_id"
									],
									"query": [
										{
											"key": "tag",
											"value": "adam-run7",
											"disabled": true
										},
										{
											"key": "client_id",
											"value": "{{agent_id_adam}}"
										}
									],
									"variable": [
										{
											"key": "namespace_id",
											"value": "openai_ft_files"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "AwAgObjectStore - Query [namespace] openai_ft_jobs_meta",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_objectstore}}/query/:namespace_id?client_id={{agent_id_adam}}",
									"host": [
										"{{url_objectstore}}"
									],
									"path": [
										"query",
										":namespace_id"
									],
									"query": [
										{
											"key": "tag",
											"value": "adam-run7",
											"disabled": true
										},
										{
											"key": "client_id",
											"value": "{{agent_id_adam}}"
										}
									],
									"variable": [
										{
											"key": "namespace_id",
											"value": "openai_ft_jobs_meta"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "AwAgObjectStore - Query openai_ft_jobs_meta object",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_objectstore}}/query/:namespace_id/:object_id?client_id={{agent_id_adam}}",
									"host": [
										"{{url_objectstore}}"
									],
									"path": [
										"query",
										":namespace_id",
										":object_id"
									],
									"query": [
										{
											"key": "revision_id",
											"value": "3562f592-c27f-4c58-b149-f05fc5012335",
											"disabled": true
										},
										{
											"key": "client_id",
											"value": "{{agent_id_adam}}",
											"description": "Overides the x-client-id header to specify different agent"
										}
									],
									"variable": [
										{
											"key": "namespace_id",
											"value": "openai_ft_jobs_meta"
										},
										{
											"key": "object_id",
											"value": "ftjob-ijeNRxlDrqUSNM31VU8vrvuu"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "AwAgObjectStore - Retrieve openai_ft_jobs_meta object",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url_objectstore}}/retrieve/:namespace_id/:object_id?revision_id=14442572-94da-4c4a-8f68-43ae1fbe8c95&client_id={{agent_id_adam}}",
									"host": [
										"{{url_objectstore}}"
									],
									"path": [
										"retrieve",
										":namespace_id",
										":object_id"
									],
									"query": [
										{
											"key": "revision_id",
											"value": "14442572-94da-4c4a-8f68-43ae1fbe8c95"
										},
										{
											"key": "client_id",
											"value": "{{agent_id_adam}}",
											"description": "Overides the x-client-id header to specify different agent"
										}
									],
									"variable": [
										{
											"key": "namespace_id",
											"value": "openai_ft_jobs_meta"
										},
										{
											"key": "object_id",
											"value": "ftjob-ijeNRxlDrqUSNM31VU8vrvuu"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "AwAgData Populate Dataset (from Classification Actions)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"tag_source\": \"phase2\",\r\n    \"classificationsX\": [],\r\n    \"classifications\": [\"work-pers\", \"urgency\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_prefix}}/api/v1/awag/data/train/datasets/:dataset_type/:dataset_id?client_id={{agent_id_kenton}}&async=false",
							"host": [
								"{{url_prefix}}"
							],
							"path": [
								"api",
								"v1",
								"awag",
								"data",
								"train",
								"datasets",
								":dataset_type",
								":dataset_id"
							],
							"query": [
								{
									"key": "itemId",
									"value": "052388c2-b534-4c38-ba1c-1645cc509e1b",
									"disabled": true
								},
								{
									"key": "lastNHours",
									"value": "1",
									"disabled": true
								},
								{
									"key": "client_id",
									"value": "{{agent_id_kenton}}"
								},
								{
									"key": "async",
									"value": "false"
								}
							],
							"variable": [
								{
									"key": "dataset_type",
									"value": "from_actions"
								},
								{
									"key": "dataset_id",
									"value": "{{test_dataset}}",
									"description": "Proper value: phase2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "AwAgData Populate Dataset (from Files)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"server_path\": \"/data/awag/fine-tuning/1\",\r\n    \"max_items\": 0,\r\n    \"file_regexp\": null,\r\n    \"is_ignore_existing\": false,\r\n    \"update_system_message\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_prefix}}/api/v1/awag/data/train/datasets/:dataset_type/:dataset_id?client_id={{agent_id_kenton}}&async=false",
							"host": [
								"{{url_prefix}}"
							],
							"path": [
								"api",
								"v1",
								"awag",
								"data",
								"train",
								"datasets",
								":dataset_type",
								":dataset_id"
							],
							"query": [
								{
									"key": "itemId",
									"value": "052388c2-b534-4c38-ba1c-1645cc509e1b",
									"disabled": true
								},
								{
									"key": "lastNHours",
									"value": "1",
									"disabled": true
								},
								{
									"key": "client_id",
									"value": "{{agent_id_kenton}}"
								},
								{
									"key": "async",
									"value": "false"
								}
							],
							"variable": [
								{
									"key": "dataset_type",
									"value": "from_files"
								},
								{
									"key": "dataset_id",
									"value": "{{dataset_id_kenton}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "AwAgData Query Populate Dataset Job (from Classification Actions)",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_prefix}}/api/v1/awag/data/train/datasets/:dataset_type/:dataset_id/:job_id?client_id={{agent_id_kenton}}",
							"host": [
								"{{url_prefix}}"
							],
							"path": [
								"api",
								"v1",
								"awag",
								"data",
								"train",
								"datasets",
								":dataset_type",
								":dataset_id",
								":job_id"
							],
							"query": [
								{
									"key": "client_id",
									"value": "{{agent_id_kenton}}"
								}
							],
							"variable": [
								{
									"key": "dataset_type",
									"value": "from_actions"
								},
								{
									"key": "dataset_id",
									"value": "{{test_dataset}}"
								},
								{
									"key": "job_id",
									"value": "3bb27557-5f20-4115-8e8f-6c86e4bc9518"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "AwAgData Query Dataset (from Classification Actions)",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_prefix}}/api/v1/awag/data/train/datasets/:dataset_type/:dataset_id?client_id={{agent_id_kenton}}",
							"host": [
								"{{url_prefix}}"
							],
							"path": [
								"api",
								"v1",
								"awag",
								"data",
								"train",
								"datasets",
								":dataset_type",
								":dataset_id"
							],
							"query": [
								{
									"key": "client_id",
									"value": "{{agent_id_kenton}}"
								}
							],
							"variable": [
								{
									"key": "dataset_type",
									"value": "from_actions"
								},
								{
									"key": "dataset_id",
									"value": "{{test_dataset}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "AwAgData Query Dataset Item (from Classification Actions)",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_prefix}}/api/v1/awag/data/train/datasets/:dataset_type/:dataset_id/items/:item_id?client_id={{agent_id_kenton}}&detail=true",
							"host": [
								"{{url_prefix}}"
							],
							"path": [
								"api",
								"v1",
								"awag",
								"data",
								"train",
								"datasets",
								":dataset_type",
								":dataset_id",
								"items",
								":item_id"
							],
							"query": [
								{
									"key": "client_id",
									"value": "{{agent_id_kenton}}"
								},
								{
									"key": "detail",
									"value": "true"
								}
							],
							"variable": [
								{
									"key": "dataset_type",
									"value": "from_actions"
								},
								{
									"key": "dataset_id",
									"value": "{{test_dataset}}"
								},
								{
									"key": "item_id",
									"value": "00033b65-f1a9-42b7-89e0-fd99c9365773~urgency"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "AwAgData Query Dataset (from Files)",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_prefix}}/api/v1/awag/data/train/datasets/:dataset_type/:dataset_id?client_id={{agent_id_kenton}}&count=0",
							"host": [
								"{{url_prefix}}"
							],
							"path": [
								"api",
								"v1",
								"awag",
								"data",
								"train",
								"datasets",
								":dataset_type",
								":dataset_id"
							],
							"query": [
								{
									"key": "client_id",
									"value": "{{agent_id_kenton}}"
								},
								{
									"key": "count",
									"value": "0"
								}
							],
							"variable": [
								{
									"key": "dataset_type",
									"value": "from_files"
								},
								{
									"key": "dataset_id",
									"value": "{{dataset_id_kenton}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "AwAgData Query Dataset Item (from Files)",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_prefix}}/api/v1/awag/data/train/datasets/:dataset_type/:dataset_id/items/:item_id?client_id={{agent_id_kenton}}&detail=true",
							"host": [
								"{{url_prefix}}"
							],
							"path": [
								"api",
								"v1",
								"awag",
								"data",
								"train",
								"datasets",
								":dataset_type",
								":dataset_id",
								"items",
								":item_id"
							],
							"query": [
								{
									"key": "client_id",
									"value": "{{agent_id_kenton}}"
								},
								{
									"key": "detail",
									"value": "true"
								}
							],
							"variable": [
								{
									"key": "dataset_type",
									"value": "from_files"
								},
								{
									"key": "dataset_id",
									"value": "{{dataset_id_kenton}}"
								},
								{
									"key": "item_id",
									"value": "x_05ebb7df-b7ab-47eb-b5a3-e03bc7f27b76_classification_football"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "AwAgData Delete Dataset (from Classification Actions)",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_prefix}}/api/v1/awag/data/train/datasets/:dataset_type/:dataset_id?client_id={{agent_id_kenton}}",
							"host": [
								"{{url_prefix}}"
							],
							"path": [
								"api",
								"v1",
								"awag",
								"data",
								"train",
								"datasets",
								":dataset_type",
								":dataset_id"
							],
							"query": [
								{
									"key": "client_id",
									"value": "{{agent_id_kenton}}"
								},
								{
									"key": "confirm",
									"value": "true",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "dataset_type",
									"value": "from_actions"
								},
								{
									"key": "dataset_id",
									"value": "{{test_dataset}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "AwAgData Merge Dataset (from Classification Actions)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url_prefix_int_dev}}/api/v1/awag/data/train/datasets/:dataset_type/:source_dataset_id/merge/:target_dataset_id?client_id={{agent_id_dev}}",
							"host": [
								"{{url_prefix_int_dev}}"
							],
							"path": [
								"api",
								"v1",
								"awag",
								"data",
								"train",
								"datasets",
								":dataset_type",
								":source_dataset_id",
								"merge",
								":target_dataset_id"
							],
							"query": [
								{
									"key": "client_id",
									"value": "{{agent_id_dev}}"
								}
							],
							"variable": [
								{
									"key": "dataset_type",
									"value": "from_actions"
								},
								{
									"key": "source_dataset_id",
									"value": "{{test_dataset}}"
								},
								{
									"key": "target_dataset_id",
									"value": "{{test_dataset}}_merged"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "AwAgData Delete Dataset (from Classification Files)",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_prefix}}/api/v1/awag/data/train/datasets/:dataset_type/:dataset_id?client_id={{agent_id_kenton}}",
							"host": [
								"{{url_prefix}}"
							],
							"path": [
								"api",
								"v1",
								"awag",
								"data",
								"train",
								"datasets",
								":dataset_type",
								":dataset_id"
							],
							"query": [
								{
									"key": "client_id",
									"value": "{{agent_id_kenton}}"
								},
								{
									"key": "confirm",
									"value": "true",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "dataset_type",
									"value": "from_files"
								},
								{
									"key": "dataset_id",
									"value": "{{dataset_id_kenton}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "AwAgData Get Datasets",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url_prefix}}/api/v1/awag/data/train/datasets/:dataset_type?client_id={{agent_id_kenton}}",
							"host": [
								"{{url_prefix}}"
							],
							"path": [
								"api",
								"v1",
								"awag",
								"data",
								"train",
								"datasets",
								":dataset_type"
							],
							"query": [
								{
									"key": "client_id",
									"value": "{{agent_id_kenton}}"
								}
							],
							"variable": [
								{
									"key": "dataset_type",
									"value": "from_actions"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "AwAgData Upload OpenAI File (from Classification Actions)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"dataset_id\": \"phase2\",\r\n    \"dataset_type\": \"from_actions\",\r\n    \"info\": \"Data from phase 2, processed 29/2/24\",\r\n    \"additionalDetails\": {},\r\n    \"tag\": \"phase2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_prefix}}/api/v1/awag/data/train/files?client_id={{agent_id_kenton}}",
							"host": [
								"{{url_prefix}}"
							],
							"path": [
								"api",
								"v1",
								"awag",
								"data",
								"train",
								"files"
							],
							"query": [
								{
									"key": "client_id",
									"value": "{{agent_id_kenton}}",
									"description": "Overides the x-client-id header to specify different agent"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "AwAgData Upload OpenAI File  (from Files)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"dataset_id\": \"{{dataset_id_kenton}}\",\r\n    \"dataset_type\": \"from_files\",\r\n    \"info\": \"AwAg Base Training for persona: Kenton (21 Feb 2024)\",\r\n    \"additionalDetails\": {},\r\n    \"tag\": \"base-kenton\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_prefix}}/api/v1/awag/data/train/files?client_id={{agent_id_kenton}}",
							"host": [
								"{{url_prefix}}"
							],
							"path": [
								"api",
								"v1",
								"awag",
								"data",
								"train",
								"files"
							],
							"query": [
								{
									"key": "client_id",
									"value": "{{agent_id_kenton}}",
									"description": "Overides the x-client-id header to specify different agent"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "AwAgData Sync Files",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_prefix}}/api/v1/awag/data/train/files/sync?client_id={{agent_id_kenton}}",
							"host": [
								"{{url_prefix}}"
							],
							"path": [
								"api",
								"v1",
								"awag",
								"data",
								"train",
								"files",
								"sync"
							],
							"query": [
								{
									"key": "tag",
									"value": "ft-test1",
									"disabled": true
								},
								{
									"key": "client_id",
									"value": "{{agent_id_kenton}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "AwAgData Query Files",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_prefix}}/api/v1/awag/data/train/files?client_id={{agent_id_kenton}}",
							"host": [
								"{{url_prefix}}"
							],
							"path": [
								"api",
								"v1",
								"awag",
								"data",
								"train",
								"files"
							],
							"query": [
								{
									"key": "client_id",
									"value": "{{agent_id_kenton}}",
									"description": "Overides the x-client-id header to specify different agent"
								},
								{
									"key": "tag",
									"value": "base-kenton",
									"disabled": true
								},
								{
									"key": "include_deleted",
									"value": "true",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "AwAgData Resurrect File",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_prefix}}/api/v1/awag/data/train/files/resurrect/:file_id?client_id={{agent_id_kenton}}",
							"host": [
								"{{url_prefix}}"
							],
							"path": [
								"api",
								"v1",
								"awag",
								"data",
								"train",
								"files",
								"resurrect",
								":file_id"
							],
							"query": [
								{
									"key": "client_id",
									"value": "{{agent_id_kenton}}",
									"description": "Overides the x-client-id header to specify different agent"
								},
								{
									"key": "tag",
									"value": "ft-test3",
									"disabled": true
								},
								{
									"key": "include_deleted",
									"value": "true",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "file_id",
									"value": "file-LQdk0b3XlCTmLJZDJJNutrOJ"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "AwAgData Query File (with ID)",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_prefix}}/api/v1/awag/data/train/files/:file_id?client_id={{agent_id_kenton}}",
							"host": [
								"{{url_prefix}}"
							],
							"path": [
								"api",
								"v1",
								"awag",
								"data",
								"train",
								"files",
								":file_id"
							],
							"query": [
								{
									"key": "client_id",
									"value": "{{agent_id_kenton}}",
									"description": "Overides the x-client-id header to specify different agent"
								},
								{
									"key": "tag",
									"value": "ft-test1",
									"disabled": true
								},
								{
									"key": "include_deleted",
									"value": "true",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "file_id",
									"value": "file-4BRrDp7USqJeQoQ5t1LxOcE9"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "AwAgData Delete File",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_prefix}}/api/v1/awag/data/train/files/:file_id?client_id={{agent_id_kenton}}",
							"host": [
								"{{url_prefix}}"
							],
							"path": [
								"api",
								"v1",
								"awag",
								"data",
								"train",
								"files",
								":file_id"
							],
							"query": [
								{
									"key": "client_id",
									"value": "{{agent_id_kenton}}",
									"description": "Overides the x-client-id header to specify different agent"
								}
							],
							"variable": [
								{
									"key": "file_id",
									"value": "file-iThSB3RHKUi2d7DLdsDZIgjO"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "AwAgData Delete Job",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_prefix}}/api/v1/awag/data/train/jobs/:job_id?client_id={{agent_id_kenton}}",
							"host": [
								"{{url_prefix}}"
							],
							"path": [
								"api",
								"v1",
								"awag",
								"data",
								"train",
								"jobs",
								":job_id"
							],
							"query": [
								{
									"key": "client_id",
									"value": "{{agent_id_kenton}}",
									"description": "Overides the x-client-id header to specify different agent"
								}
							],
							"variable": [
								{
									"key": "job_id",
									"value": "ftjob-yca9yI76uwgc28QBxDA4PmGp"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "AwAgData Create OpenAI Job",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"tag\": \"ext-kenton\",\r\n    \"infoX\": \"AwAg Base Training for persona: Kenton - based on 171 size data set using new split technique (21 Feb 2024)\",\r\n    \"info\": \"AwAg Extended for persona: Kenton - based on phase 2 classification actions as of 29 Feb 2024\",\r\n    \"additionalDetails\": {},\r\n    \"file_id\": \"file-F18cvTZbhz6gax1UPkX22ayq\",\r\n    \"model_idX\": \"gpt-3.5-turbo-1106\",\r\n    \"model_id\": \"ft:gpt-3.5-turbo-1106:hylozoical:base-kenton-0221:8ug1tjME\",\r\n    \"n_epochsXX\": 8,\r\n    \"suffixX\" : \"base-kenton-0221\",\r\n    \"suffix\" : \"ext-kenton-0229\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_prefix}}/api/v1/awag/data/train/jobs?client_id={{agent_id_kenton}}",
							"host": [
								"{{url_prefix}}"
							],
							"path": [
								"api",
								"v1",
								"awag",
								"data",
								"train",
								"jobs"
							],
							"query": [
								{
									"key": "client_id",
									"value": "{{agent_id_kenton}}",
									"description": "Overides the x-client-id header to specify different agent"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "AwAgData Sync Jobs",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_prefix}}/api/v1/awag/data/train/jobs/sync?client_id={{agent_id_kenton}}",
							"host": [
								"{{url_prefix}}"
							],
							"path": [
								"api",
								"v1",
								"awag",
								"data",
								"train",
								"jobs",
								"sync"
							],
							"query": [
								{
									"key": "client_id",
									"value": "{{agent_id_kenton}}",
									"description": "Overides the x-client-id header to specify different agent"
								},
								{
									"key": "tag",
									"value": "ft-test1",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "AwAgData Chat",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {\r",
									"\r",
									"    var responseData = pm.response.json();\r",
									"\r",
									"    var conversationId = responseData.conversation_id;\r",
									"\r",
									"    if (conversationId) {\r",
									"        pm.environment.set(\"conversation_id\", conversationId);\r",
									"       // pm.globals.set(\"conversation_id\", conversationId);\r",
									"    }\r",
									"\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"model\":\"ft:gpt-3.5-turbo-1106:hylozoical:base-kenton-8e:8tyinkrB\",\r\n    \"conversation_id\": \"{{conversation_id}}\",\r\n    \"chat_request\": \"What properties does the Evaluation Request JSON Schema has ID 'https://parse.net/awag/0.1/classification-evaluation-request.schema.json' contain?\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_prefix}}/api/v1/awag/data/chat/ask?client_id={{agent_id_kenton}}&reset_conversation=true",
							"host": [
								"{{url_prefix}}"
							],
							"path": [
								"api",
								"v1",
								"awag",
								"data",
								"chat",
								"ask"
							],
							"query": [
								{
									"key": "client_id",
									"value": "{{agent_id_kenton}}",
									"description": "Overides the x-client-id header to specify different agent"
								},
								{
									"key": "reset_conversation",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "AwAgData Query Jobs",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_prefix}}/api/v1/awag/data/train/jobs?client_id={{agent_id_kenton}}&=",
							"host": [
								"{{url_prefix}}"
							],
							"path": [
								"api",
								"v1",
								"awag",
								"data",
								"train",
								"jobs"
							],
							"query": [
								{
									"key": "client_id",
									"value": "{{agent_id_kenton}}",
									"description": "Overides the x-client-id header to specify different agent"
								},
								{
									"key": "tag",
									"value": "base-kenton",
									"disabled": true
								},
								{
									"key": "include_deleted",
									"value": "true",
									"disabled": true
								},
								{
									"key": "",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "AwAgData Query Job (with ID)",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_prefix}}/api/v1/awag/data/train/jobs/:job_id?client_id={{agent_id_kenton}}&tag=base-kenton",
							"host": [
								"{{url_prefix}}"
							],
							"path": [
								"api",
								"v1",
								"awag",
								"data",
								"train",
								"jobs",
								":job_id"
							],
							"query": [
								{
									"key": "client_id",
									"value": "{{agent_id_kenton}}",
									"description": "Overides the x-client-id header to specify different agent"
								},
								{
									"key": "tag",
									"value": "base-kenton"
								},
								{
									"key": "include_deleted",
									"value": "true",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "job_id",
									"value": "ftjob-wwmDyfB0PHluTCDftJGsShxT"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "AwAgData Query Models",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_prefix}}/api/v1/awag/data/train/models?client_id={{agent_id_kenton}}&simple=true",
							"host": [
								"{{url_prefix}}"
							],
							"path": [
								"api",
								"v1",
								"awag",
								"data",
								"train",
								"models"
							],
							"query": [
								{
									"key": "client_id",
									"value": "{{agent_id_kenton}}",
									"description": "Overides the x-client-id header to specify different agent"
								},
								{
									"key": "tag",
									"value": "ft-test3",
									"disabled": true
								},
								{
									"key": "include_deleted",
									"value": "true",
									"disabled": true
								},
								{
									"key": "simple",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "AwAgData Sync Models",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_prefix}}/api/v1/awag/data/train/models/sync?client_id={{agent_id_kenton}}",
							"host": [
								"{{url_prefix}}"
							],
							"path": [
								"api",
								"v1",
								"awag",
								"data",
								"train",
								"models",
								"sync"
							],
							"query": [
								{
									"key": "client_id",
									"value": "{{agent_id_kenton}}",
									"description": "Overides the x-client-id header to specify different agent"
								},
								{
									"key": "tag",
									"value": "ft-test1",
									"disabled": true
								},
								{
									"key": "presync",
									"value": "true",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "AwAgData Delete Model",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url_prefix}}/api/v1/awag/data/train/models/:model_id?client_id={{agent_id_kenton}}",
							"host": [
								"{{url_prefix}}"
							],
							"path": [
								"api",
								"v1",
								"awag",
								"data",
								"train",
								"models",
								":model_id"
							],
							"query": [
								{
									"key": "client_id",
									"value": "{{agent_id_kenton}}",
									"description": "Overides the x-client-id header to specify different agent"
								}
							],
							"variable": [
								{
									"key": "model_id",
									"value": "ft:gpt-3.5-turbo-1106:hylozoical:base-kenton:8svNMnJz"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "AwAgData Purge Agent",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url_prefix}}/api/v1/awag/data/maintenance/purge-agent-data?client_id={{agent_id_test01}}",
					"host": [
						"{{url_prefix}}"
					],
					"path": [
						"api",
						"v1",
						"awag",
						"data",
						"maintenance",
						"purge-agent-data"
					],
					"query": [
						{
							"key": "client_id",
							"value": "{{agent_id_test01}}"
						},
						{
							"key": "confirm",
							"value": "true",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "AwAgData Add Dummy Text",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{agent-id-test-1}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "eb059f77-bb22-4dde-9607-{{agent_id_test_1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n{\r\n\"category\": \"corp-chat-general\",\r\n\"userid\": \"a1b2c3\",\r\n\"username\": \"Jane Thompson\",\r\n\"text\": \"Good morning, everyone! How was your weekend?\"\r\n},\r\n{\r\n\"category\": \"corp-chat-general\",\r\n\"userid\": \"d4e5f6\",\r\n\"username\": \"Michael Rodriguez\",\r\n\"text\": \"Morning Jane! Mine was great, went hiking with the family. What about you?\"\r\n},\r\n{\r\n\"category\": \"corp-chat-general\",\r\n\"userid\": \"g7h8i9\",\r\n\"username\": \"Nina Patel\",\r\n\"text\": \"Hey all! I had a relaxing weekend, just binge-watched a new series on Netflix.\"\r\n},\r\n{\r\n\"category\": \"corp-chat-general\",\r\n\"userid\": \"j1k2l3\",\r\n\"username\": \"Daniel Williams\",\r\n\"text\": \"Morning! I tried a new sushi place in town. It was fantastic.\"\r\n},\r\n{\r\n\"category\": \"corp-chat-general\",\r\n\"userid\": \"a1b2c3\",\r\n\"username\": \"Jane Thompson\",\r\n\"text\": \"Nice, Michael! I love hiking too. I spent most of my weekend gardening and catching up on some reading.\"\r\n},\r\n{\r\n\"category\": \"corp-chat-general\",\r\n\"userid\": \"d4e5f6\",\r\n\"username\": \"Michael Rodriguez\",\r\n\"text\": \"Anyone up for lunch at the new Italian place today?\"\r\n},\r\n{\r\n\"category\": \"corp-chat-general\",\r\n\"userid\": \"g7h8i9\",\r\n\"username\": \"Nina Patel\",\r\n\"text\": \"I'm in! I've been wanting to try that place out.\"\r\n},\r\n{\r\n\"category\": \"corp-chat-general\",\r\n\"userid\": \"j1k2l3\",\r\n\"username\": \"Daniel Williams\",\r\n\"text\": \"Count me in too, love Italian food.\"\r\n},\r\n{\r\n\"category\": \"corp-chat-general\",\r\n\"userid\": \"a1b2c3\",\r\n\"username\": \"Jane Thompson\",\r\n\"text\": \"I'll join you guys! Let's meet in the lobby at 12:30?\"\r\n},\r\n{\r\n\"category\": \"corp-chat-general\",\r\n\"userid\": \"d4e5f6\",\r\n\"username\": \"Michael Rodriguez\",\r\n\"text\": \"Sounds good to me! See you all at 12:30.\"\r\n},\r\n{\r\n\"category\": \"corp-chat-general\",\r\n\"userid\": \"g7h8i9\",\r\n\"username\": \"Nina Patel\",\r\n\"text\": \"Did anyone catch the game last night?\"\r\n},\r\n{\r\n\"category\": \"corp-chat-general\",\r\n\"userid\": \"j1k2l3\",\r\n\"username\": \"Daniel Williams\",\r\n\"text\": \"I did! Can't believe that last-minute goal!\"\r\n},\r\n{\r\n\"category\": \"corp-chat-general\",\r\n\"userid\": \"a1b2c3\",\r\n\"username\": \"Jane Thompson\",\r\n\"text\": \"I missed it, but I heard it was a great game.\"\r\n},\r\n{\r\n\"category\": \"corp-chat-general\",\r\n\"userid\": \"d4e5f6\",\r\n\"username\": \"Michael Rodriguez\",\r\n\"text\": \"It was intense! I'm still buzzing from that win.\"\r\n}\r\n\r\n\r\n\r\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_prefix}}/api/v1/awag/data/sim/add-dummy-text?agent={{agent_id}}",
					"host": [
						"{{url_prefix}}"
					],
					"path": [
						"api",
						"v1",
						"awag",
						"data",
						"sim",
						"add-dummy-text"
					],
					"query": [
						{
							"key": "agent",
							"value": "{{agent_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "AwAgData Get Dummy Text",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{agent-id-test-1}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "eb059f77-bb22-4dde-9607-{{agent_id_test_1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_prefix}}/api/v1/awag/data/sim/get-dummy-text?agent={{agent_id_adam}}&category=adam-cycling-club-general",
					"host": [
						"{{url_prefix}}"
					],
					"path": [
						"api",
						"v1",
						"awag",
						"data",
						"sim",
						"get-dummy-text"
					],
					"query": [
						{
							"key": "agent",
							"value": "{{agent_id_adam}}"
						},
						{
							"key": "category",
							"value": "adam-cycling-club-general"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "AwAgData Record Summarisation Request",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{agent-id-test-1}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "eb059f77-bb22-4dde-9607-{{agent_id_test_1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"itemId\":\"some-string-id-xx\",\r\n   \"summaryInput\":\"String containing some text\",\r\n   \"summaryOutput\":\"String containing some text\",\r\n   \"sourceType\":\"Another string\",\r\n   \"additionalDetails\" : {\r\n        \"key1\": \"value1\",\r\n        \"key2\": \"value2\"\r\n    }\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_prefix}}/api/v1/awag/data/summ/record-summarisation-request?client_id={{agent_id}}",
					"host": [
						"{{url_prefix}}"
					],
					"path": [
						"api",
						"v1",
						"awag",
						"data",
						"summ",
						"record-summarisation-request"
					],
					"query": [
						{
							"key": "client_id",
							"value": "{{agent_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "AwAgData Get Summarisation Requests",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{agent-id-test-1}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "eb059f77-bb22-4dde-9607-{{agent_id_test_1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_prefix}}/api/v1/awag/data/summ/get-summarisation-requests?client_id={{agent_id_kenton}}&limit=10",
					"host": [
						"{{url_prefix}}"
					],
					"path": [
						"api",
						"v1",
						"awag",
						"data",
						"summ",
						"get-summarisation-requests"
					],
					"query": [
						{
							"key": "client_id",
							"value": "{{agent_id_kenton}}"
						},
						{
							"key": "limit",
							"value": "10"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "AwAgData Get Summarisation Feedback",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{agent-id-test-1}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "eb059f77-bb22-4dde-9607-{{agent_id_test_1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_prefix}}/api/v1/awag/data/summ/get-summarisation-feedback?client_id={{agent_id_adam}}&limit=20",
					"host": [
						"{{url_prefix}}"
					],
					"path": [
						"api",
						"v1",
						"awag",
						"data",
						"summ",
						"get-summarisation-feedback"
					],
					"query": [
						{
							"key": "client_id",
							"value": "{{agent_id_adam}}"
						},
						{
							"key": "limit",
							"value": "20"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "AwAgData Get Summarisation Feedback Completed",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{agent-id-test-1}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "eb059f77-bb22-4dde-9607-{{agent_id_test_1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_prefix}}/api/v1/awag/data/summ/get-summarisation-feedback-completed?agent=c908bebc-262d-4a2b-ab4c-574b94065040",
					"host": [
						"{{url_prefix}}"
					],
					"path": [
						"api",
						"v1",
						"awag",
						"data",
						"summ",
						"get-summarisation-feedback-completed"
					],
					"query": [
						{
							"key": "agent",
							"value": "c908bebc-262d-4a2b-ab4c-574b94065040"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "AwAgData Record Evaluation Data",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"function randomString(minValue, maxValue, dataSet = 'abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ') {\r",
							"    if (!minValue) {\r",
							"        minValue = 20;\r",
							"        maxValue = 20;\r",
							"    }\r",
							"\r",
							"    if (!maxValue) {\r",
							"        maxValue = minValue;\r",
							"    }\r",
							"\r",
							"    let length = _.random(minValue, maxValue),\r",
							"        randomString = \"\";\r",
							"\r",
							"    for (let i = 0; i < length; i++)\r",
							"        randomString += dataSet.charAt(Math.floor(Math.random() * dataSet.length));\r",
							"    return randomString;\r",
							"}\r",
							"\r",
							"pm.variables.set('randomString', randomString());\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{agent-id-test-1}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "eb059f77-bb22-4dde-9607-{{agent_id_test_1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"agent\":\"{{agent_id}}\",\r\n   \"evaluationPersona\": {\r\n        \"id\":\"it-exec-1\",\r\n        \"name\":\"John Johnson\",\r\n        \"content\":{\r\n             \"foo\": \"ZZZ A busy IT executive who needs to know about problems and issues in his company the moment they happen around the clock but is not interested in non-urgent content\"\r\n             }\r\n   },\r\n   \"items\":[\r\n      {\r\n         \"itemId\":\"xx-{{randomString}}-1\",\r\n         \"tags\":[\r\n            \"postman-test\",\r\n            \"test\"\r\n         ],\r\n         \"classifications\":[\r\n            {\r\n               \"classificationName\":\"PERSONAL_PROFESSIONAL_CLASSIFICATION\",\r\n               \"classificationValue\":\"personal\",\r\n               \"classificationOptions\":[\r\n                  \"personal\",\r\n                  \"professional\"\r\n               ]\r\n            },\r\n            {\r\n               \"classificationName\":\"PRIORITY_CLASSIFICATION\",\r\n               \"classificationValue\":\"general\",\r\n               \"classificationOptions\":[\r\n                  \"general\",\r\n                  \"high\"\r\n               ]\r\n            }\r\n         ],\r\n         \"evaluateSourceType\":\"RSS item\",\r\n         \"evaluateSourceOriginator\":\"The Register - Offbeat\",\r\n         \"evaluateSourceChannel\":\"The Register - Offbeat\",\r\n         \"evaluateTimeText\":\"2023-07-10T09:40:53.3706958+02:00\",\r\n         \"evaluateTimeMs\":1688974853370,\r\n         \"evaluateTitle\":\"NASA \\\\'quiet\\\\' supersonic jet is nearly ready for flight\",\r\n         \"evaluateText\":\"<h4>If it works, the X-59 could enable a new era of commercial supersonic travel that doesn\\\\'t shatter windows</h4> <p>NASA\\\\'s mission to create a supersonic aircraft that doesn\\\\'t rattle windows and vibrate teeth is one step closer to reality as the experimental X-59 aircraft dubbed the \\\"Son of Concorde\\\" may soon be ready for its first test flights.…</p>\",\r\n         \"evaluationResponses\":[\r\n            {\r\n               \"classificationName\":\"PERSONAL_PROFESSIONAL_CLASSIFICATION\",\r\n               \"perspectives\":[\r\n                  {\r\n                     \"perspectiveId\":\"intrusiveness-1\",\r\n                     \"evaluationLikertVal\":2,\r\n                     \"evaluationLikertText\":\"Disagree\",\r\n                     \"evaluationText\":\"Some text for PERSONAL_PROFESSIONAL_CLASSIFICATION ~ intrusiveness-1\"\r\n                  },\r\n                  {\r\n                     \"perspectiveId\":\"classification-1\",\r\n                     \"evaluationLikertVal\":5,\r\n                     \"evaluationLikertText\":\"Strongly Agree\",\r\n                     \"evaluationText\":\"Some text for PERSONAL_PROFESSIONAL_CLASSIFICATION ~ classification-1\"\r\n                  }\r\n               ]\r\n            },\r\n            {\r\n               \"classificationName\":\"PRIORITY_CLASSIFICATION\",\r\n               \"perspectives\":[\r\n                  {\r\n                     \"perspectiveId\":\"intrusiveness-1\",\r\n                     \"evaluationLikertVal\":2,\r\n                     \"evaluationLikertText\":\"Disagree\",\r\n                     \"evaluationText\":\"Some text for PRIORITY_CLASSIFICATION ~ intrusiveness-1\"\r\n                  },\r\n                  {\r\n                     \"perspectiveId\":\"classification-1\",\r\n                     \"evaluationLikertVal\":5,\r\n                     \"evaluationLikertText\":\"Strongly Agree\",\r\n                     \"evaluationText\":\"Some text for PRIORITY_CLASSIFICATION ~ classification-1\"\r\n                  }\r\n               ]\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itemId\":\"xx-{{randomString}}-2\",\r\n         \"tags\":[\r\n            \"postman-test\"\r\n         ],\r\n         \"classifications\":[\r\n            {\r\n               \"classificationName\":\"PERSONAL_PROFESSIONAL_CLASSIFICATION\",\r\n               \"classificationValue\":\"personal\",\r\n               \"classificationOptions\":[\r\n                  \"personal\",\r\n                  \"professional\"\r\n               ]\r\n            },\r\n            {\r\n               \"classificationName\":\"PRIORITY_CLASSIFICATION\",\r\n               \"classificationValue\":\"general\",\r\n               \"classificationOptions\":[\r\n                  \"general\",\r\n                  \"high\"\r\n               ]\r\n            }\r\n         ],\r\n         \"evaluateSourceType\":\"RSS item\",\r\n         \"evaluateSourceOriginator\":\"The Register - Offbeat\",\r\n         \"evaluateSourceChannel\":\"The Register - Offbeat\",\r\n         \"evaluateTimeText\":\"2023-07-10T09:40:55.7254672+02:00\",\r\n         \"evaluateTimeMs\":1688974855725,\r\n         \"evaluateTitle\":\"Post-Brexit tariffs on cross EU-UK electrical vehicle imports still going ahead\",\r\n         \"evaluateText\":\"<h4>Commission official insists it has to protect itself against US subsidies</h4> <p>Moves to fight off a new \\\"rules of origin\\\" edict that some electric vehicle automakers claim could shut down their operations in the UK aren\\\\'t going anywhere, judging by the words of a senior Euro Commish official.…</p> <p><!--#include virtual=\\\\'/data_centre/_whitepaper_textlinks_top.html\\\\' --></p>\",\r\n         \"evaluationResponses\":[\r\n            {\r\n               \"classificationName\":\"PERSONAL_PROFESSIONAL_CLASSIFICATION\",\r\n               \"perspectives\":[\r\n                  {\r\n                     \"perspectiveId\":\"intrusiveness-1\",\r\n                     \"evaluationLikertVal\":2,\r\n                     \"evaluationLikertText\":\"Disagree\",\r\n                     \"evaluationText\":\"Some text for PERSONAL_PROFESSIONAL_CLASSIFICATION ~ intrusiveness-1\"\r\n                  },\r\n                  {\r\n                     \"perspectiveId\":\"classification-1\",\r\n                     \"evaluationLikertVal\":5,\r\n                     \"evaluationLikertText\":\"Strongly Agree\",\r\n                     \"evaluationText\":\"Some text for PERSONAL_PROFESSIONAL_CLASSIFICATION ~ classification-1\"\r\n                  }\r\n               ]\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itemId\":\"xx-{{randomString}}-3\",\r\n         \"tags\":[\r\n            \"postman-test\"\r\n         ],\r\n         \"classifications\":[\r\n            {\r\n               \"classificationName\":\"PERSONAL_PROFESSIONAL_CLASSIFICATION\",\r\n               \"classificationValue\":\"professional\",\r\n               \"classificationOptions\":[\r\n                  \"personal\",\r\n                  \"professional\"\r\n               ]\r\n            },\r\n            {\r\n               \"classificationName\":\"PRIORITY_CLASSIFICATION\",\r\n               \"classificationValue\":\"high\",\r\n               \"classificationOptions\":[\r\n                  \"general\",\r\n                  \"high\"\r\n               ]\r\n            }\r\n         ],\r\n         \"evaluateSourceType\":\"Slack message\",\r\n         \"evaluateSourceOriginator\":\"dmg <slack.com>\",\r\n         \"evaluateSourceChannel\":\"corp-chat-general\",\r\n         \"evaluateTimeText\":\"2023-07-10T09:42:29.0387854+02:00\",\r\n         \"evaluateTimeMs\":1688974949038,\r\n         \"evaluateTitle\":null,\r\n         \"evaluateText\":\"Test message\",\r\n         \"evaluationResponses\":[\r\n            {\r\n               \"classificationName\":\"PERSONAL_PROFESSIONAL_CLASSIFICATION\",\r\n               \"perspectives\":[\r\n                  {\r\n                     \"perspectiveId\":\"intrusiveness-1\",\r\n                     \"evaluationLikertVal\":2,\r\n                     \"evaluationLikertText\":\"Disagree\",\r\n                     \"evaluationText\":\"Some text for PERSONAL_PROFESSIONAL_CLASSIFICATION ~ intrusiveness-1\"\r\n                  },\r\n                  {\r\n                     \"perspectiveId\":\"classification-1\",\r\n                     \"evaluationLikertVal\":5,\r\n                     \"evaluationLikertText\":\"Strongly Agree\",\r\n                     \"evaluationText\":\"Some text for PERSONAL_PROFESSIONAL_CLASSIFICATION ~ classification-1\"\r\n                  }\r\n               ]\r\n            },\r\n            {\r\n               \"classificationName\":\"PRIORITY_CLASSIFICATION\",\r\n               \"perspectives\":[\r\n                  {\r\n                     \"perspectiveId\":\"intrusiveness-1\",\r\n                     \"evaluationLikertVal\":2,\r\n                     \"evaluationLikertText\":\"Disagree\",\r\n                     \"evaluationText\":\"Some text for PRIORITY_CLASSIFICATION ~ intrusiveness-1\"\r\n                  },\r\n                  {\r\n                     \"perspectiveId\":\"classification-1\",\r\n                     \"evaluationLikertVal\":5,\r\n                     \"evaluationLikertText\":\"Strongly Agree\",\r\n                     \"evaluationText\":\"Some text for PRIORITY_CLASSIFICATION ~ classification-1\"\r\n                  }\r\n               ]\r\n            }\r\n         ]\r\n      }\r\n   ],\r\n   \"evaluationPerspectives\":[\r\n      {\r\n         \"perspectiveId\":\"intrusiveness-1\",\r\n         \"perspectiveName\":\"Intrusiveness\",\r\n         \"perspectiveText\":\"How approprate is it to get an intrusive alert about this item, such as a notification on my mobile phone?\"\r\n      },\r\n      {\r\n         \"perspectiveId\":\"classification-1\",\r\n         \"perspectiveName\":\"Classification\",\r\n         \"perspectiveText\":\"Has this item been correctly classified out of the available options?\"\r\n      }\r\n   ],\r\n   \"context\":{\r\n      \"contextId\":\"CONTEXT-{{randomString}}\",\r\n      \"evaluationItems\":[\r\n         {\r\n            \"contentItemSummary\":{\r\n               \"augmentations\":{\r\n                  \"labelsMulti\":{\r\n                     \r\n                  },\r\n                  \"labelsSingle\":{\r\n                     \"PRIORITY_CLASSIFICATION\":\"general\",\r\n                     \"PERSONAL_PROFESSIONAL_CLASSIFICATION\":\"personal\"\r\n                  },\r\n                  \"summaryText\":\"\\n\\nNASA is close to finishing the X-59 \\\"Son of Concorde\\\" supersonic jet, which could revolutionize commercial flights by reducing the noise of supersonic travel. If successful, the X-59 would be the first aircraft to allow for supersonic travel without the noise and vibration associated with it. The first test flights are expected soon.\"\r\n               },\r\n               \"body\":\"<h4>If it works, the X-59 could enable a new era of commercial supersonic travel that doesn\\\\'t shatter windows</h4> <p>NASA\\\\'s mission to create a supersonic aircraft that doesn\\\\'t rattle windows and vibrate teeth is one step closer to reality as the experimental X-59 aircraft dubbed the \\\"Son of Concorde\\\" may soon be ready for its first test flights.…</p>\",\r\n               \"channel\":\"The Register - Offbeat\",\r\n               \"date\":\"2023-07-07T18:01:14Z\",\r\n               \"from\":{\r\n                  \"type\":\"rfc822\",\r\n                  \"address\":\"rss\",\r\n                  \"personal\":\"The Register - Offbeat\",\r\n                  \"group\":false\r\n               },\r\n               \"itemId\":\"xx-{{randomString}}-1\",\r\n               \"itemUrl\":\"https://go.theregister.com/feed/www.theregister.com/2023/07/07/nasa_quiet_supersonic_jet/\",\r\n               \"originator\":\"The Register - Offbeat\",\r\n               \"prominence\":\"HIGHER\",\r\n               \"providerDescription\":\"\",\r\n               \"providerName\":\"The Register - Offbeat <rss>\",\r\n               \"providerUrl\":\"https://www.theregister.com/offbeat/headlines.atom\",\r\n               \"subject\":\"NASA \\\\'quiet\\\\' supersonic jet is nearly ready for flight\",\r\n               \"to\":[\r\n                  \r\n               ],\r\n               \"type\":\"rss-item\",\r\n               \"typeDescription\":\"RSS item\"\r\n            },\r\n            \"evaluateClassifications\":[\r\n               {\r\n                  \"classificationName\":\"PERSONAL_PROFESSIONAL_CLASSIFICATION\",\r\n                  \"classificationOptions\":[\r\n                     \"personal\",\r\n                     \"professional\"\r\n                  ],\r\n                  \"classificationValue\":\"personal\"\r\n               },\r\n               {\r\n                  \"classificationName\":\"PRIORITY_CLASSIFICATION\",\r\n                  \"classificationOptions\":[\r\n                     \"general\",\r\n                     \"high\"\r\n                  ],\r\n                  \"classificationValue\":\"general\"\r\n               }\r\n            ],\r\n            \"evaluateSourceChannel\":\"The Register - Offbeat\",\r\n            \"evaluateSourceOriginator\":\"The Register - Offbeat\",\r\n            \"evaluateSourceType\":\"RSS item\",\r\n            \"evaluateText\":\"<h4>If it works, the X-59 could enable a new era of commercial supersonic travel that doesn\\\\'t shatter windows</h4> <p>NASA\\\\'s mission to create a supersonic aircraft that doesn\\\\'t rattle windows and vibrate teeth is one step closer to reality as the experimental X-59 aircraft dubbed the \\\"Son of Concorde\\\" may soon be ready for its first test flights.…</p>\",\r\n            \"evaluateTime\":\"2023-07-10T09:40:53.3706958+02:00\",\r\n            \"evaluateTitle\":\"NASA \\\\'quiet\\\\' supersonic jet is nearly ready for flight\"\r\n         },\r\n         {\r\n            \"contentItemSummary\":{\r\n               \"augmentations\":{\r\n                  \"labelsMulti\":{\r\n                     \r\n                  },\r\n                  \"labelsSingle\":{\r\n                     \"PRIORITY_CLASSIFICATION\":\"general\",\r\n                     \"PERSONAL_PROFESSIONAL_CLASSIFICATION\":\"personal\"\r\n                  },\r\n                  \"summaryText\":\"\\n\\nA senior European Commission official has confirmed that post-Brexit tariffs on imports of electric vehicles from the EU to the UK are still going ahead. This is being done in order to protect the EU against US subsidies given to electric vehicle manufacturers. The Commission is not backing down on the new \\\"rules of origin\\\" edict, despite manufacturers\\\\' claims that it could lead to the shutdown of their operations in the UK.\"\r\n               },\r\n               \"body\":\"<h4>Commission official insists it has to protect itself against US subsidies</h4> <p>Moves to fight off a new \\\"rules of origin\\\" edict that some electric vehicle automakers claim could shut down their operations in the UK aren\\\\'t going anywhere, judging by the words of a senior Euro Commish official.…</p> <p><!--#include virtual=\\\\'/data_centre/_whitepaper_textlinks_top.html\\\\' --></p>\",\r\n               \"channel\":\"The Register - Offbeat\",\r\n               \"date\":\"2023-07-07T10:00:11Z\",\r\n               \"from\":{\r\n                  \"type\":\"rfc822\",\r\n                  \"address\":\"rss\",\r\n                  \"personal\":\"The Register - Offbeat\",\r\n                  \"group\":false\r\n               },\r\n               \"itemId\":\"xx-{{randomString}}-2\",\r\n               \"itemUrl\":\"https://go.theregister.com/feed/www.theregister.com/2023/07/07/postbrexit_tariffs_on_electrical_vehicle/\",\r\n               \"originator\":\"The Register - Offbeat\",\r\n               \"prominence\":\"HIGHER\",\r\n               \"providerDescription\":\"\",\r\n               \"providerName\":\"The Register - Offbeat <rss>\",\r\n               \"providerUrl\":\"https://www.theregister.com/offbeat/headlines.atom\",\r\n               \"subject\":\"Post-Brexit tariffs on cross EU-UK electrical vehicle imports still going ahead\",\r\n               \"to\":[\r\n                  \r\n               ],\r\n               \"type\":\"rss-item\",\r\n               \"typeDescription\":\"RSS item\"\r\n            },\r\n            \"evaluateClassifications\":[\r\n               {\r\n                  \"classificationName\":\"PERSONAL_PROFESSIONAL_CLASSIFICATION\",\r\n                  \"classificationOptions\":[\r\n                     \"personal\",\r\n                     \"professional\"\r\n                  ],\r\n                  \"classificationValue\":\"personal\"\r\n               },\r\n               {\r\n                  \"classificationName\":\"PRIORITY_CLASSIFICATION\",\r\n                  \"classificationOptions\":[\r\n                     \"general\",\r\n                     \"high\"\r\n                  ],\r\n                  \"classificationValue\":\"general\"\r\n               }\r\n            ],\r\n            \"evaluateSourceChannel\":\"The Register - Offbeat\",\r\n            \"evaluateSourceOriginator\":\"The Register - Offbeat\",\r\n            \"evaluateSourceType\":\"RSS item\",\r\n            \"evaluateText\":\"<h4>Commission official insists it has to protect itself against US subsidies</h4> <p>Moves to fight off a new \\\"rules of origin\\\" edict that some electric vehicle automakers claim could shut down their operations in the UK aren\\\\'t going anywhere, judging by the words of a senior Euro Commish official.…</p> <p><!--#include virtual=\\\\'/data_centre/_whitepaper_textlinks_top.html\\\\' --></p>\",\r\n            \"evaluateTime\":\"2023-07-10T09:40:55.7254672+02:00\",\r\n            \"evaluateTitle\":\"Post-Brexit tariffs on cross EU-UK electrical vehicle imports still going ahead\"\r\n         },\r\n         {\r\n            \"contentItemSummary\":{\r\n               \"augmentations\":{\r\n                  \"labelsMulti\":{\r\n                     \r\n                  },\r\n                  \"labelsSingle\":{\r\n                     \"PRIORITY_CLASSIFICATION\":\"high\",\r\n                     \"PERSONAL_PROFESSIONAL_CLASSIFICATION\":\"professional\"\r\n                  },\r\n                  \"summaryText\":\"Test message\"\r\n               },\r\n               \"body\":\"Test message\",\r\n               \"channel\":\"corp-chat-general\",\r\n               \"date\":\"2023-07-10T07:42:26.018Z\",\r\n               \"from\":{\r\n                  \"type\":\"rfc822\",\r\n                  \"address\":\"slack.com\",\r\n                  \"personal\":\"dmg\",\r\n                  \"group\":false\r\n               },\r\n               \"itemId\":\"xx-{{randomString}}-3\",\r\n               \"itemUrl\":\"https://awag-scratch.slack.com/archives/C054RJVQ7DM/p1688974946017689\",\r\n               \"originator\":\"dmg <slack.com>\",\r\n               \"prominence\":\"LOW\",\r\n               \"providerDescription\":\"\",\r\n               \"providerName\":\"Awareness Agent (Scratch)\",\r\n               \"providerUrl\":\"https://awag-scratch.slack.com/\",\r\n               \"to\":[\r\n                  {\r\n                     \"type\":\"rfc822\",\r\n                     \"address\":\"C054RJVQ7DM\",\r\n                     \"personal\":\"corp-chat-general\",\r\n                     \"group\":false\r\n                  }\r\n               ],\r\n               \"type\":\"message\",\r\n               \"typeDescription\":\"Slack message\"\r\n            },\r\n            \"evaluateClassifications\":[\r\n               {\r\n                  \"classificationName\":\"PERSONAL_PROFESSIONAL_CLASSIFICATION\",\r\n                  \"classificationOptions\":[\r\n                     \"personal\",\r\n                     \"professional\"\r\n                  ],\r\n                  \"classificationValue\":\"professional\"\r\n               },\r\n               {\r\n                  \"classificationName\":\"PRIORITY_CLASSIFICATION\",\r\n                  \"classificationOptions\":[\r\n                     \"general\",\r\n                     \"high\"\r\n                  ],\r\n                  \"classificationValue\":\"high\"\r\n               }\r\n            ],\r\n            \"evaluateSourceChannel\":\"corp-chat-general\",\r\n            \"evaluateSourceOriginator\":\"dmg <slack.com>\",\r\n            \"evaluateSourceType\":\"Slack message\",\r\n            \"evaluateText\":\"Test message\",\r\n            \"evaluateTime\":\"2023-07-10T09:42:29.0387854+02:00\"\r\n         }\r\n      ],\r\n      \"openaiApiCompletionsQueryInfo\":{\r\n         \"maxTokens\":1200,\r\n         \"model\":\"text-davinci-003\",\r\n         \"promptText\":\"Please role play a persona for the purposes of evaluating a software system.  The software system is intended to manage a user\\\\'s incoming information from multiple sources - including work and personal - so that the user is not overwhelmed or distracted.  Consider it a personal information triage service.\\n\\nYou will be provided the items to evaluate in a structured form like:\\n\\n{\\n   \\\"persona\\\":{\\n      \\\"name\\\":\\\"Persona Name\\\",\\n      \\\"text\\\":\\\"Description of the persona to use\\\"\\n   },\\n   \\\"perspectives\\\":[\\n      {\\n         \\\"id\\\":\\\"Perspective ID\\\",\\n         \\\"name\\\":\\\"Perspective Name\\\",\\n         \\\"text\\\":\\\"Description of the perspective to apply\\\"\\n      }\\n   ],\\n   \\\"items\\\":[\\n      {\\n         \\\"itemId\\\":\\\"abcd1234\\\",\\n         \\\"sent\\\":\\\"2023-07-03T18:52:09.419Z\\\",\\n         \\\"title\\\":\\\"Title of item (optional)\\\",\\n         \\\"summary\\\":\\\"Short text describing the content of the item to evaluate\\\",\\n         \\\"source\\\":{\\n            \\\"type\\\":\\\"RSS Item\\\",\\n            \\\"originator\\\":\\\"The originator of the content\\\",\\n            \\\"channel\\\":\\\"The channel, list, address etc that content was sent to\\\"\\n         },\\n         \\\"classifications\\\":[{\\n            \\\"name\\\":\\\"personal-professional\\\",\\n            \\\"selected\\\":\\\"professional\\\",\\n            \\\"available\\\":[\\n               \\\"personal\\\",\\n               \\\"professional\\\"\\n            ]\\n         }]\\n      }\\n   ]\\n}\\n\\nThe items to evaluate are contained in the top level \\\\'items\\\\' array.  You should consider each item in the role of the persona that is defined in the \\\\'persona\\\\' property.\\n\\nEach item contains a number of classifications made by the software system that you must evaluate.  You should consider each classification from each of the provided perspectives, which will tell you to focus your reply on a specific aspect of the item and how it has been classified.  Your answer should be how your persona would rate that item classification in the context of the perspective.  The list of perspectives that you should apply is defined in the \\\\'perspective\\\\' property of the input JSON.\\n\\nThe content of an item is contained in the \\\\'title\\\\' and \\\\'summary\\\\' fields, and \\\\'sent\\\\' provides context for time of day and day of week.  When evaluating an item classification you should consider the item, as represented by these fields, has been assigned an appropriate classification, as seen by your persona in the context of each perspective.\\n\\nThe \\\\'classification\\\\' property shows how the system has classified this item, which is shown in the \\\\'selected\\\\' property of this object.  The \\\\'available\\\\' object lists the possible classifications that the system could have choosen from.  Note that a \\\\'selected\\\\' value of \\\"none\\\", \\\"not\\\" or null is a special case, meaning that the system decided to classify the item as not being of interest - take this into consideration also.\\n\\nThe \\\\'source\\\\' property describes where the item came from, which will vary according to the type of object - for example for a Slack item, \\\\'channel\\\\' will refer to the slack channel the item was originally sent to, whereas for an RSS item, \\\\'channel\\\\' will refer to the RSS feed.  Similarly, \\\\'originator\\\\' could be an email address, RSS publisher, Slack user etc.\\n\\n\\nYou should reply using JSON, one array entry per item evaluated, with the following structure:\\n\\n[\\n   {\\n      \\\"itemId\\\":\\\"abcd1234\\\",\\n      \\\"evaluations\\\":[\\n         {\\n            \\\"classificationName\\\":\\\"Classification Name 1\\\",\\n            \\\"perspectives\\\":[\\n               {\\n                  \\\"perspectiveId\\\":\\\"Perspective ID\\\",\\n                  \\\"evaluationLikert\\\":\\\"1\\\",\\n                  \\\"evaluationText\\\":\\\"Textual description of the evaluation\\\"\\n               }\\n            ]\\n         }\\n      ]\\n   }\\n]\\n\\nThe \\\\'evaluations\\\\' array for each item should contain an object for every classification evaluated for the item, within this the \\\\'perspectives\\\\' array should contain the results for the individual perspectives evaluated for that classification.  It is expected that each item may have multiple classifications and the response array must contain entries for all of them.\\n\\nReturn only a valid JSON object with the above structure, with no additional text.\\n\\nThe \\\\'evaluationLikert\\\\' field should be a likert scale ranging from 1 (not at all in agreement with the perspective) to 5 (absolutely in agreement).  The \\\\'evaluationText\\\\' field should contain text that elaborates on or explains your rating.\\n\\nThe persona I want you to adopt is defined in the persona property of the provided JSON.  You should use the \\\\'text\\\\' property of this as your persona.\\n\\nThe item to evaluate is:\\n{persona:{name:\\\\'John Johnson\\\\',text:\\\\'A busy IT executive who needs to know about problems and issues in his company the moment they happen around the clock but is not interested in non-urgent content\\\\'},perspectives:[{id:\\\\'intrusiveness-1\\\\',name:\\\\'Intrusiveness\\\\',text:\\\\'How approprate is it to get an intrusive alert about this item, such as a notification on my mobile phone?\\\\'},{id:\\\\'classification-1\\\\',name:\\\\'Classification\\\\',text:\\\\'Has this item been correctly classified out of the available options?\\\\'}],items:[{itemId:\\\\'9b651c92-c039-4d74-8632-bb27d29d2cfe\\\\',sent:\\\\'2023-07-10T09:40:53.370Z\\\\',title:\\\\'NASA \\\\\\\\'quiet\\\\\\\\' supersonic jet is nearly ready for flight\\\\',summary:\\\\'<h4>If it works, the X-59 could enable a new era of commercial supersonic travel that doesn\\\\\\\\'t shatter windows</h4> <p>NASA\\\\\\\\'s mission to create a supersonic aircraft that doesn\\\\\\\\'t rattle windows and vibrate teeth is one step closer to reality as the experimental X-59 aircraft dubbed the \\\"Son of Concorde\\\" may soon be ready for its first test flights.…</p>\\\\',source:{type:\\\\'RSS item\\\\',originator:\\\\'The Register - Offbeat\\\\',channel:\\\\'The Register - Offbeat\\\\'},classifications:[{name:\\\\'PERSONAL_PROFESSIONAL_CLASSIFICATION\\\\',selected:\\\\'personal\\\\',available:[\\\\'personal\\\\',\\\\'professional\\\\']},{name:\\\\'PRIORITY_CLASSIFICATION\\\\',selected:\\\\'general\\\\',available:[\\\\'general\\\\',\\\\'high\\\\']}]},{itemId:\\\\'24adb959-20ea-41ef-a042-15e249962593\\\\',sent:\\\\'2023-07-10T09:40:55.725Z\\\\',title:\\\\'Post-Brexit tariffs on cross EU-UK electrical vehicle imports still going ahead\\\\',summary:\\\\'<h4>Commission official insists it has to protect itself against US subsidies</h4> <p>Moves to fight off a new \\\"rules of origin\\\" edict that some electric vehicle automakers claim could shut down their operations in the UK aren\\\\\\\\'t going anywhere, judging by the words of a senior Euro Commish official.…</p> <p><!--#include virtual=\\\\\\\\'/data_centre/_whitepaper_textlinks_top.html\\\\\\\\' --></p>\\\\',source:{type:\\\\'RSS item\\\\',originator:\\\\'The Register - Offbeat\\\\',channel:\\\\'The Register - Offbeat\\\\'},classifications:[{name:\\\\'PERSONAL_PROFESSIONAL_CLASSIFICATION\\\\',selected:\\\\'personal\\\\',available:[\\\\'personal\\\\',\\\\'professional\\\\']},{name:\\\\'PRIORITY_CLASSIFICATION\\\\',selected:\\\\'general\\\\',available:[\\\\'general\\\\',\\\\'high\\\\']}]},{itemId:\\\\'c9dd6b22-5c3b-44dd-a283-43e3416e8fb0\\\\',sent:\\\\'2023-07-10T09:42:29.038Z\\\\',title:null,summary:\\\\'Test message\\\\',source:{type:\\\\'Slack message\\\\',originator:\\\\'dmg <slack.com>\\\\',channel:\\\\'corp-chat-general\\\\'},classifications:[{name:\\\\'PERSONAL_PROFESSIONAL_CLASSIFICATION\\\\',selected:\\\\'professional\\\\',available:[\\\\'personal\\\\',\\\\'professional\\\\']},{name:\\\\'PRIORITY_CLASSIFICATION\\\\',selected:\\\\'high\\\\',available:[\\\\'general\\\\',\\\\'high\\\\']}]}]}\\n\",\r\n         \"temperature\":0.6,\r\n         \"promptQueryJson\":{\r\n            \"persona\":{\r\n               \"name\":\"John Johnson\",\r\n               \"text\":\"A busy IT executive who needs to know about problems and issues in his company the moment they happen around the clock but is not interested in non-urgent content\"\r\n            },\r\n            \"perspectives\":[\r\n               {\r\n                  \"id\":\"intrusiveness-1\",\r\n                  \"name\":\"Intrusiveness\",\r\n                  \"text\":\"How approprate is it to get an intrusive alert about this item, such as a notification on my mobile phone?\"\r\n               },\r\n               {\r\n                  \"id\":\"classification-1\",\r\n                  \"name\":\"Classification\",\r\n                  \"text\":\"Has this item been correctly classified out of the available options?\"\r\n               }\r\n            ],\r\n            \"items\":[\r\n               {\r\n                  \"itemId\":\"xx-{{randomString}}-1\",\r\n                  \"sent\":\"2023-07-10T09:40:53.370Z\",\r\n                  \"title\":\"NASA \\\\'quiet\\\\' supersonic jet is nearly ready for flight\",\r\n                  \"summary\":\"<h4>If it works, the X-59 could enable a new era of commercial supersonic travel that doesn\\\\'t shatter windows</h4> <p>NASA\\\\'s mission to create a supersonic aircraft that doesn\\\\'t rattle windows and vibrate teeth is one step closer to reality as the experimental X-59 aircraft dubbed the \\\"Son of Concorde\\\" may soon be ready for its first test flights.…</p>\",\r\n                  \"source\":{\r\n                     \"type\":\"RSS item\",\r\n                     \"originator\":\"The Register - Offbeat\",\r\n                     \"channel\":\"The Register - Offbeat\"\r\n                  },\r\n                  \"classifications\":[\r\n                     {\r\n                        \"name\":\"PERSONAL_PROFESSIONAL_CLASSIFICATION\",\r\n                        \"selected\":\"personal\",\r\n                        \"available\":[\r\n                           \"personal\",\r\n                           \"professional\"\r\n                        ]\r\n                     },\r\n                     {\r\n                        \"name\":\"PRIORITY_CLASSIFICATION\",\r\n                        \"selected\":\"general\",\r\n                        \"available\":[\r\n                           \"general\",\r\n                           \"high\"\r\n                        ]\r\n                     }\r\n                  ]\r\n               },\r\n               {\r\n                  \"itemId\":\"xx-{{randomString}}-2\",\r\n                  \"sent\":\"2023-07-10T09:40:55.725Z\",\r\n                  \"title\":\"Post-Brexit tariffs on cross EU-UK electrical vehicle imports still going ahead\",\r\n                  \"summary\":\"<h4>Commission official insists it has to protect itself against US subsidies</h4> <p>Moves to fight off a new \\\"rules of origin\\\" edict that some electric vehicle automakers claim could shut down their operations in the UK aren\\\\'t going anywhere, judging by the words of a senior Euro Commish official.…</p> <p><!--#include virtual=\\\\'/data_centre/_whitepaper_textlinks_top.html\\\\' --></p>\",\r\n                  \"source\":{\r\n                     \"type\":\"RSS item\",\r\n                     \"originator\":\"The Register - Offbeat\",\r\n                     \"channel\":\"The Register - Offbeat\"\r\n                  },\r\n                  \"classifications\":[\r\n                     {\r\n                        \"name\":\"PERSONAL_PROFESSIONAL_CLASSIFICATION\",\r\n                        \"selected\":\"personal\",\r\n                        \"available\":[\r\n                           \"personal\",\r\n                           \"professional\"\r\n                        ]\r\n                     },\r\n                     {\r\n                        \"name\":\"PRIORITY_CLASSIFICATION\",\r\n                        \"selected\":\"general\",\r\n                        \"available\":[\r\n                           \"general\",\r\n                           \"high\"\r\n                        ]\r\n                     }\r\n                  ]\r\n               },\r\n               {\r\n                  \"itemId\":\"xx-{{randomString}}-3\",\r\n                  \"sent\":\"2023-07-10T09:42:29.038Z\",\r\n                  \"title\":null,\r\n                  \"summary\":\"Test message\",\r\n                  \"source\":{\r\n                     \"type\":\"Slack message\",\r\n                     \"originator\":\"dmg <slack.com>\",\r\n                     \"channel\":\"corp-chat-general\"\r\n                  },\r\n                  \"classifications\":[\r\n                     {\r\n                        \"name\":\"PERSONAL_PROFESSIONAL_CLASSIFICATION\",\r\n                        \"selected\":\"professional\",\r\n                        \"available\":[\r\n                           \"personal\",\r\n                           \"professional\"\r\n                        ]\r\n                     },\r\n                     {\r\n                        \"name\":\"PRIORITY_CLASSIFICATION\",\r\n                        \"selected\":\"high\",\r\n                        \"available\":[\r\n                           \"general\",\r\n                           \"high\"\r\n                        ]\r\n                     }\r\n                  ]\r\n               }\r\n            ]\r\n         }\r\n      },\r\n      \"queryState\":{\r\n         \"id\":\"cmpl-{{randomString}}\",\r\n         \"object\":\"text_completion\",\r\n         \"created\":1688974949,\r\n         \"model\":\"text-davinci-003\",\r\n         \"usage\":{\r\n            \"prompt_tokens\":1782,\r\n            \"completion_tokens\":791,\r\n            \"total_tokens\":2573\r\n         },\r\n         \"finish_reason\":\"stop\"\r\n      }\r\n   }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_prefix}}/api/v1/awag/data/eval/record-evaluation-data",
					"host": [
						"{{url_prefix}}"
					],
					"path": [
						"api",
						"v1",
						"awag",
						"data",
						"eval",
						"record-evaluation-data"
					]
				}
			},
			"response": []
		},
		{
			"name": "AwAgData Record Evaluation Data Test",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"function randomString(minValue, maxValue, dataSet = 'abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ') {\r",
							"    if (!minValue) {\r",
							"        minValue = 20;\r",
							"        maxValue = 20;\r",
							"    }\r",
							"\r",
							"    if (!maxValue) {\r",
							"        maxValue = minValue;\r",
							"    }\r",
							"\r",
							"    let length = _.random(minValue, maxValue),\r",
							"        randomString = \"\";\r",
							"\r",
							"    for (let i = 0; i < length; i++)\r",
							"        randomString += dataSet.charAt(Math.floor(Math.random() * dataSet.length));\r",
							"    return randomString;\r",
							"}\r",
							"\r",
							"pm.variables.set('randomString', randomString());\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{agent-id-test-1}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "eb059f77-bb22-4dde-9607-{{agent_id_test_1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"agent\":\"{{agent_id}}\",\r\n   \"evaluationPersona\": {\r\n        \"id\":\"it-exec-1\",\r\n        \"name\":\"John Johnson\",\r\n        \"content\":{\r\n             \"foo\": \"ZZZ A busy IT executive who needs to know about problems and issues in his company the moment they happen around the clock but is not interested in non-urgent content\"\r\n             }\r\n   },\r\n   \"items\":[\r\n      {\r\n         \"itemId\":\"xx-{{randomString}}-1\",\r\n         \"tags\":[\r\n            \"postman-test\",\r\n            \"test\"\r\n         ],\r\n         \"classifications\":[\r\n            {\r\n               \"classificationName\":\"PERSONAL_PROFESSIONAL_CLASSIFICATION\",\r\n               \"classificationValue\":\"personal\",\r\n               \"classificationOptions\":[\r\n                  \"personal\",\r\n                  \"professional\"\r\n               ]\r\n            },\r\n            {\r\n               \"classificationName\":\"PRIORITY_CLASSIFICATION\",\r\n               \"classificationValue\":\"general\",\r\n               \"classificationOptions\":[\r\n                  \"general\",\r\n                  \"high\"\r\n               ]\r\n            }\r\n         ],\r\n         \"evaluateSourceType\":\"RSS item\",\r\n         \"evaluateSourceOriginator\":\"The Register - Offbeat\",\r\n         \"evaluateSourceChannel\":\"The Register - Offbeat\",\r\n         \"evaluateTimeText\":\"2023-07-10T09:40:53.3706958+02:00\",\r\n         \"evaluateTimeMs\":1688974853370,\r\n         \"evaluateTitle\":\"NASA \\\\'quiet\\\\' supersonic jet is nearly ready for flight\",\r\n         \"evaluateText\":\"<h4>If it works, the X-59 could enable a new era of commercial supersonic travel that doesn\\\\'t shatter windows</h4> <p>NASA\\\\'s mission to create a supersonic aircraft that doesn\\\\'t rattle windows and vibrate teeth is one step closer to reality as the experimental X-59 aircraft dubbed the \\\"Son of Concorde\\\" may soon be ready for its first test flights.…</p>\",\r\n         \"evaluationResponses\":[\r\n            {\r\n               \"classificationName\":\"PERSONAL_PROFESSIONAL_CLASSIFICATION\",\r\n               \"perspectives\":[\r\n                  {\r\n                     \"perspectiveId\":\"intrusiveness-1\",\r\n                     \"evaluationLikertVal\":2,\r\n                     \"evaluationLikertText\":\"Disagree\",\r\n                     \"evaluationText\":\"Some text for PERSONAL_PROFESSIONAL_CLASSIFICATION ~ intrusiveness-1\"\r\n                  },\r\n                  {\r\n                     \"perspectiveId\":\"classification-1\",\r\n                     \"evaluationLikertVal\":5,\r\n                     \"evaluationLikertText\":\"Strongly Agree\",\r\n                     \"evaluationText\":\"Some text for PERSONAL_PROFESSIONAL_CLASSIFICATION ~ classification-1\"\r\n                  }\r\n               ]\r\n            },\r\n            {\r\n               \"classificationName\":\"PRIORITY_CLASSIFICATION\",\r\n               \"perspectives\":[\r\n                  {\r\n                     \"perspectiveId\":\"intrusiveness-1\",\r\n                     \"evaluationLikertVal\":2,\r\n                     \"evaluationLikertText\":\"Disagree\",\r\n                     \"evaluationText\":\"Some text for PRIORITY_CLASSIFICATION ~ intrusiveness-1\"\r\n                  },\r\n                  {\r\n                     \"perspectiveId\":\"classification-1\",\r\n                     \"evaluationLikertVal\":5,\r\n                     \"evaluationLikertText\":\"Strongly Agree\",\r\n                     \"evaluationText\":\"Some text for PRIORITY_CLASSIFICATION ~ classification-1\"\r\n                  }\r\n               ]\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itemId\":\"xx-{{randomString}}-2\",\r\n         \"tags\":[\r\n            \"postman-test\"\r\n         ],\r\n         \"classifications\":[\r\n            {\r\n               \"classificationName\":\"PERSONAL_PROFESSIONAL_CLASSIFICATION\",\r\n               \"classificationValue\":\"personal\",\r\n               \"classificationOptions\":[\r\n                  \"personal\",\r\n                  \"professional\"\r\n               ]\r\n            },\r\n            {\r\n               \"classificationName\":\"PRIORITY_CLASSIFICATION\",\r\n               \"classificationValue\":\"general\",\r\n               \"classificationOptions\":[\r\n                  \"general\",\r\n                  \"high\"\r\n               ]\r\n            }\r\n         ],\r\n         \"evaluateSourceType\":\"RSS item\",\r\n         \"evaluateSourceOriginator\":\"The Register - Offbeat\",\r\n         \"evaluateSourceChannel\":\"The Register - Offbeat\",\r\n         \"evaluateTimeText\":\"2023-07-10T09:40:55.7254672+02:00\",\r\n         \"evaluateTimeMs\":1688974855725,\r\n         \"evaluateTitle\":\"Post-Brexit tariffs on cross EU-UK electrical vehicle imports still going ahead\",\r\n         \"evaluateText\":\"<h4>Commission official insists it has to protect itself against US subsidies</h4> <p>Moves to fight off a new \\\"rules of origin\\\" edict that some electric vehicle automakers claim could shut down their operations in the UK aren\\\\'t going anywhere, judging by the words of a senior Euro Commish official.…</p> <p><!--#include virtual=\\\\'/data_centre/_whitepaper_textlinks_top.html\\\\' --></p>\",\r\n         \"evaluationResponses\":[\r\n            {\r\n               \"classificationName\":\"PERSONAL_PROFESSIONAL_CLASSIFICATION\",\r\n               \"perspectives\":[\r\n                  {\r\n                     \"perspectiveId\":\"intrusiveness-1\",\r\n                     \"evaluationLikertVal\":2,\r\n                     \"evaluationLikertText\":\"Disagree\",\r\n                     \"evaluationText\":\"Some text for PERSONAL_PROFESSIONAL_CLASSIFICATION ~ intrusiveness-1\"\r\n                  },\r\n                  {\r\n                     \"perspectiveId\":\"classification-1\",\r\n                     \"evaluationLikertVal\":5,\r\n                     \"evaluationLikertText\":\"Strongly Agree\",\r\n                     \"evaluationText\":\"Some text for PERSONAL_PROFESSIONAL_CLASSIFICATION ~ classification-1\"\r\n                  }\r\n               ]\r\n            }\r\n         ]\r\n      },\r\n      {\r\n         \"itemId\":\"xx-{{randomString}}-3\",\r\n         \"tags\":[\r\n            \"postman-test\"\r\n         ],\r\n         \"classifications\":[\r\n            {\r\n               \"classificationName\":\"PERSONAL_PROFESSIONAL_CLASSIFICATION\",\r\n               \"classificationValue\":\"professional\",\r\n               \"classificationOptions\":[\r\n                  \"personal\",\r\n                  \"professional\"\r\n               ]\r\n            },\r\n            {\r\n               \"classificationName\":\"PRIORITY_CLASSIFICATION\",\r\n               \"classificationValue\":\"high\",\r\n               \"classificationOptions\":[\r\n                  \"general\",\r\n                  \"high\"\r\n               ]\r\n            }\r\n         ],\r\n         \"evaluateSourceType\":\"Slack message\",\r\n         \"evaluateSourceOriginator\":\"dmg <slack.com>\",\r\n         \"evaluateSourceChannel\":\"corp-chat-general\",\r\n         \"evaluateTimeText\":\"2023-07-10T09:42:29.0387854+02:00\",\r\n         \"evaluateTimeMs\":1688974949038,\r\n         \"evaluateTitle\":null,\r\n         \"evaluateText\":\"Test message\",\r\n         \"evaluationResponses\":[\r\n            {\r\n               \"classificationName\":\"PERSONAL_PROFESSIONAL_CLASSIFICATION\",\r\n               \"perspectives\":[\r\n                  {\r\n                     \"perspectiveId\":\"intrusiveness-1\",\r\n                     \"evaluationLikertVal\":2,\r\n                     \"evaluationLikertText\":\"Disagree\",\r\n                     \"evaluationText\":\"Some text for PERSONAL_PROFESSIONAL_CLASSIFICATION ~ intrusiveness-1\"\r\n                  },\r\n                  {\r\n                     \"perspectiveId\":\"classification-1\",\r\n                     \"evaluationLikertVal\":5,\r\n                     \"evaluationLikertText\":\"Strongly Agree\",\r\n                     \"evaluationText\":\"Some text for PERSONAL_PROFESSIONAL_CLASSIFICATION ~ classification-1\"\r\n                  }\r\n               ]\r\n            },\r\n            {\r\n               \"classificationName\":\"PRIORITY_CLASSIFICATION\",\r\n               \"perspectives\":[\r\n                  {\r\n                     \"perspectiveId\":\"intrusiveness-1\",\r\n                     \"evaluationLikertVal\":2,\r\n                     \"evaluationLikertText\":\"Disagree\",\r\n                     \"evaluationText\":\"Some text for PRIORITY_CLASSIFICATION ~ intrusiveness-1\"\r\n                  },\r\n                  {\r\n                     \"perspectiveId\":\"classification-1\",\r\n                     \"evaluationLikertVal\":5,\r\n                     \"evaluationLikertText\":\"Strongly Agree\",\r\n                     \"evaluationText\":\"Some text for PRIORITY_CLASSIFICATION ~ classification-1\"\r\n                  }\r\n               ]\r\n            }\r\n         ]\r\n      }\r\n   ],\r\n   \"evaluationPerspectives\":[\r\n      {\r\n         \"perspectiveId\":\"intrusiveness-1\",\r\n         \"perspectiveName\":\"Intrusiveness\",\r\n         \"perspectiveText\":\"How approprate is it to get an intrusive alert about this item, such as a notification on my mobile phone?\"\r\n      },\r\n      {\r\n         \"perspectiveId\":\"classification-1\",\r\n         \"perspectiveName\":\"Classification\",\r\n         \"perspectiveText\":\"Has this item been correctly classified out of the available options?\"\r\n      }\r\n   ],\r\n   \"context\":{\r\n      \"contextId\":\"CONTEXT-{{randomString}}\",\r\n      \"evaluationItems\":[\r\n         {\r\n            \"contentItemSummary\":{\r\n               \"augmentations\":{\r\n                  \"labelsMulti\":{\r\n                     \r\n                  },\r\n                  \"labelsSingle\":{\r\n                     \"PRIORITY_CLASSIFICATION\":\"general\",\r\n                     \"PERSONAL_PROFESSIONAL_CLASSIFICATION\":\"personal\"\r\n                  },\r\n                  \"summaryText\":\"\\n\\nNASA is close to finishing the X-59 \\\"Son of Concorde\\\" supersonic jet, which could revolutionize commercial flights by reducing the noise of supersonic travel. If successful, the X-59 would be the first aircraft to allow for supersonic travel without the noise and vibration associated with it. The first test flights are expected soon.\"\r\n               },\r\n               \"body\":\"<h4>If it works, the X-59 could enable a new era of commercial supersonic travel that doesn\\\\'t shatter windows</h4> <p>NASA\\\\'s mission to create a supersonic aircraft that doesn\\\\'t rattle windows and vibrate teeth is one step closer to reality as the experimental X-59 aircraft dubbed the \\\"Son of Concorde\\\" may soon be ready for its first test flights.…</p>\",\r\n               \"channel\":\"The Register - Offbeat\",\r\n               \"date\":\"2023-07-07T18:01:14Z\",\r\n               \"from\":{\r\n                  \"type\":\"rfc822\",\r\n                  \"address\":\"rss\",\r\n                  \"personal\":\"The Register - Offbeat\",\r\n                  \"group\":false\r\n               },\r\n               \"itemId\":\"xx-{{randomString}}-1\",\r\n               \"itemUrl\":\"https://go.theregister.com/feed/www.theregister.com/2023/07/07/nasa_quiet_supersonic_jet/\",\r\n               \"originator\":\"The Register - Offbeat\",\r\n               \"prominence\":\"HIGHER\",\r\n               \"providerDescription\":\"\",\r\n               \"providerName\":\"The Register - Offbeat <rss>\",\r\n               \"providerUrl\":\"https://www.theregister.com/offbeat/headlines.atom\",\r\n               \"subject\":\"NASA \\\\'quiet\\\\' supersonic jet is nearly ready for flight\",\r\n               \"to\":[\r\n                  \r\n               ],\r\n               \"type\":\"rss-item\",\r\n               \"typeDescription\":\"RSS item\"\r\n            },\r\n            \"evaluateClassifications\":[\r\n               {\r\n                  \"classificationName\":\"PERSONAL_PROFESSIONAL_CLASSIFICATION\",\r\n                  \"classificationOptions\":[\r\n                     \"personal\",\r\n                     \"professional\"\r\n                  ],\r\n                  \"classificationValue\":\"personal\"\r\n               },\r\n               {\r\n                  \"classificationName\":\"PRIORITY_CLASSIFICATION\",\r\n                  \"classificationOptions\":[\r\n                     \"general\",\r\n                     \"high\"\r\n                  ],\r\n                  \"classificationValue\":\"general\"\r\n               }\r\n            ],\r\n            \"evaluateSourceChannel\":\"The Register - Offbeat\",\r\n            \"evaluateSourceOriginator\":\"The Register - Offbeat\",\r\n            \"evaluateSourceType\":\"RSS item\",\r\n            \"evaluateText\":\"<h4>If it works, the X-59 could enable a new era of commercial supersonic travel that doesn\\\\'t shatter windows</h4> <p>NASA\\\\'s mission to create a supersonic aircraft that doesn\\\\'t rattle windows and vibrate teeth is one step closer to reality as the experimental X-59 aircraft dubbed the \\\"Son of Concorde\\\" may soon be ready for its first test flights.…</p>\",\r\n            \"evaluateTime\":\"2023-07-10T09:40:53.3706958+02:00\",\r\n            \"evaluateTitle\":\"NASA \\\\'quiet\\\\' supersonic jet is nearly ready for flight\"\r\n         },\r\n         {\r\n            \"contentItemSummary\":{\r\n               \"augmentations\":{\r\n                  \"labelsMulti\":{\r\n                     \r\n                  },\r\n                  \"labelsSingle\":{\r\n                     \"PRIORITY_CLASSIFICATION\":\"general\",\r\n                     \"PERSONAL_PROFESSIONAL_CLASSIFICATION\":\"personal\"\r\n                  },\r\n                  \"summaryText\":\"\\n\\nA senior European Commission official has confirmed that post-Brexit tariffs on imports of electric vehicles from the EU to the UK are still going ahead. This is being done in order to protect the EU against US subsidies given to electric vehicle manufacturers. The Commission is not backing down on the new \\\"rules of origin\\\" edict, despite manufacturers\\\\' claims that it could lead to the shutdown of their operations in the UK.\"\r\n               },\r\n               \"body\":\"<h4>Commission official insists it has to protect itself against US subsidies</h4> <p>Moves to fight off a new \\\"rules of origin\\\" edict that some electric vehicle automakers claim could shut down their operations in the UK aren\\\\'t going anywhere, judging by the words of a senior Euro Commish official.…</p> <p><!--#include virtual=\\\\'/data_centre/_whitepaper_textlinks_top.html\\\\' --></p>\",\r\n               \"channel\":\"The Register - Offbeat\",\r\n               \"date\":\"2023-07-07T10:00:11Z\",\r\n               \"from\":{\r\n                  \"type\":\"rfc822\",\r\n                  \"address\":\"rss\",\r\n                  \"personal\":\"The Register - Offbeat\",\r\n                  \"group\":false\r\n               },\r\n               \"itemId\":\"xx-{{randomString}}-2\",\r\n               \"itemUrl\":\"https://go.theregister.com/feed/www.theregister.com/2023/07/07/postbrexit_tariffs_on_electrical_vehicle/\",\r\n               \"originator\":\"The Register - Offbeat\",\r\n               \"prominence\":\"HIGHER\",\r\n               \"providerDescription\":\"\",\r\n               \"providerName\":\"The Register - Offbeat <rss>\",\r\n               \"providerUrl\":\"https://www.theregister.com/offbeat/headlines.atom\",\r\n               \"subject\":\"Post-Brexit tariffs on cross EU-UK electrical vehicle imports still going ahead\",\r\n               \"to\":[\r\n                  \r\n               ],\r\n               \"type\":\"rss-item\",\r\n               \"typeDescription\":\"RSS item\"\r\n            },\r\n            \"evaluateClassifications\":[\r\n               {\r\n                  \"classificationName\":\"PERSONAL_PROFESSIONAL_CLASSIFICATION\",\r\n                  \"classificationOptions\":[\r\n                     \"personal\",\r\n                     \"professional\"\r\n                  ],\r\n                  \"classificationValue\":\"personal\"\r\n               },\r\n               {\r\n                  \"classificationName\":\"PRIORITY_CLASSIFICATION\",\r\n                  \"classificationOptions\":[\r\n                     \"general\",\r\n                     \"high\"\r\n                  ],\r\n                  \"classificationValue\":\"general\"\r\n               }\r\n            ],\r\n            \"evaluateSourceChannel\":\"The Register - Offbeat\",\r\n            \"evaluateSourceOriginator\":\"The Register - Offbeat\",\r\n            \"evaluateSourceType\":\"RSS item\",\r\n            \"evaluateText\":\"<h4>Commission official insists it has to protect itself against US subsidies</h4> <p>Moves to fight off a new \\\"rules of origin\\\" edict that some electric vehicle automakers claim could shut down their operations in the UK aren\\\\'t going anywhere, judging by the words of a senior Euro Commish official.…</p> <p><!--#include virtual=\\\\'/data_centre/_whitepaper_textlinks_top.html\\\\' --></p>\",\r\n            \"evaluateTime\":\"2023-07-10T09:40:55.7254672+02:00\",\r\n            \"evaluateTitle\":\"Post-Brexit tariffs on cross EU-UK electrical vehicle imports still going ahead\"\r\n         },\r\n         {\r\n            \"contentItemSummary\":{\r\n               \"augmentations\":{\r\n                  \"labelsMulti\":{\r\n                     \r\n                  },\r\n                  \"labelsSingle\":{\r\n                     \"PRIORITY_CLASSIFICATION\":\"high\",\r\n                     \"PERSONAL_PROFESSIONAL_CLASSIFICATION\":\"professional\"\r\n                  },\r\n                  \"summaryText\":\"Test message\"\r\n               },\r\n               \"body\":\"Test message\",\r\n               \"channel\":\"corp-chat-general\",\r\n               \"date\":\"2023-07-10T07:42:26.018Z\",\r\n               \"from\":{\r\n                  \"type\":\"rfc822\",\r\n                  \"address\":\"slack.com\",\r\n                  \"personal\":\"dmg\",\r\n                  \"group\":false\r\n               },\r\n               \"itemId\":\"xx-{{randomString}}-3\",\r\n               \"itemUrl\":\"https://awag-scratch.slack.com/archives/C054RJVQ7DM/p1688974946017689\",\r\n               \"originator\":\"dmg <slack.com>\",\r\n               \"prominence\":\"LOW\",\r\n               \"providerDescription\":\"\",\r\n               \"providerName\":\"Awareness Agent (Scratch)\",\r\n               \"providerUrl\":\"https://awag-scratch.slack.com/\",\r\n               \"to\":[\r\n                  {\r\n                     \"type\":\"rfc822\",\r\n                     \"address\":\"C054RJVQ7DM\",\r\n                     \"personal\":\"corp-chat-general\",\r\n                     \"group\":false\r\n                  }\r\n               ],\r\n               \"type\":\"message\",\r\n               \"typeDescription\":\"Slack message\"\r\n            },\r\n            \"evaluateClassifications\":[\r\n               {\r\n                  \"classificationName\":\"PERSONAL_PROFESSIONAL_CLASSIFICATION\",\r\n                  \"classificationOptions\":[\r\n                     \"personal\",\r\n                     \"professional\"\r\n                  ],\r\n                  \"classificationValue\":\"professional\"\r\n               },\r\n               {\r\n                  \"classificationName\":\"PRIORITY_CLASSIFICATION\",\r\n                  \"classificationOptions\":[\r\n                     \"general\",\r\n                     \"high\"\r\n                  ],\r\n                  \"classificationValue\":\"high\"\r\n               }\r\n            ],\r\n            \"evaluateSourceChannel\":\"corp-chat-general\",\r\n            \"evaluateSourceOriginator\":\"dmg <slack.com>\",\r\n            \"evaluateSourceType\":\"Slack message\",\r\n            \"evaluateText\":\"Test message\",\r\n            \"evaluateTime\":\"2023-07-10T09:42:29.0387854+02:00\"\r\n         }\r\n      ],\r\n      \"openaiApiCompletionsQueryInfo\":{\r\n         \"maxTokens\":1200,\r\n         \"model\":\"text-davinci-003\",\r\n         \"promptText\":\"Please role play a persona for the purposes of evaluating a software system.  The software system is intended to manage a user\\\\'s incoming information from multiple sources - including work and personal - so that the user is not overwhelmed or distracted.  Consider it a personal information triage service.\\n\\nYou will be provided the items to evaluate in a structured form like:\\n\\n{\\n   \\\"persona\\\":{\\n      \\\"name\\\":\\\"Persona Name\\\",\\n      \\\"text\\\":\\\"Description of the persona to use\\\"\\n   },\\n   \\\"perspectives\\\":[\\n      {\\n         \\\"id\\\":\\\"Perspective ID\\\",\\n         \\\"name\\\":\\\"Perspective Name\\\",\\n         \\\"text\\\":\\\"Description of the perspective to apply\\\"\\n      }\\n   ],\\n   \\\"items\\\":[\\n      {\\n         \\\"itemId\\\":\\\"abcd1234\\\",\\n         \\\"sent\\\":\\\"2023-07-03T18:52:09.419Z\\\",\\n         \\\"title\\\":\\\"Title of item (optional)\\\",\\n         \\\"summary\\\":\\\"Short text describing the content of the item to evaluate\\\",\\n         \\\"source\\\":{\\n            \\\"type\\\":\\\"RSS Item\\\",\\n            \\\"originator\\\":\\\"The originator of the content\\\",\\n            \\\"channel\\\":\\\"The channel, list, address etc that content was sent to\\\"\\n         },\\n         \\\"classifications\\\":[{\\n            \\\"name\\\":\\\"personal-professional\\\",\\n            \\\"selected\\\":\\\"professional\\\",\\n            \\\"available\\\":[\\n               \\\"personal\\\",\\n               \\\"professional\\\"\\n            ]\\n         }]\\n      }\\n   ]\\n}\\n\\nThe items to evaluate are contained in the top level \\\\'items\\\\' array.  You should consider each item in the role of the persona that is defined in the \\\\'persona\\\\' property.\\n\\nEach item contains a number of classifications made by the software system that you must evaluate.  You should consider each classification from each of the provided perspectives, which will tell you to focus your reply on a specific aspect of the item and how it has been classified.  Your answer should be how your persona would rate that item classification in the context of the perspective.  The list of perspectives that you should apply is defined in the \\\\'perspective\\\\' property of the input JSON.\\n\\nThe content of an item is contained in the \\\\'title\\\\' and \\\\'summary\\\\' fields, and \\\\'sent\\\\' provides context for time of day and day of week.  When evaluating an item classification you should consider the item, as represented by these fields, has been assigned an appropriate classification, as seen by your persona in the context of each perspective.\\n\\nThe \\\\'classification\\\\' property shows how the system has classified this item, which is shown in the \\\\'selected\\\\' property of this object.  The \\\\'available\\\\' object lists the possible classifications that the system could have choosen from.  Note that a \\\\'selected\\\\' value of \\\"none\\\", \\\"not\\\" or null is a special case, meaning that the system decided to classify the item as not being of interest - take this into consideration also.\\n\\nThe \\\\'source\\\\' property describes where the item came from, which will vary according to the type of object - for example for a Slack item, \\\\'channel\\\\' will refer to the slack channel the item was originally sent to, whereas for an RSS item, \\\\'channel\\\\' will refer to the RSS feed.  Similarly, \\\\'originator\\\\' could be an email address, RSS publisher, Slack user etc.\\n\\n\\nYou should reply using JSON, one array entry per item evaluated, with the following structure:\\n\\n[\\n   {\\n      \\\"itemId\\\":\\\"abcd1234\\\",\\n      \\\"evaluations\\\":[\\n         {\\n            \\\"classificationName\\\":\\\"Classification Name 1\\\",\\n            \\\"perspectives\\\":[\\n               {\\n                  \\\"perspectiveId\\\":\\\"Perspective ID\\\",\\n                  \\\"evaluationLikert\\\":\\\"1\\\",\\n                  \\\"evaluationText\\\":\\\"Textual description of the evaluation\\\"\\n               }\\n            ]\\n         }\\n      ]\\n   }\\n]\\n\\nThe \\\\'evaluations\\\\' array for each item should contain an object for every classification evaluated for the item, within this the \\\\'perspectives\\\\' array should contain the results for the individual perspectives evaluated for that classification.  It is expected that each item may have multiple classifications and the response array must contain entries for all of them.\\n\\nReturn only a valid JSON object with the above structure, with no additional text.\\n\\nThe \\\\'evaluationLikert\\\\' field should be a likert scale ranging from 1 (not at all in agreement with the perspective) to 5 (absolutely in agreement).  The \\\\'evaluationText\\\\' field should contain text that elaborates on or explains your rating.\\n\\nThe persona I want you to adopt is defined in the persona property of the provided JSON.  You should use the \\\\'text\\\\' property of this as your persona.\\n\\nThe item to evaluate is:\\n{persona:{name:\\\\'John Johnson\\\\',text:\\\\'A busy IT executive who needs to know about problems and issues in his company the moment they happen around the clock but is not interested in non-urgent content\\\\'},perspectives:[{id:\\\\'intrusiveness-1\\\\',name:\\\\'Intrusiveness\\\\',text:\\\\'How approprate is it to get an intrusive alert about this item, such as a notification on my mobile phone?\\\\'},{id:\\\\'classification-1\\\\',name:\\\\'Classification\\\\',text:\\\\'Has this item been correctly classified out of the available options?\\\\'}],items:[{itemId:\\\\'9b651c92-c039-4d74-8632-bb27d29d2cfe\\\\',sent:\\\\'2023-07-10T09:40:53.370Z\\\\',title:\\\\'NASA \\\\\\\\'quiet\\\\\\\\' supersonic jet is nearly ready for flight\\\\',summary:\\\\'<h4>If it works, the X-59 could enable a new era of commercial supersonic travel that doesn\\\\\\\\'t shatter windows</h4> <p>NASA\\\\\\\\'s mission to create a supersonic aircraft that doesn\\\\\\\\'t rattle windows and vibrate teeth is one step closer to reality as the experimental X-59 aircraft dubbed the \\\"Son of Concorde\\\" may soon be ready for its first test flights.…</p>\\\\',source:{type:\\\\'RSS item\\\\',originator:\\\\'The Register - Offbeat\\\\',channel:\\\\'The Register - Offbeat\\\\'},classifications:[{name:\\\\'PERSONAL_PROFESSIONAL_CLASSIFICATION\\\\',selected:\\\\'personal\\\\',available:[\\\\'personal\\\\',\\\\'professional\\\\']},{name:\\\\'PRIORITY_CLASSIFICATION\\\\',selected:\\\\'general\\\\',available:[\\\\'general\\\\',\\\\'high\\\\']}]},{itemId:\\\\'24adb959-20ea-41ef-a042-15e249962593\\\\',sent:\\\\'2023-07-10T09:40:55.725Z\\\\',title:\\\\'Post-Brexit tariffs on cross EU-UK electrical vehicle imports still going ahead\\\\',summary:\\\\'<h4>Commission official insists it has to protect itself against US subsidies</h4> <p>Moves to fight off a new \\\"rules of origin\\\" edict that some electric vehicle automakers claim could shut down their operations in the UK aren\\\\\\\\'t going anywhere, judging by the words of a senior Euro Commish official.…</p> <p><!--#include virtual=\\\\\\\\'/data_centre/_whitepaper_textlinks_top.html\\\\\\\\' --></p>\\\\',source:{type:\\\\'RSS item\\\\',originator:\\\\'The Register - Offbeat\\\\',channel:\\\\'The Register - Offbeat\\\\'},classifications:[{name:\\\\'PERSONAL_PROFESSIONAL_CLASSIFICATION\\\\',selected:\\\\'personal\\\\',available:[\\\\'personal\\\\',\\\\'professional\\\\']},{name:\\\\'PRIORITY_CLASSIFICATION\\\\',selected:\\\\'general\\\\',available:[\\\\'general\\\\',\\\\'high\\\\']}]},{itemId:\\\\'c9dd6b22-5c3b-44dd-a283-43e3416e8fb0\\\\',sent:\\\\'2023-07-10T09:42:29.038Z\\\\',title:null,summary:\\\\'Test message\\\\',source:{type:\\\\'Slack message\\\\',originator:\\\\'dmg <slack.com>\\\\',channel:\\\\'corp-chat-general\\\\'},classifications:[{name:\\\\'PERSONAL_PROFESSIONAL_CLASSIFICATION\\\\',selected:\\\\'professional\\\\',available:[\\\\'personal\\\\',\\\\'professional\\\\']},{name:\\\\'PRIORITY_CLASSIFICATION\\\\',selected:\\\\'high\\\\',available:[\\\\'general\\\\',\\\\'high\\\\']}]}]}\\n\",\r\n         \"temperature\":0.6,\r\n         \"promptQueryJson\":{\r\n            \"persona\":{\r\n               \"name\":\"John Johnson\",\r\n               \"text\":\"A busy IT executive who needs to know about problems and issues in his company the moment they happen around the clock but is not interested in non-urgent content\"\r\n            },\r\n            \"perspectives\":[\r\n               {\r\n                  \"id\":\"intrusiveness-1\",\r\n                  \"name\":\"Intrusiveness\",\r\n                  \"text\":\"How approprate is it to get an intrusive alert about this item, such as a notification on my mobile phone?\"\r\n               },\r\n               {\r\n                  \"id\":\"classification-1\",\r\n                  \"name\":\"Classification\",\r\n                  \"text\":\"Has this item been correctly classified out of the available options?\"\r\n               }\r\n            ],\r\n            \"items\":[\r\n               {\r\n                  \"itemId\":\"xx-{{randomString}}-1\",\r\n                  \"sent\":\"2023-07-10T09:40:53.370Z\",\r\n                  \"title\":\"NASA \\\\'quiet\\\\' supersonic jet is nearly ready for flight\",\r\n                  \"summary\":\"<h4>If it works, the X-59 could enable a new era of commercial supersonic travel that doesn\\\\'t shatter windows</h4> <p>NASA\\\\'s mission to create a supersonic aircraft that doesn\\\\'t rattle windows and vibrate teeth is one step closer to reality as the experimental X-59 aircraft dubbed the \\\"Son of Concorde\\\" may soon be ready for its first test flights.…</p>\",\r\n                  \"source\":{\r\n                     \"type\":\"RSS item\",\r\n                     \"originator\":\"The Register - Offbeat\",\r\n                     \"channel\":\"The Register - Offbeat\"\r\n                  },\r\n                  \"classifications\":[\r\n                     {\r\n                        \"name\":\"PERSONAL_PROFESSIONAL_CLASSIFICATION\",\r\n                        \"selected\":\"personal\",\r\n                        \"available\":[\r\n                           \"personal\",\r\n                           \"professional\"\r\n                        ]\r\n                     },\r\n                     {\r\n                        \"name\":\"PRIORITY_CLASSIFICATION\",\r\n                        \"selected\":\"general\",\r\n                        \"available\":[\r\n                           \"general\",\r\n                           \"high\"\r\n                        ]\r\n                     }\r\n                  ]\r\n               },\r\n               {\r\n                  \"itemId\":\"xx-{{randomString}}-2\",\r\n                  \"sent\":\"2023-07-10T09:40:55.725Z\",\r\n                  \"title\":\"Post-Brexit tariffs on cross EU-UK electrical vehicle imports still going ahead\",\r\n                  \"summary\":\"<h4>Commission official insists it has to protect itself against US subsidies</h4> <p>Moves to fight off a new \\\"rules of origin\\\" edict that some electric vehicle automakers claim could shut down their operations in the UK aren\\\\'t going anywhere, judging by the words of a senior Euro Commish official.…</p> <p><!--#include virtual=\\\\'/data_centre/_whitepaper_textlinks_top.html\\\\' --></p>\",\r\n                  \"source\":{\r\n                     \"type\":\"RSS item\",\r\n                     \"originator\":\"The Register - Offbeat\",\r\n                     \"channel\":\"The Register - Offbeat\"\r\n                  },\r\n                  \"classifications\":[\r\n                     {\r\n                        \"name\":\"PERSONAL_PROFESSIONAL_CLASSIFICATION\",\r\n                        \"selected\":\"personal\",\r\n                        \"available\":[\r\n                           \"personal\",\r\n                           \"professional\"\r\n                        ]\r\n                     },\r\n                     {\r\n                        \"name\":\"PRIORITY_CLASSIFICATION\",\r\n                        \"selected\":\"general\",\r\n                        \"available\":[\r\n                           \"general\",\r\n                           \"high\"\r\n                        ]\r\n                     }\r\n                  ]\r\n               },\r\n               {\r\n                  \"itemId\":\"xx-{{randomString}}-3\",\r\n                  \"sent\":\"2023-07-10T09:42:29.038Z\",\r\n                  \"title\":null,\r\n                  \"summary\":\"Test message\",\r\n                  \"source\":{\r\n                     \"type\":\"Slack message\",\r\n                     \"originator\":\"dmg <slack.com>\",\r\n                     \"channel\":\"corp-chat-general\"\r\n                  },\r\n                  \"classifications\":[\r\n                     {\r\n                        \"name\":\"PERSONAL_PROFESSIONAL_CLASSIFICATION\",\r\n                        \"selected\":\"professional\",\r\n                        \"available\":[\r\n                           \"personal\",\r\n                           \"professional\"\r\n                        ]\r\n                     },\r\n                     {\r\n                        \"name\":\"PRIORITY_CLASSIFICATION\",\r\n                        \"selected\":\"high\",\r\n                        \"available\":[\r\n                           \"general\",\r\n                           \"high\"\r\n                        ]\r\n                     }\r\n                  ]\r\n               }\r\n            ]\r\n         }\r\n      },\r\n      \"queryState\":{\r\n         \"id\":\"cmpl-{{randomString}}\",\r\n         \"object\":\"text_completion\",\r\n         \"created\":1688974949,\r\n         \"model\":\"text-davinci-003\",\r\n         \"usage\":{\r\n            \"prompt_tokens\":1782,\r\n            \"completion_tokens\":791,\r\n            \"total_tokens\":2573\r\n         },\r\n         \"finish_reason\":\"stop\"\r\n      }\r\n   }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_prefix}}/api/v1/awag/data/eval/record-evaluation-data",
					"host": [
						"{{url_prefix}}"
					],
					"path": [
						"api",
						"v1",
						"awag",
						"data",
						"eval",
						"record-evaluation-data"
					]
				}
			},
			"response": []
		},
		{
			"name": "AwAgData Record Evaluation Failure",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"function randomString(minValue, maxValue, dataSet = 'abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ') {\r",
							"    if (!minValue) {\r",
							"        minValue = 20;\r",
							"        maxValue = 20;\r",
							"    }\r",
							"\r",
							"    if (!maxValue) {\r",
							"        maxValue = minValue;\r",
							"    }\r",
							"\r",
							"    let length = _.random(minValue, maxValue),\r",
							"        randomString = \"\";\r",
							"\r",
							"    for (let i = 0; i < length; i++)\r",
							"        randomString += dataSet.charAt(Math.floor(Math.random() * dataSet.length));\r",
							"    return randomString;\r",
							"}\r",
							"\r",
							"pm.variables.set('randomString', randomString());\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{agent-id-test-1}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "eb059f77-bb22-4dde-9607-{{agent_id_test_1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"agent\":\"{{agent_id}}\",\r\n   \"queryState\":{\r\n      \"id\":\"{{randomString}}\",\r\n      \"object\":\"text_completion\",\r\n      \"created\":1689074821,\r\n      \"model\":\"text-davinci-003\",\r\n      \"usage\":{\r\n         \"prompt_tokens\":2623,\r\n         \"completion_tokens\":1200,\r\n         \"total_tokens\":3823\r\n      },\r\n      \"finish_reason\":\"length\"\r\n   },\r\n   \"maxTokens\":1200,\r\n   \"model\":\"text-davinci-003\",\r\n   \"promptQueryJson\":{\r\n      \"persona\":{\r\n         \"name\":\"John Johnson\",\r\n         \"text\":\"A busy IT executive who needs to know about problems and issues in his company the moment they happen around the clock but is not interested in non-urgent content\"\r\n      },\r\n      \"perspectives\":[\r\n         {\r\n            \"id\":\"intrusiveness-1\",\r\n            \"name\":\"Intrusiveness\",\r\n            \"text\":\"How approprate is it to get an intrusive alert about this item, such as a notification on my mobile phone?\"\r\n         },\r\n         {\r\n            \"id\":\"classification-1\",\r\n            \"name\":\"Classification\",\r\n            \"text\":\"Has this item been correctly classified out of the available options?\"\r\n         }\r\n      ],\r\n      \"items\":[\r\n         {\r\n            \"itemId\":\"26ba22e4-92f4-4c8d-95ba-2b771acd25ca\",\r\n            \"sent\":\"2023-07-11T13:26:23.537Z\",\r\n            \"title\":\"Starlink satellites leak astronomy-disturbing EM radiation, say boffins\",\r\n            \"summary\":\"<h4>The light pollution problem is so 2022</h4> <p>Nevermind the light pollution – the ever-growing swarm of Starlink satellites orbiting Earth are creating a fresh unknown problem for astronomers: They\\\\'re leaking electromagnetic radiation. …</p>\",\r\n            \"source\":{\r\n               \"type\":\"RSS item\",\r\n               \"originator\":\"The Register - Offbeat\",\r\n               \"channel\":\"The Register - Offbeat\"\r\n            },\r\n            \"classifications\":[\r\n               {\r\n                  \"name\":\"PERSONAL_PROFESSIONAL_CLASSIFICATION\",\r\n                  \"selected\":\"professional\",\r\n                  \"available\":[\r\n                     \"personal\",\r\n                     \"professional\"\r\n                  ]\r\n               },\r\n               {\r\n                  \"name\":\"PRIORITY_CLASSIFICATION\",\r\n                  \"selected\":\"high\",\r\n                  \"available\":[\r\n                     \"general\",\r\n                     \"high\"\r\n                  ]\r\n               }\r\n            ]\r\n         },\r\n         {\r\n            \"itemId\":\"54136ee6-e016-4880-99eb-41c20c4dbe19\",\r\n            \"sent\":\"2023-07-11T13:26:25.212Z\",\r\n            \"title\":\"Musk sues law firm for overcharging Twitter when Twitter was suing Musk\",\r\n            \"summary\":\"<h4>X Corp boss invokes spirit of \\\\'Cops arrest man for burning Burning Man man\\\\'</h4> <p>Elon Musk is suing the lawyers who were representing Twitter when it sued him for trying to abandon his $44 billion takeover offer in 2022. Now the bill is due for suing himself, Musk, as owner of the social media platform, says it is too damn high.…</p>\",\r\n            \"source\":{\r\n               \"type\":\"RSS item\",\r\n               \"originator\":\"The Register - Offbeat\",\r\n               \"channel\":\"The Register - Offbeat\"\r\n            },\r\n            \"classifications\":[\r\n               {\r\n                  \"name\":\"PERSONAL_PROFESSIONAL_CLASSIFICATION\",\r\n                  \"selected\":\"professional\",\r\n                  \"available\":[\r\n                     \"personal\",\r\n                     \"professional\"\r\n                  ]\r\n               },\r\n               {\r\n                  \"name\":\"PRIORITY_CLASSIFICATION\",\r\n                  \"selected\":\"high\",\r\n                  \"available\":[\r\n                     \"general\",\r\n                     \"high\"\r\n                  ]\r\n               }\r\n            ]\r\n         },\r\n         {\r\n            \"itemId\":\"d59c2c1e-2365-452c-8333-3f40c5844ae1\",\r\n            \"sent\":\"2023-07-11T13:26:26.951Z\",\r\n            \"title\":\"Man who nearly killed physical media returns with $60,000 vinyl turntable\",\r\n            \"summary\":\"<h4>Ive got a bad feeling about this</h4> <p>There must have been a time when Apple thought that anything Sir Jony Ive touched turned to gold. Now luxury hi-fi manufacturer Linn will be hoping the same – with a £50,000 ($64,000) turntable dreamed up by Cupertino\\\\'s former design whiz.…</p>\",\r\n            \"source\":{\r\n               \"type\":\"RSS item\",\r\n               \"originator\":\"The Register - Offbeat\",\r\n               \"channel\":\"The Register - Offbeat\"\r\n            },\r\n            \"classifications\":[\r\n               {\r\n                  \"name\":\"PERSONAL_PROFESSIONAL_CLASSIFICATION\",\r\n                  \"selected\":\"professional\",\r\n                  \"available\":[\r\n                     \"personal\",\r\n                     \"professional\"\r\n                  ]\r\n               },\r\n               {\r\n                  \"name\":\"PRIORITY_CLASSIFICATION\",\r\n                  \"selected\":\"high\",\r\n                  \"available\":[\r\n                     \"general\",\r\n                     \"high\"\r\n                  ]\r\n               }\r\n            ]\r\n         },\r\n         {\r\n            \"itemId\":\"4a6acd87-b1bd-4334-8957-263080a10394\",\r\n            \"sent\":\"2023-07-11T13:26:28.560Z\",\r\n            \"title\":\"NASA humanoid robot to be tested as remote oil rig attendant\",\r\n            \"summary\":\"<h4>Doing the dirty work for Australia\\\\'s Woodside Energy will help prepare bot for work in space</h4> <p>NASA announced on Friday its humanoid robot, Valkyrie, is headed to Western Australia, where Perth-based Woodside Energy will put it through its paces with a view to \\\"remote caretaking of uncrewed and offshore energy facilities.\\\"…</p>\",\r\n            \"source\":{\r\n               \"type\":\"RSS item\",\r\n               \"originator\":\"The Register - Offbeat\",\r\n               \"channel\":\"The Register - Offbeat\"\r\n            },\r\n            \"classifications\":[\r\n               {\r\n                  \"name\":\"PERSONAL_PROFESSIONAL_CLASSIFICATION\",\r\n                  \"selected\":\"professional\",\r\n                  \"available\":[\r\n                     \"personal\",\r\n                     \"professional\"\r\n                  ]\r\n               },\r\n               {\r\n                  \"name\":\"PRIORITY_CLASSIFICATION\",\r\n                  \"selected\":\"high\",\r\n                  \"available\":[\r\n                     \"general\",\r\n                     \"high\"\r\n                  ]\r\n               }\r\n            ]\r\n         },\r\n         {\r\n            \"itemId\":\"049fafc3-8369-4de9-8df5-1016b30d5466\",\r\n            \"sent\":\"2023-07-11T13:26:47.730Z\",\r\n            \"title\":null,\r\n            \"summary\":\"t1\",\r\n            \"source\":{\r\n               \"type\":\"Slack message\",\r\n               \"originator\":\"dmg <slack.com>\",\r\n               \"channel\":\"corp-chat-general\"\r\n            },\r\n            \"classifications\":[\r\n               {\r\n                  \"name\":\"PERSONAL_PROFESSIONAL_CLASSIFICATION\",\r\n                  \"selected\":\"personal\",\r\n                  \"available\":[\r\n                     \"personal\",\r\n                     \"professional\"\r\n                  ]\r\n               },\r\n               {\r\n                  \"name\":\"PRIORITY_CLASSIFICATION\",\r\n                  \"selected\":\"general\",\r\n                  \"available\":[\r\n                     \"general\",\r\n                     \"high\"\r\n                  ]\r\n               }\r\n            ]\r\n         },\r\n         {\r\n            \"itemId\":\"ab00a8ae-8ec1-494a-b541-17d2632454a4\",\r\n            \"sent\":\"2023-07-11T13:26:49.727Z\",\r\n            \"title\":null,\r\n            \"summary\":\"t3\",\r\n            \"source\":{\r\n               \"type\":\"Slack message\",\r\n               \"originator\":\"dmg <slack.com>\",\r\n               \"channel\":\"corp-chat-general\"\r\n            },\r\n            \"classifications\":[\r\n               {\r\n                  \"name\":\"PERSONAL_PROFESSIONAL_CLASSIFICATION\",\r\n                  \"selected\":\"personal\",\r\n                  \"available\":[\r\n                     \"personal\",\r\n                     \"professional\"\r\n                  ]\r\n               },\r\n               {\r\n                  \"name\":\"PRIORITY_CLASSIFICATION\",\r\n                  \"selected\":\"general\",\r\n                  \"available\":[\r\n                     \"general\",\r\n                     \"high\"\r\n                  ]\r\n               }\r\n            ]\r\n         },\r\n         {\r\n            \"itemId\":\"14276d47-25b8-4c33-a032-9eb7de24a3a1\",\r\n            \"sent\":\"2023-07-11T13:26:51.274Z\",\r\n            \"title\":null,\r\n            \"summary\":\"t5\",\r\n            \"source\":{\r\n               \"type\":\"Slack message\",\r\n               \"originator\":\"dmg <slack.com>\",\r\n               \"channel\":\"corp-chat-general\"\r\n            },\r\n            \"classifications\":[\r\n               {\r\n                  \"name\":\"PERSONAL_PROFESSIONAL_CLASSIFICATION\",\r\n                  \"selected\":\"personal\",\r\n                  \"available\":[\r\n                     \"personal\",\r\n                     \"professional\"\r\n                  ]\r\n               },\r\n               {\r\n                  \"name\":\"PRIORITY_CLASSIFICATION\",\r\n                  \"selected\":\"general\",\r\n                  \"available\":[\r\n                     \"general\",\r\n                     \"high\"\r\n                  ]\r\n               }\r\n            ]\r\n         },\r\n         {\r\n            \"itemId\":\"56fa2a9a-2fab-4044-b093-268c5f1dc5e4\",\r\n            \"sent\":\"2023-07-11T13:27:00.820Z\",\r\n            \"title\":null,\r\n            \"summary\":\"t6\",\r\n            \"source\":{\r\n               \"type\":\"Slack message\",\r\n               \"originator\":\"dmg <slack.com>\",\r\n               \"channel\":\"corp-chat-general\"\r\n            },\r\n            \"classifications\":[\r\n               {\r\n                  \"name\":\"PERSONAL_PROFESSIONAL_CLASSIFICATION\",\r\n                  \"selected\":\"personal\",\r\n                  \"available\":[\r\n                     \"personal\",\r\n                     \"professional\"\r\n                  ]\r\n               },\r\n               {\r\n                  \"name\":\"PRIORITY_CLASSIFICATION\",\r\n                  \"selected\":\"general\",\r\n                  \"available\":[\r\n                     \"general\",\r\n                     \"high\"\r\n                  ]\r\n               }\r\n            ]\r\n         }\r\n      ]\r\n   },\r\n   \"promptText\":\"Please role play a persona for the purposes of evaluating a software system.  The software system is intended to manage a user\\\\'s incoming information from multiple sources - including work and personal - so that the user is not overwhelmed or distracted.  Consider it a personal information triage service.\\n\\nYou will be provided the items to evaluate in a structured form like:\\n\\n{\\n   \\\"persona\\\":{\\n      \\\"name\\\":\\\"Persona Name\\\",\\n      \\\"text\\\":\\\"Description of the persona to use\\\"\\n   },\\n   \\\"perspectives\\\":[\\n      {\\n         \\\"id\\\":\\\"Perspective ID\\\",\\n         \\\"name\\\":\\\"Perspective Name\\\",\\n         \\\"text\\\":\\\"Description of the perspective to apply\\\"\\n      }\\n   ],\\n   \\\"items\\\":[\\n      {\\n         \\\"itemId\\\":\\\"abcd1234\\\",\\n         \\\"sent\\\":\\\"2023-07-03T18:52:09.419Z\\\",\\n         \\\"title\\\":\\\"Title of item (optional)\\\",\\n         \\\"summary\\\":\\\"Short text describing the content of the item to evaluate\\\",\\n         \\\"source\\\":{\\n            \\\"type\\\":\\\"RSS Item\\\",\\n            \\\"originator\\\":\\\"The originator of the content\\\",\\n            \\\"channel\\\":\\\"The channel, list, address etc that content was sent to\\\"\\n         },\\n         \\\"classifications\\\":[{\\n            \\\"name\\\":\\\"personal-professional\\\",\\n            \\\"selected\\\":\\\"professional\\\",\\n            \\\"available\\\":[\\n               \\\"personal\\\",\\n               \\\"professional\\\"\\n            ]\\n         }]\\n      }\\n   ]\\n}\\n\\nThe items to evaluate are contained in the top level \\\\'items\\\\' array.  You should consider each item in the role of the persona that is defined in the \\\\'persona\\\\' property.\\n\\nEach item contains a number of classifications made by the software system that you must evaluate.  You should consider each classification from each of the provided perspectives, which will tell you to focus your reply on a specific aspect of the item and how it has been classified.  Your answer should be how your persona would rate that item classification in the context of the perspective.  The list of perspectives that you should apply is defined in the \\\\'perspective\\\\' property of the input JSON.\\n\\nThe content of an item is contained in the \\\\'title\\\\' and \\\\'summary\\\\' fields, and \\\\'sent\\\\' provides context for time of day and day of week.  When evaluating an item classification you should consider the item, as represented by these fields, has been assigned an appropriate classification, as seen by your persona in the context of each perspective.\\n\\nThe \\\\'classification\\\\' property shows how the system has classified this item, which is shown in the \\\\'selected\\\\' property of this object.  The \\\\'available\\\\' object lists the possible classifications that the system could have choosen from.  Note that a \\\\'selected\\\\' value of \\\"none\\\", \\\"not\\\" or null is a special case, meaning that the system decided to classify the item as not being of interest - take this into consideration also.\\n\\nThe \\\\'source\\\\' property describes where the item came from, which will vary according to the type of object - for example for a Slack item, \\\\'channel\\\\' will refer to the slack channel the item was originally sent to, whereas for an RSS item, \\\\'channel\\\\' will refer to the RSS feed.  Similarly, \\\\'originator\\\\' could be an email address, RSS publisher, Slack user etc.\\n\\n\\nYou should reply using JSON, one array entry per item evaluated, with the following structure:\\n\\n[\\n   {\\n      \\\"itemId\\\":\\\"abcd1234\\\",\\n      \\\"evaluations\\\":[\\n         {\\n            \\\"classificationName\\\":\\\"Classification Name 1\\\",\\n            \\\"perspectives\\\":[\\n               {\\n                  \\\"perspectiveId\\\":\\\"Perspective ID\\\",\\n                  \\\"evaluationLikert\\\":\\\"1\\\",\\n                  \\\"evaluationText\\\":\\\"Textual description of the evaluation\\\"\\n               }\\n            ]\\n         }\\n      ]\\n   }\\n]\\n\\nThe \\\\'evaluations\\\\' array for each item should contain an object for every classification evaluated for the item, within this the \\\\'perspectives\\\\' array should contain the results for the individual perspectives evaluated for that classification.  It is expected that each item may have multiple classifications and the response array must contain entries for all of them.\\n\\nReturn only a valid JSON object with the above structure, with no additional text.\\n\\nThe \\\\'evaluationLikert\\\\' field should be a likert scale ranging from 1 (not at all in agreement with the perspective) to 5 (absolutely in agreement).  The \\\\'evaluationText\\\\' field should contain text that elaborates on or explains your rating.\\n\\nThe persona I want you to adopt is defined in the persona property of the provided JSON.  You should use the \\\\'text\\\\' property of this as your persona.\\n\\nThe item to evaluate is:\\n{persona:{name:\\\\'John Johnson\\\\',text:\\\\'A busy IT executive who needs to know about problems and issues in his company the moment they happen around the clock but is not interested in non-urgent content\\\\'},perspectives:[{id:\\\\'intrusiveness-1\\\\',name:\\\\'Intrusiveness\\\\',text:\\\\'How approprate is it to get an intrusive alert about this item, such as a notification on my mobile phone?\\\\'},{id:\\\\'classification-1\\\\',name:\\\\'Classification\\\\',text:\\\\'Has this item been correctly classified out of the available options?\\\\'}],items:[{itemId:\\\\'26ba22e4-92f4-4c8d-95ba-2b771acd25ca\\\\',sent:\\\\'2023-07-11T13:26:23.537Z\\\\',title:\\\\'Starlink satellites leak astronomy-disturbing EM radiation, say boffins\\\\',summary:\\\\'<h4>The light pollution problem is so 2022</h4> <p>Nevermind the light pollution – the ever-growing swarm of Starlink satellites orbiting Earth are creating a fresh unknown problem for astronomers: They\\\\\\\\'re leaking electromagnetic radiation. …</p>\\\\',source:{type:\\\\'RSS item\\\\',originator:\\\\'The Register - Offbeat\\\\',channel:\\\\'The Register - Offbeat\\\\'},classifications:[{name:\\\\'PERSONAL_PROFESSIONAL_CLASSIFICATION\\\\',selected:\\\\'professional\\\\',available:[\\\\'personal\\\\',\\\\'professional\\\\']},{name:\\\\'PRIORITY_CLASSIFICATION\\\\',selected:\\\\'high\\\\',available:[\\\\'general\\\\',\\\\'high\\\\']}]},{itemId:\\\\'54136ee6-e016-4880-99eb-41c20c4dbe19\\\\',sent:\\\\'2023-07-11T13:26:25.212Z\\\\',title:\\\\'Musk sues law firm for overcharging Twitter when Twitter was suing Musk\\\\',summary:\\\\'<h4>X Corp boss invokes spirit of \\\\\\\\'Cops arrest man for burning Burning Man man\\\\\\\\'</h4> <p>Elon Musk is suing the lawyers who were representing Twitter when it sued him for trying to abandon his $44 billion takeover offer in 2022. Now the bill is due for suing himself, Musk, as owner of the social media platform, says it is too damn high.…</p>\\\\',source:{type:\\\\'RSS item\\\\',originator:\\\\'The Register - Offbeat\\\\',channel:\\\\'The Register - Offbeat\\\\'},classifications:[{name:\\\\'PERSONAL_PROFESSIONAL_CLASSIFICATION\\\\',selected:\\\\'professional\\\\',available:[\\\\'personal\\\\',\\\\'professional\\\\']},{name:\\\\'PRIORITY_CLASSIFICATION\\\\',selected:\\\\'high\\\\',available:[\\\\'general\\\\',\\\\'high\\\\']}]},{itemId:\\\\'d59c2c1e-2365-452c-8333-3f40c5844ae1\\\\',sent:\\\\'2023-07-11T13:26:26.951Z\\\\',title:\\\\'Man who nearly killed physical media returns with $60,000 vinyl turntable\\\\',summary:\\\\'<h4>Ive got a bad feeling about this</h4> <p>There must have been a time when Apple thought that anything Sir Jony Ive touched turned to gold. Now luxury hi-fi manufacturer Linn will be hoping the same – with a £50,000 ($64,000) turntable dreamed up by Cupertino\\\\\\\\'s former design whiz.…</p>\\\\',source:{type:\\\\'RSS item\\\\',originator:\\\\'The Register - Offbeat\\\\',channel:\\\\'The Register - Offbeat\\\\'},classifications:[{name:\\\\'PERSONAL_PROFESSIONAL_CLASSIFICATION\\\\',selected:\\\\'professional\\\\',available:[\\\\'personal\\\\',\\\\'professional\\\\']},{name:\\\\'PRIORITY_CLASSIFICATION\\\\',selected:\\\\'high\\\\',available:[\\\\'general\\\\',\\\\'high\\\\']}]},{itemId:\\\\'4a6acd87-b1bd-4334-8957-263080a10394\\\\',sent:\\\\'2023-07-11T13:26:28.560Z\\\\',title:\\\\'NASA humanoid robot to be tested as remote oil rig attendant\\\\',summary:\\\\'<h4>Doing the dirty work for Australia\\\\\\\\'s Woodside Energy will help prepare bot for work in space</h4> <p>NASA announced on Friday its humanoid robot, Valkyrie, is headed to Western Australia, where Perth-based Woodside Energy will put it through its paces with a view to \\\"remote caretaking of uncrewed and offshore energy facilities.\\\"…</p>\\\\',source:{type:\\\\'RSS item\\\\',originator:\\\\'The Register - Offbeat\\\\',channel:\\\\'The Register - Offbeat\\\\'},classifications:[{name:\\\\'PERSONAL_PROFESSIONAL_CLASSIFICATION\\\\',selected:\\\\'professional\\\\',available:[\\\\'personal\\\\',\\\\'professional\\\\']},{name:\\\\'PRIORITY_CLASSIFICATION\\\\',selected:\\\\'high\\\\',available:[\\\\'general\\\\',\\\\'high\\\\']}]},{itemId:\\\\'049fafc3-8369-4de9-8df5-1016b30d5466\\\\',sent:\\\\'2023-07-11T13:26:47.730Z\\\\',title:null,summary:\\\\'t1\\\\',source:{type:\\\\'Slack message\\\\',originator:\\\\'dmg <slack.com>\\\\',channel:\\\\'corp-chat-general\\\\'},classifications:[{name:\\\\'PERSONAL_PROFESSIONAL_CLASSIFICATION\\\\',selected:\\\\'personal\\\\',available:[\\\\'personal\\\\',\\\\'professional\\\\']},{name:\\\\'PRIORITY_CLASSIFICATION\\\\',selected:\\\\'general\\\\',available:[\\\\'general\\\\',\\\\'high\\\\']}]},{itemId:\\\\'ab00a8ae-8ec1-494a-b541-17d2632454a4\\\\',sent:\\\\'2023-07-11T13:26:49.727Z\\\\',title:null,summary:\\\\'t3\\\\',source:{type:\\\\'Slack message\\\\',originator:\\\\'dmg <slack.com>\\\\',channel:\\\\'corp-chat-general\\\\'},classifications:[{name:\\\\'PERSONAL_PROFESSIONAL_CLASSIFICATION\\\\',selected:\\\\'personal\\\\',available:[\\\\'personal\\\\',\\\\'professional\\\\']},{name:\\\\'PRIORITY_CLASSIFICATION\\\\',selected:\\\\'general\\\\',available:[\\\\'general\\\\',\\\\'high\\\\']}]},{itemId:\\\\'14276d47-25b8-4c33-a032-9eb7de24a3a1\\\\',sent:\\\\'2023-07-11T13:26:51.274Z\\\\',title:null,summary:\\\\'t5\\\\',source:{type:\\\\'Slack message\\\\',originator:\\\\'dmg <slack.com>\\\\',channel:\\\\'corp-chat-general\\\\'},classifications:[{name:\\\\'PERSONAL_PROFESSIONAL_CLASSIFICATION\\\\',selected:\\\\'personal\\\\',available:[\\\\'personal\\\\',\\\\'professional\\\\']},{name:\\\\'PRIORITY_CLASSIFICATION\\\\',selected:\\\\'general\\\\',available:[\\\\'general\\\\',\\\\'high\\\\']}]},{itemId:\\\\'56fa2a9a-2fab-4044-b093-268c5f1dc5e4\\\\',sent:\\\\'2023-07-11T13:27:00.820Z\\\\',title:null,summary:\\\\'t6\\\\',source:{type:\\\\'Slack message\\\\',originator:\\\\'dmg <slack.com>\\\\',channel:\\\\'corp-chat-general\\\\'},classifications:[{name:\\\\'PERSONAL_PROFESSIONAL_CLASSIFICATION\\\\',selected:\\\\'personal\\\\',available:[\\\\'personal\\\\',\\\\'professional\\\\']},{name:\\\\'PRIORITY_CLASSIFICATION\\\\',selected:\\\\'general\\\\',available:[\\\\'general\\\\',\\\\'high\\\\']}]}]}\\n\",\r\n   \"contextIdentifier\":\"{{randomString}}\",\r\n   \"evaluationPersona\":{\r\n      \"id\":\"it-exec-1\",\r\n      \"name\":\"John Johnson\",\r\n      \"text\":\"A busy IT executive who needs to know about problems and issues in his company the moment they happen around the clock but is not interested in non-urgent content\"\r\n   },\r\n   \"evaluationPerspectives\":[\r\n      {\r\n         \"id\":\"intrusiveness-1\",\r\n         \"name\":\"Intrusiveness\",\r\n         \"text\":\"How approprate is it to get an intrusive alert about this item, such as a notification on my mobile phone?\"\r\n      },\r\n      {\r\n         \"id\":\"classification-1\",\r\n         \"name\":\"Classification\",\r\n         \"text\":\"Has this item been correctly classified out of the available options?\"\r\n      }\r\n   ],\r\n   \"responseText\":\"{id:\\\\'cmpl-7b5oDZacrdhPwo3QxhhOtd7UBffXI\\\\',object:\\\\'text_completion\\\\',created:1689074821,model:\\\\'text-davinci-003\\\\',choices:[{text:\\\\'\\\\nMy reply is:\\\\n[\\\\n   {\\\\n      \\\"itemId\\\":\\\"26ba22e4-92f4-4c8d-95ba-2b771acd25ca\\\",\\\\n      \\\"evaluations\\\":[\\\\n         {\\\\n            \\\"classificationName\\\":\\\"PERSONAL_PROFESSIONAL_CLASSIFICATION\\\",\\\\n            \\\"perspectives\\\":[\\\\n               {\\\\n                  \\\"perspectiveId\\\":\\\"intrusiveness-1\\\",\\\\n                  \\\"evaluationLikert\\\":\\\"3\\\",\\\\n                  \\\"evaluationText\\\":\\\"As a busy IT executive, this information is important to me, but I don\\\\\\\\'t necessarily need to be alerted to it immediately. A notification on my mobile phone would be intrusive.\\\"\\\\n               },\\\\n               {\\\\n                  \\\"perspectiveId\\\":\\\"classification-1\\\",\\\\n                  \\\"evaluationLikert\\\":\\\"5\\\",\\\\n                  \\\"evaluationText\\\":\\\"This is a professional piece of information and has been correctly classified as such.\\\"\\\\n               }\\\\n            ]\\\\n         },\\\\n         {\\\\n            \\\"classificationName\\\":\\\"PRIORITY_CLASSIFICATION\\\",\\\\n            \\\"perspectives\\\":[\\\\n               {\\\\n                  \\\"perspectiveId\\\":\\\"intrusiveness-1\\\",\\\\n                  \\\"evaluationLikert\\\":\\\"2\\\",\\\\n                  \\\"evaluationText\\\":\\\"The information is important to me, but I don\\\\\\\\'t need to be alerted to it immediately. A notification on my mobile phone would be too intrusive.\\\"\\\\n               },\\\\n               {\\\\n                  \\\"perspectiveId\\\":\\\"classification-1\\\",\\\\n                  \\\"evaluationLikert\\\":\\\"5\\\",\\\\n                  \\\"evaluationText\\\":\\\"This is an important piece of information and has been correctly classified as such.\\\"\\\\n               }\\\\n            ]\\\\n         }\\\\n      ]\\\\n   },\\\\n   {\\\\n      \\\"itemId\\\":\\\"54136ee6-e016-4880-99eb-41c20c4dbe19\\\",\\\\n      \\\"evaluations\\\":[\\\\n         {\\\\n            \\\"classificationName\\\":\\\"PERSONAL_PROFESSIONAL_CLASSIFICATION\\\",\\\\n            \\\"perspectives\\\":[\\\\n               {\\\\n                  \\\"perspectiveId\\\":\\\"intrusiveness-1\\\",\\\\n                  \\\"evaluationLikert\\\":\\\"3\\\",\\\\n                  \\\"evaluationText\\\":\\\"As a busy IT executive, this information is important to me, but I don\\\\\\\\'t necessarily need to be alerted to it immediately. A notification on my mobile phone would be intrusive.\\\"\\\\n               },\\\\n               {\\\\n                  \\\"perspectiveId\\\":\\\"classification-1\\\",\\\\n                  \\\"evaluationLikert\\\":\\\"5\\\",\\\\n                  \\\"evaluationText\\\":\\\"This is a professional piece of information and has been correctly classified as such.\\\"\\\\n               }\\\\n            ]\\\\n         },\\\\n         {\\\\n            \\\"classificationName\\\":\\\"PRIORITY_CLASSIFICATION\\\",\\\\n            \\\"perspectives\\\":[\\\\n               {\\\\n                  \\\"perspectiveId\\\":\\\"intrusiveness-1\\\",\\\\n                  \\\"evaluationLikert\\\":\\\"2\\\",\\\\n                  \\\"evaluationText\\\":\\\"The information is important to me, but I don\\\\\\\\'t need to be alerted to it immediately. A notification on my mobile phone would be too intrusive.\\\"\\\\n               },\\\\n               {\\\\n                  \\\"perspectiveId\\\":\\\"classification-1\\\",\\\\n                  \\\"evaluationLikert\\\":\\\"5\\\",\\\\n                  \\\"evaluationText\\\":\\\"This is an important piece of information and has been correctly classified as such.\\\"\\\\n               }\\\\n            ]\\\\n         }\\\\n      ]\\\\n   },\\\\n   {\\\\n      \\\"itemId\\\":\\\"d59c2c1e-2365-452c-8333-3f40c5844ae1\\\",\\\\n      \\\"evaluations\\\":[\\\\n         {\\\\n            \\\"classificationName\\\":\\\"PERSONAL_PROFESSIONAL_CLASSIFICATION\\\",\\\\n            \\\"perspectives\\\":[\\\\n               {\\\\n                  \\\"perspectiveId\\\":\\\"intrusiveness-1\\\",\\\\n                  \\\"evaluationLikert\\\":\\\"3\\\",\\\\n                  \\\"evaluationText\\\":\\\"As a busy IT executive, this information is important to me, but I don\\\\\\\\'t necessarily need to be alerted to it immediately. A notification on my mobile phone would be intrusive.\\\"\\\\n               },\\\\n               {\\\\n                  \\\"perspectiveId\\\":\\\"classification-1\\\",\\\\n                  \\\"evaluationLikert\\\":\\\"5\\\",\\\\n                  \\\"evaluationText\\\":\\\"This is a professional piece of information and has been correctly classified as such.\\\"\\\\n               }\\\\n            ]\\\\n         },\\\\n         {\\\\n            \\\"classificationName\\\":\\\"PRIORITY_CLASSIFICATION\\\",\\\\n            \\\"perspectives\\\":[\\\\n               {\\\\n                  \\\"perspectiveId\\\":\\\"intrusiveness-1\\\",\\\\n                  \\\"evaluationLikert\\\":\\\"2\\\",\\\\n                  \\\"evaluationText\\\":\\\"The information is important to me, but I don\\\\\\\\'t need to be alerted to it immediately. A notification on my mobile phone would be too intrusive.\\\"\\\\n               },\\\\n               {\\\\n                  \\\"perspectiveId\\\":\\\"classification-1\\\",\\\\n                  \\\"evaluationLikert\\\":\\\"5\\\",\\\\n                  \\\"evaluationText\\\":\\\"This is an important piece of information and has been correctly classified as such.\\\"\\\\n               }\\\\n            ]\\\\n         }\\\\n      ]\\\\n   },\\\\n   {\\\\n      \\\"itemId\\\":\\\"4a6acd87-b1bd-4334-8957-263080a10394\\\",\\\\n      \\\"evaluations\\\":[\\\\n         {\\\\n            \\\"classificationName\\\":\\\"PERSONAL_PROFESSIONAL_CLASSIFICATION\\\",\\\\n            \\\"perspectives\\\":[\\\\n               {\\\\n                  \\\"perspectiveId\\\":\\\"intrusiveness-1\\\",\\\\n                  \\\"evaluationLikert\\\":\\\"3\\\",\\\\n                  \\\"evaluationText\\\":\\\"As a busy IT executive, this information is important to me\\\\',index:0,logprobs:null,finish_reason:\\\\'length\\\\'}],usage:{prompt_tokens:2623,completion_tokens:1200,total_tokens:3823}}\",\r\n   \"statusCode\":500,\r\n   \"rawReponseText\":\"{id:\\\\'cmpl-7b5oDZacrdhPwo3QxhhOtd7UBffXI\\\\',object:\\\\'text_completion\\\\',created:1689074821,model:\\\\'text-davinci-003\\\\',choices:[{text:\\\\'\\\\nMy reply is:\\\\n[\\\\n   {\\\\n      \\\"itemId\\\":\\\"26ba22e4-92f4-4c8d-95ba-2b771acd25ca\\\",\\\\n      \\\"evaluations\\\":[\\\\n         {\\\\n            \\\"classificationName\\\":\\\"PERSONAL_PROFESSIONAL_CLASSIFICATION\\\",\\\\n            \\\"perspectives\\\":[\\\\n               {\\\\n                  \\\"perspectiveId\\\":\\\"intrusiveness-1\\\",\\\\n                  \\\"evaluationLikert\\\":\\\"3\\\",\\\\n                  \\\"evaluationText\\\":\\\"As a busy IT executive, this information is important to me, but I don\\\\\\\\'t necessarily need to be alerted to it immediately. A notification on my mobile phone would be intrusive.\\\"\\\\n               },\\\\n               {\\\\n                  \\\"perspectiveId\\\":\\\"classification-1\\\",\\\\n                  \\\"evaluationLikert\\\":\\\"5\\\",\\\\n                  \\\"evaluationText\\\":\\\"This is a professional piece of information and has been correctly classified as such.\\\"\\\\n               }\\\\n            ]\\\\n         },\\\\n         {\\\\n            \\\"classificationName\\\":\\\"PRIORITY_CLASSIFICATION\\\",\\\\n            \\\"perspectives\\\":[\\\\n               {\\\\n                  \\\"perspectiveId\\\":\\\"intrusiveness-1\\\",\\\\n                  \\\"evaluationLikert\\\":\\\"2\\\",\\\\n                  \\\"evaluationText\\\":\\\"The information is important to me, but I don\\\\\\\\'t need to be alerted to it immediately. A notification on my mobile phone would be too intrusive.\\\"\\\\n               },\\\\n               {\\\\n                  \\\"perspectiveId\\\":\\\"classification-1\\\",\\\\n                  \\\"evaluationLikert\\\":\\\"5\\\",\\\\n                  \\\"evaluationText\\\":\\\"This is an important piece of information and has been correctly classified as such.\\\"\\\\n               }\\\\n            ]\\\\n         }\\\\n      ]\\\\n   },\\\\n   {\\\\n      \\\"itemId\\\":\\\"54136ee6-e016-4880-99eb-41c20c4dbe19\\\",\\\\n      \\\"evaluations\\\":[\\\\n         {\\\\n            \\\"classificationName\\\":\\\"PERSONAL_PROFESSIONAL_CLASSIFICATION\\\",\\\\n            \\\"perspectives\\\":[\\\\n               {\\\\n                  \\\"perspectiveId\\\":\\\"intrusiveness-1\\\",\\\\n                  \\\"evaluationLikert\\\":\\\"3\\\",\\\\n                  \\\"evaluationText\\\":\\\"As a busy IT executive, this information is important to me, but I don\\\\\\\\'t necessarily need to be alerted to it immediately. A notification on my mobile phone would be intrusive.\\\"\\\\n               },\\\\n               {\\\\n                  \\\"perspectiveId\\\":\\\"classification-1\\\",\\\\n                  \\\"evaluationLikert\\\":\\\"5\\\",\\\\n                  \\\"evaluationText\\\":\\\"This is a professional piece of information and has been correctly classified as such.\\\"\\\\n               }\\\\n            ]\\\\n         },\\\\n         {\\\\n            \\\"classificationName\\\":\\\"PRIORITY_CLASSIFICATION\\\",\\\\n            \\\"perspectives\\\":[\\\\n               {\\\\n                  \\\"perspectiveId\\\":\\\"intrusiveness-1\\\",\\\\n                  \\\"evaluationLikert\\\":\\\"2\\\",\\\\n                  \\\"evaluationText\\\":\\\"The information is important to me, but I don\\\\\\\\'t need to be alerted to it immediately. A notification on my mobile phone would be too intrusive.\\\"\\\\n               },\\\\n               {\\\\n                  \\\"perspectiveId\\\":\\\"classification-1\\\",\\\\n                  \\\"evaluationLikert\\\":\\\"5\\\",\\\\n                  \\\"evaluationText\\\":\\\"This is an important piece of information and has been correctly classified as such.\\\"\\\\n               }\\\\n            ]\\\\n         }\\\\n      ]\\\\n   },\\\\n   {\\\\n      \\\"itemId\\\":\\\"d59c2c1e-2365-452c-8333-3f40c5844ae1\\\",\\\\n      \\\"evaluations\\\":[\\\\n         {\\\\n            \\\"classificationName\\\":\\\"PERSONAL_PROFESSIONAL_CLASSIFICATION\\\",\\\\n            \\\"perspectives\\\":[\\\\n               {\\\\n                  \\\"perspectiveId\\\":\\\"intrusiveness-1\\\",\\\\n                  \\\"evaluationLikert\\\":\\\"3\\\",\\\\n                  \\\"evaluationText\\\":\\\"As a busy IT executive, this information is important to me, but I don\\\\\\\\'t necessarily need to be alerted to it immediately. A notification on my mobile phone would be intrusive.\\\"\\\\n               },\\\\n               {\\\\n                  \\\"perspectiveId\\\":\\\"classification-1\\\",\\\\n                  \\\"evaluationLikert\\\":\\\"5\\\",\\\\n                  \\\"evaluationText\\\":\\\"This is a professional piece of information and has been correctly classified as such.\\\"\\\\n               }\\\\n            ]\\\\n         },\\\\n         {\\\\n            \\\"classificationName\\\":\\\"PRIORITY_CLASSIFICATION\\\",\\\\n            \\\"perspectives\\\":[\\\\n               {\\\\n                  \\\"perspectiveId\\\":\\\"intrusiveness-1\\\",\\\\n                  \\\"evaluationLikert\\\":\\\"2\\\",\\\\n                  \\\"evaluationText\\\":\\\"The information is important to me, but I don\\\\\\\\'t need to be alerted to it immediately. A notification on my mobile phone would be too intrusive.\\\"\\\\n               },\\\\n               {\\\\n                  \\\"perspectiveId\\\":\\\"classification-1\\\",\\\\n                  \\\"evaluationLikert\\\":\\\"5\\\",\\\\n                  \\\"evaluationText\\\":\\\"This is an important piece of information and has been correctly classified as such.\\\"\\\\n               }\\\\n            ]\\\\n         }\\\\n      ]\\\\n   },\\\\n   {\\\\n      \\\"itemId\\\":\\\"4a6acd87-b1bd-4334-8957-263080a10394\\\",\\\\n      \\\"evaluations\\\":[\\\\n         {\\\\n            \\\"classificationName\\\":\\\"PERSONAL_PROFESSIONAL_CLASSIFICATION\\\",\\\\n            \\\"perspectives\\\":[\\\\n               {\\\\n                  \\\"perspectiveId\\\":\\\"intrusiveness-1\\\",\\\\n                  \\\"evaluationLikert\\\":\\\"3\\\",\\\\n                  \\\"evaluationText\\\":\\\"As a busy IT executive, this information is important to me\\\\',index:0,logprobs:null,finish_reason:\\\\'length\\\\'}],usage:{prompt_tokens:2623,completion_tokens:1200,total_tokens:3823}}\",\r\n   \"items\":[\r\n      \"26ba22e4-92f4-4c8d-95ba-2b771acd25ca\",\r\n      \"54136ee6-e016-4880-99eb-41c20c4dbe19\",\r\n      \"d59c2c1e-2365-452c-8333-3f40c5844ae1\",\r\n      \"4a6acd87-b1bd-4334-8957-263080a10394\",\r\n      \"049fafc3-8369-4de9-8df5-1016b30d5466\",\r\n      \"ab00a8ae-8ec1-494a-b541-17d2632454a4\",\r\n      \"14276d47-25b8-4c33-a032-9eb7de24a3a1\",\r\n      \"56fa2a9a-2fab-4044-b093-268c5f1dc5e4\"\r\n   ],\r\n   \"itemCount\":8\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_prefix}}/api/v1/awag/data/eval/record-evaluation-failure",
					"host": [
						"{{url_prefix}}"
					],
					"path": [
						"api",
						"v1",
						"awag",
						"data",
						"eval",
						"record-evaluation-failure"
					]
				}
			},
			"response": []
		},
		{
			"name": "AwAgData Get Evaluation Failures",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{agent-id-test-1}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "eb059f77-bb22-4dde-9607-{{agent_id_test_1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_prefix}}/api/v1/awag/data/eval/get-evaluation-failures?client_id={{agent_id_susan}}&lastNHours=1",
					"host": [
						"{{url_prefix}}"
					],
					"path": [
						"api",
						"v1",
						"awag",
						"data",
						"eval",
						"get-evaluation-failures"
					],
					"query": [
						{
							"key": "client_id",
							"value": "{{agent_id_susan}}",
							"description": "Overides the x-client-id header to specify different agent"
						},
						{
							"key": "itemId",
							"value": "4f6d8184-d36d-4b12-9ce9-d02528c763ce",
							"disabled": true
						},
						{
							"key": "contextId",
							"value": "abcd",
							"disabled": true
						},
						{
							"key": "lastNHours",
							"value": "1"
						},
						{
							"key": "lastNMinutes",
							"value": "5",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "AwAgData Get Evaluation Data",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{agent-id-test-1}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "eb059f77-bb22-4dde-9607-{{agent_id_test_1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_prefix_int_dev}}/api/v1/awag/data/eval/get-evaluation-data?client_id={{agent_id_kenton}}&tag=phase2-vanilla-mode1-02&by_uuid=false&onlyIncludeWithManual=true",
					"host": [
						"{{url_prefix_int_dev}}"
					],
					"path": [
						"api",
						"v1",
						"awag",
						"data",
						"eval",
						"get-evaluation-data"
					],
					"query": [
						{
							"key": "itemId",
							"value": "00f19eb9-ee53-4a3c-902f-56f6a55d2935",
							"disabled": true
						},
						{
							"key": "client_id",
							"value": "{{agent_id_kenton}}"
						},
						{
							"key": "evaluateSourceType",
							"value": "Slack message",
							"disabled": true
						},
						{
							"key": "personaId",
							"value": "beth",
							"disabled": true
						},
						{
							"key": "lastNHours",
							"value": "4",
							"disabled": true
						},
						{
							"key": "includeDetail",
							"value": "true",
							"disabled": true
						},
						{
							"key": "contextId",
							"value": "CONTEXT-QPDdCpNnmfuQ8LsjPMAH",
							"disabled": true
						},
						{
							"key": "dataIssueFlag",
							"value": "1",
							"disabled": true
						},
						{
							"key": "tag",
							"value": "phase2-vanilla-mode1-02"
						},
						{
							"key": "by_uuid",
							"value": "false"
						},
						{
							"key": "desc",
							"value": "true",
							"disabled": true
						},
						{
							"key": "subsetTag",
							"value": "phase2",
							"disabled": true
						},
						{
							"key": "subsetPercent",
							"value": "25",
							"disabled": true
						},
						{
							"key": "includePartialEvaluations",
							"value": "false",
							"disabled": true
						},
						{
							"key": "evaluationLikertValMin",
							"value": "1",
							"disabled": true
						},
						{
							"key": "evaluationLikertValMax",
							"value": "5",
							"disabled": true
						},
						{
							"key": "excludeItemsWithFeedback",
							"value": "true",
							"disabled": true
						},
						{
							"key": "onlyIncludeWithManual",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "AwAgData Delete Evaluation Data",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{agent-id-test-1}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "eb059f77-bb22-4dde-9607-{{agent_id_test_1}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url_prefix}}/api/v1/awag/data/eval/delete-evaluation-data?client_id={{agent_id_kenton}}&tag=test3-base-phase2",
					"host": [
						"{{url_prefix}}"
					],
					"path": [
						"api",
						"v1",
						"awag",
						"data",
						"eval",
						"delete-evaluation-data"
					],
					"query": [
						{
							"key": "client_id",
							"value": "{{agent_id_kenton}}"
						},
						{
							"key": "tag",
							"value": "test3-base-phase2"
						},
						{
							"key": "confirm",
							"value": "true",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "AwAgData Fetch Training Items",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{agent-id-test-1}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "eb059f77-bb22-4dde-9607-{{agent_id_test_1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_prefix}}/api/v1/awag/data/class/fetch-training-items?client_id={{agent_id_adam}}&page=1&count=5&desc=true&tag=init-1&includeIgnored=true&subsetPercent=25",
					"host": [
						"{{url_prefix}}"
					],
					"path": [
						"api",
						"v1",
						"awag",
						"data",
						"class",
						"fetch-training-items"
					],
					"query": [
						{
							"key": "client_id",
							"value": "{{agent_id_adam}}",
							"description": "Overides the x-client-id header to specify different agent"
						},
						{
							"key": "itemId",
							"value": "011886fa-35f8-4ff0-9d44-8374355f628f",
							"disabled": true
						},
						{
							"key": "page",
							"value": "1"
						},
						{
							"key": "count",
							"value": "5"
						},
						{
							"key": "desc",
							"value": "true"
						},
						{
							"key": "lastNHours",
							"value": "1",
							"disabled": true
						},
						{
							"key": "onlyIncludeUntrained",
							"value": "true",
							"disabled": true
						},
						{
							"key": "classificationName",
							"value": "['tech', 'cycling']",
							"disabled": true
						},
						{
							"key": "tag",
							"value": "init-1"
						},
						{
							"key": "type",
							"value": "message",
							"disabled": true
						},
						{
							"key": "includeIgnored",
							"value": "true"
						},
						{
							"key": "subsetPercent",
							"value": "25"
						},
						{
							"key": "subsetTag",
							"value": "phase2",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "AwAgData Record Evaluation Feedback",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"function randomString(minValue, maxValue, dataSet = 'abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ') {\r",
							"    if (!minValue) {\r",
							"        minValue = 20;\r",
							"        maxValue = 20;\r",
							"    }\r",
							"\r",
							"    if (!maxValue) {\r",
							"        maxValue = minValue;\r",
							"    }\r",
							"\r",
							"    let length = _.random(minValue, maxValue),\r",
							"        randomString = \"\";\r",
							"\r",
							"    for (let i = 0; i < length; i++)\r",
							"        randomString += dataSet.charAt(Math.floor(Math.random() * dataSet.length));\r",
							"    return randomString;\r",
							"}\r",
							"\r",
							"pm.variables.set('randomString', randomString());\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{agent-id-test-1}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "eb059f77-bb22-4dde-9607-{{agent_id_test_1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"agent\":\"{{agent_id_dev}}\",\r\n         \"tags\":[\r\n            \"postman-test\",\r\n            \"test-a\"\r\n         ],\r\n         \"itemId\":\"ITEM-{{randomString}}-1\",\r\n   \"contextId\":\"CONTEXT-{{randomString}}\",\r\n   \"personaId\":\"PERSONA-1\",\r\n   \"perspectiveId\":\"PERSPECTIVE-1\",\r\n   \"classificationName\":\"CLASSIFICATION-1\",\r\n   \"oldLikertValue\": 1,\r\n   \"newLikertValue\": 1,\r\n   \"textLikertMismatch\": false,\r\n   \"additionalDetails\" : {}\r\n}\r\n\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_prefix_int_dev}}/api/v1/awag/data/eval/record-evaluation-feedback",
					"host": [
						"{{url_prefix_int_dev}}"
					],
					"path": [
						"api",
						"v1",
						"awag",
						"data",
						"eval",
						"record-evaluation-feedback"
					]
				}
			},
			"response": []
		},
		{
			"name": "AwAgData Record Evaluation Feedback Partial",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"function randomString(minValue, maxValue, dataSet = 'abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ') {\r",
							"    if (!minValue) {\r",
							"        minValue = 20;\r",
							"        maxValue = 20;\r",
							"    }\r",
							"\r",
							"    if (!maxValue) {\r",
							"        maxValue = minValue;\r",
							"    }\r",
							"\r",
							"    let length = _.random(minValue, maxValue),\r",
							"        randomString = \"\";\r",
							"\r",
							"    for (let i = 0; i < length; i++)\r",
							"        randomString += dataSet.charAt(Math.floor(Math.random() * dataSet.length));\r",
							"    return randomString;\r",
							"}\r",
							"\r",
							"pm.variables.set('randomString', randomString());\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"tags\":[\r\n        \"postman-test\",\r\n        \"test-a\"\r\n    ],\r\n   \"XXitemId\":\"ITEM-{{randomString}}-1\",\r\n   \"itemId\":\"test-item-4\",\r\n   \"XXcontextId\":\"CONTEXT-{{randomString}}\",\r\n   \"contextId\":\"CONTEXT-1\",\r\n   \"personaId\":\"PERSONA-1\",\r\n   \"perspectiveId\":\"PERSPECTIVE-1\",\r\n   \"classificationName\":\"   CLASSIFICATION_1\",\r\n   \"oldLikertValue\": 1,\r\n   \"newLikertValue\": 1,\r\n   \"textLikertMismatch\": true,\r\n   \"additionalDetails\" : {}\r\n}\r\n\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_prefix_int_dev}}/api/v1/awag/data/eval/record-evaluation-feedback-partial?client_id={{agent_id_dev}}",
					"host": [
						"{{url_prefix_int_dev}}"
					],
					"path": [
						"api",
						"v1",
						"awag",
						"data",
						"eval",
						"record-evaluation-feedback-partial"
					],
					"query": [
						{
							"key": "client_id",
							"value": "{{agent_id_dev}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "AwAgData Fixit - Construct Eval Items",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"function randomString(minValue, maxValue, dataSet = 'abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ') {\r",
							"    if (!minValue) {\r",
							"        minValue = 20;\r",
							"        maxValue = 20;\r",
							"    }\r",
							"\r",
							"    if (!maxValue) {\r",
							"        maxValue = minValue;\r",
							"    }\r",
							"\r",
							"    let length = _.random(minValue, maxValue),\r",
							"        randomString = \"\";\r",
							"\r",
							"    for (let i = 0; i < length; i++)\r",
							"        randomString += dataSet.charAt(Math.floor(Math.random() * dataSet.length));\r",
							"    return randomString;\r",
							"}\r",
							"\r",
							"pm.variables.set('randomString', randomString());\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{agent-id-kenton}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "eb059f77-bb22-4dde-9607-{{agent_id_test_1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"agent\":\"{{agent_id_kenton}}\",\r\n   \"tagsAdd\":[\r\n      \"fixit\",\r\n      \"phase2\"\r\n   ],\r\n   \"tagSource\":\"phase2-6\",\r\n   \"max_items\": 0\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_prefix}}/api/v1/awag/data/fixit/construct-eval-items?client_id={{agent_id_kenton}}",
					"host": [
						"{{url_prefix}}"
					],
					"path": [
						"api",
						"v1",
						"awag",
						"data",
						"fixit",
						"construct-eval-items"
					],
					"query": [
						{
							"key": "client_id",
							"value": "{{agent_id_kenton}}",
							"description": "Overides the x-client-id header to specify different agent"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "AwAgData Record Classification",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"function randomString(minValue, maxValue, dataSet = 'abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ') {\r",
							"    if (!minValue) {\r",
							"        minValue = 20;\r",
							"        maxValue = 20;\r",
							"    }\r",
							"\r",
							"    if (!maxValue) {\r",
							"        maxValue = minValue;\r",
							"    }\r",
							"\r",
							"    let length = _.random(minValue, maxValue),\r",
							"        randomString = \"\";\r",
							"\r",
							"    for (let i = 0; i < length; i++)\r",
							"        randomString += dataSet.charAt(Math.floor(Math.random() * dataSet.length));\r",
							"    return randomString;\r",
							"}\r",
							"\r",
							"pm.variables.set('randomString', randomString());\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{agent-id-test-1}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "eb059f77-bb22-4dde-9607-{{agent_id_test_1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"itemId\":\"ITEM-{{randomString}}-1\",\r\n   \"classificationName\":\"work-urgency\",\r\n   \"classification\":\"urgent\",\r\n   \"availableClassifications\":[\r\n      \"not\",\r\n      \"urgent\"\r\n   ],\r\n   \"tags\":[\r\n      \"foo\",\r\n      \"bar\"\r\n   ],\r\n   \"bodyText\":\"Dr Chelsea Polis: ‘The scientific world recognises when you stick your neck out and do the right thing’\\n<p>The US reproductive health expert on being sued for $1m, and winning a top prize for her fight for free speech in the public interest</p><p>Dr Chelsea Polis is a reproductive health scientist based in New York City. She was sued for $1m by a medical device company after speaking out about misleading marketing claims it had made about the use of its digital fertility tracker as a contraceptive method. After a two-year battle, the case was thrown out of court. Last month in London she won the 2023<a href=\\\"https://senseaboutscience.org/john-maddox-prize/\\\"> John Maddox prize early career award</a>, which champions those who stand up for evidence-based science in the face of hostility. She is a senior scientist for epidemiology at the Population Council’s Center for Biomedical Research.</p><p><strong>In </strong><strong>May 2020</strong><strong>, you were sued for $1m for defamation by </strong><strong>Valley Electronics of Zurich, Switzerland,</strong><strong> the manufacturer</strong><strong> of the Daysy fertility tracker and the DaysyView app, for voicing your concerns about the device being marketed as a contraceptive. How did it feel as an individual to be sued for $1m?<br></strong>Shocking. Terrifying. Completely bewildering because what I was being sued for was something where my concerns had been validated, not only by a scientific journal, but also by a US federal agency – the US Food and Drug Administration [FDA], which had taken my concerns seriously and launched an investigation, after which the company changed their marketing language.</p> <a href=\\\"https://www.theguardian.com/science/2023/nov/26/dr-chelsea-polis-valley-electronics-daysy-john-maddox-prize-interview\\\">Continue reading...</a>\",\r\n   \"additionalDetails\":{\r\n      \"item\":{}\r\n   }\r\n\r\n}\r\n\r\n\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_prefix}}/api/v1/awag/data/class/record-classification?client_id={{agent_id}}",
					"host": [
						"{{url_prefix}}"
					],
					"path": [
						"api",
						"v1",
						"awag",
						"data",
						"class",
						"record-classification"
					],
					"query": [
						{
							"key": "client_id",
							"value": "{{agent_id}}",
							"description": "Overides the x-client-id header to specify different agent"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "AwAgData Get Evaluation Persona",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{agent-id-test-1}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "eb059f77-bb22-4dde-9607-{{agent_id_test_1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_prefix}}/api/v1/awag/data/eval/get-evaluation-persona?client_id={{agent_id_dev}}",
					"host": [
						"{{url_prefix}}"
					],
					"path": [
						"api",
						"v1",
						"awag",
						"data",
						"eval",
						"get-evaluation-persona"
					],
					"query": [
						{
							"key": "client_id",
							"value": "{{agent_id_dev}}",
							"description": "Overides the x-client-id header to specify different agent"
						},
						{
							"key": "persona",
							"value": "it-exec-1",
							"disabled": true
						},
						{
							"key": "version",
							"value": "-1",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "AwAgData Get Evaluation Perspective",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{agent-id-test-1}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "eb059f77-bb22-4dde-9607-{{agent_id_test_1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_prefix}}/api/v1/awag/data/eval/get-evaluation-perspective?agent={{agent_id}}",
					"host": [
						"{{url_prefix}}"
					],
					"path": [
						"api",
						"v1",
						"awag",
						"data",
						"eval",
						"get-evaluation-perspective"
					],
					"query": [
						{
							"key": "agent",
							"value": "{{agent_id}}"
						},
						{
							"key": "version",
							"value": "-1",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "AwAgData Flow Monitor Record",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"function randomString(minValue, maxValue, dataSet = 'abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ') {\r",
							"    if (!minValue) {\r",
							"        minValue = 20;\r",
							"        maxValue = 20;\r",
							"    }\r",
							"\r",
							"    if (!maxValue) {\r",
							"        maxValue = minValue;\r",
							"    }\r",
							"\r",
							"    let length = _.random(minValue, maxValue),\r",
							"        randomString = \"\";\r",
							"\r",
							"    for (let i = 0; i < length; i++)\r",
							"        randomString += dataSet.charAt(Math.floor(Math.random() * dataSet.length));\r",
							"    return randomString;\r",
							"}\r",
							"\r",
							"pm.variables.set('randomString', randomString());\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{agent-id-test-1}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "eb059f77-bb22-4dde-9607-{{agent_id_test_1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"itemId\":\"{{randomString}}\",\r\n   \"itemSecondaryId\":\"tag:theregister.com,2005:story228363\",\r\n   \"itemCategory\":\"ExternalItem\",\r\n   \"itemType\":\"RSSAcquireItem\",\r\n   \"itemExtra\":null,\r\n   \"eventText\":\"Acquire external item of class \\\\'class net.parse.ou.awarenessagent.platform.async.content.rss.RSSAcquireItem\\\\' with tracking identifier: tag:theregister.com,2005:story228363\",\r\n   \"sourceClassCanonical\":\"net.parse.ou.awarenessagent.platform.modules.genus.acquire.rss.listener.RSSSubscriberInstanceBase\",\r\n   \"sourceClass\":\"RSSSubscriberInstanceBase\",\r\n   \"queueClassCanonical\":null,\r\n   \"queueClass\":null,\r\n   \"eventTypeId\":1,\r\n   \"eventTypeLabel\":\"Acquire\",\r\n   \"eventDateTimeText\":\"2023-06-25T11:13:53.6644707+02:00\",\r\n   \"eventDateTimeMs\":1687684433664\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_prefix}}/api/v1/awag/data/flow/flow-monitor-record?client_id={{agent_id}}",
					"host": [
						"{{url_prefix}}"
					],
					"path": [
						"api",
						"v1",
						"awag",
						"data",
						"flow",
						"flow-monitor-record"
					],
					"query": [
						{
							"key": "client_id",
							"value": "{{agent_id}}",
							"description": "Overides the x-client-id header to specify different agent"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "AwAgData Get Flow Monitor Records",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{agent-id-test-1}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "eb059f77-bb22-4dde-9607-{{agent_id_test_1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_prefix}}/api/v1/awag/data/flow/get-flow-monitor-records?client_id={{agent_id_kenton}}&itemCategory=ContentItem&lastNHours=480",
					"host": [
						"{{url_prefix}}"
					],
					"path": [
						"api",
						"v1",
						"awag",
						"data",
						"flow",
						"get-flow-monitor-records"
					],
					"query": [
						{
							"key": "client_id",
							"value": "{{agent_id_kenton}}",
							"description": "Overides the x-client-id header to specify different agent"
						},
						{
							"key": "itemId",
							"value": "de026351-905f-4c20-b3e3-6056a28fb47f",
							"disabled": true
						},
						{
							"key": "itemCategory",
							"value": "ContentItem"
						},
						{
							"key": "eventTypeId",
							"value": "3",
							"disabled": true
						},
						{
							"key": "lastNHours",
							"value": "480"
						},
						{
							"key": "lastNMinutes",
							"value": "60",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "AwAgData Record Evaluation Items",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"function randomString(minValue, maxValue, dataSet = 'abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ') {\r",
							"    if (!minValue) {\r",
							"        minValue = 20;\r",
							"        maxValue = 20;\r",
							"    }\r",
							"\r",
							"    if (!maxValue) {\r",
							"        maxValue = minValue;\r",
							"    }\r",
							"\r",
							"    let length = _.random(minValue, maxValue),\r",
							"        randomString = \"\";\r",
							"\r",
							"    for (let i = 0; i < length; i++)\r",
							"        randomString += dataSet.charAt(Math.floor(Math.random() * dataSet.length));\r",
							"    return randomString;\r",
							"}\r",
							"\r",
							"pm.variables.set('randomString', randomString());\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{agent-id-test-1}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "eb059f77-bb22-4dde-9607-{{agent_id_test_1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"agent\":\"{{agent_id}}\",\r\n\r\n      \"evaluationItems\":[\r\n         {\r\n\r\n         \"tags\":[\r\n            \"postman-test\",\r\n            \"test-a\"\r\n         ],\r\n\r\n\r\n            \"contentItemSummary\":{\r\n               \"augmentations\":{\r\n                  \"labelsMulti\":{\r\n                     \r\n                  },\r\n                  \"labelsSingle\":{\r\n                     \"PRIORITY_CLASSIFICATION\":\"general\",\r\n                     \"PERSONAL_PROFESSIONAL_CLASSIFICATION\":\"personal\"\r\n                  },\r\n                  \"summaryText\":\"\\n\\nNASA is close to finishing the X-59 \\\"Son of Concorde\\\" supersonic jet, which could revolutionize commercial flights by reducing the noise of supersonic travel. If successful, the X-59 would be the first aircraft to allow for supersonic travel without the noise and vibration associated with it. The first test flights are expected soon.\"\r\n               },\r\n               \"body\":\"<h4>If it works, the X-59 could enable a new era of commercial supersonic travel that doesn\\\\'t shatter windows</h4> <p>NASA\\\\'s mission to create a supersonic aircraft that doesn\\\\'t rattle windows and vibrate teeth is one step closer to reality as the experimental X-59 aircraft dubbed the \\\"Son of Concorde\\\" may soon be ready for its first test flights.…</p>\",\r\n               \"channel\":\"The Register - Offbeat\",\r\n               \"date\":\"2023-07-07T18:01:14Z\",\r\n               \"from\":{\r\n                  \"type\":\"rfc822\",\r\n                  \"address\":\"rss\",\r\n                  \"personal\":\"The Register - Offbeat\",\r\n                  \"group\":false\r\n               },\r\n               \"itemId\":\"xx-{{randomString}}-1\",\r\n               \"itemUrl\":\"https://go.theregister.com/feed/www.theregister.com/2023/07/07/nasa_quiet_supersonic_jet/\",\r\n               \"originator\":\"The Register - Offbeat\",\r\n               \"prominence\":\"HIGHER\",\r\n               \"providerDescription\":\"\",\r\n               \"providerName\":\"The Register - Offbeat <rss>\",\r\n               \"providerUrl\":\"https://www.theregister.com/offbeat/headlines.atom\",\r\n               \"subject\":\"NASA \\\\'quiet\\\\' supersonic jet is nearly ready for flight\",\r\n               \"to\":[\r\n                  \r\n               ],\r\n               \"type\":\"rss-item\",\r\n               \"typeDescription\":\"RSS item\"\r\n            },\r\n            \"evaluateClassifications\":[\r\n               {\r\n                  \"classificationName\":\"PERSONAL_PROFESSIONAL_CLASSIFICATION\",\r\n                  \"classificationOptions\":[\r\n                     \"personal\",\r\n                     \"professional\"\r\n                  ],\r\n                  \"classificationValue\":\"personal\"\r\n               },\r\n               {\r\n                  \"classificationName\":\"PRIORITY_CLASSIFICATION\",\r\n                  \"classificationOptions\":[\r\n                     \"general\",\r\n                     \"high\"\r\n                  ],\r\n                  \"classificationValue\":\"general\"\r\n               }\r\n            ],\r\n            \"evaluateSourceChannel\":\"The Register - Offbeat\",\r\n            \"evaluateSourceOriginator\":\"The Register - Offbeat\",\r\n            \"evaluateSourceType\":\"RSS item\",\r\n            \"evaluateText\":\"<h4>If it works, the X-59 could enable a new era of commercial supersonic travel that doesn\\\\'t shatter windows</h4> <p>NASA\\\\'s mission to create a supersonic aircraft that doesn\\\\'t rattle windows and vibrate teeth is one step closer to reality as the experimental X-59 aircraft dubbed the \\\"Son of Concorde\\\" may soon be ready for its first test flights.…</p>\",\r\n            \"evaluateTime\":\"2023-07-10T09:40:53.3706958+02:00\",\r\n            \"evaluateTitle\":\"NASA \\\\'quiet\\\\' supersonic jet is nearly ready for flight\"\r\n         },\r\n         {\r\n\r\n         \"tags\":[\r\n            \"postman-test\",\r\n            \"test-b\"\r\n         ],\r\n\r\n\r\n            \"contentItemSummary\":{\r\n               \"augmentations\":{\r\n                  \"labelsMulti\":{\r\n                     \r\n                  },\r\n                  \"labelsSingle\":{\r\n                     \"PRIORITY_CLASSIFICATION\":\"general\",\r\n                     \"PERSONAL_PROFESSIONAL_CLASSIFICATION\":\"personal\"\r\n                  },\r\n                  \"summaryText\":\"\\n\\nA senior European Commission official has confirmed that post-Brexit tariffs on imports of electric vehicles from the EU to the UK are still going ahead. This is being done in order to protect the EU against US subsidies given to electric vehicle manufacturers. The Commission is not backing down on the new \\\"rules of origin\\\" edict, despite manufacturers\\\\' claims that it could lead to the shutdown of their operations in the UK.\"\r\n               },\r\n               \"body\":\"<h4>Commission official insists it has to protect itself against US subsidies</h4> <p>Moves to fight off a new \\\"rules of origin\\\" edict that some electric vehicle automakers claim could shut down their operations in the UK aren\\\\'t going anywhere, judging by the words of a senior Euro Commish official.…</p> <p><!--#include virtual=\\\\'/data_centre/_whitepaper_textlinks_top.html\\\\' --></p>\",\r\n               \"channel\":\"The Register - Offbeat\",\r\n               \"date\":\"2023-07-07T10:00:11Z\",\r\n               \"from\":{\r\n                  \"type\":\"rfc822\",\r\n                  \"address\":\"rss\",\r\n                  \"personal\":\"The Register - Offbeat\",\r\n                  \"group\":false\r\n               },\r\n               \"itemId\":\"xx-{{randomString}}-2\",\r\n               \"itemUrl\":\"https://go.theregister.com/feed/www.theregister.com/2023/07/07/postbrexit_tariffs_on_electrical_vehicle/\",\r\n               \"originator\":\"The Register - Offbeat\",\r\n               \"prominence\":\"HIGHER\",\r\n               \"providerDescription\":\"\",\r\n               \"providerName\":\"The Register - Offbeat <rss>\",\r\n               \"providerUrl\":\"https://www.theregister.com/offbeat/headlines.atom\",\r\n               \"subject\":\"Post-Brexit tariffs on cross EU-UK electrical vehicle imports still going ahead\",\r\n               \"to\":[\r\n                  \r\n               ],\r\n               \"type\":\"rss-item\",\r\n               \"typeDescription\":\"RSS item\"\r\n            },\r\n            \"evaluateClassifications\":[\r\n               {\r\n                  \"classificationName\":\"PERSONAL_PROFESSIONAL_CLASSIFICATION\",\r\n                  \"classificationOptions\":[\r\n                     \"personal\",\r\n                     \"professional\"\r\n                  ],\r\n                  \"classificationValue\":\"personal\"\r\n               },\r\n               {\r\n                  \"classificationName\":\"PRIORITY_CLASSIFICATION\",\r\n                  \"classificationOptions\":[\r\n                     \"general\",\r\n                     \"high\"\r\n                  ],\r\n                  \"classificationValue\":\"general\"\r\n               }\r\n            ],\r\n            \"evaluateSourceChannel\":\"The Register - Offbeat\",\r\n            \"evaluateSourceOriginator\":\"The Register - Offbeat\",\r\n            \"evaluateSourceType\":\"RSS item\",\r\n            \"evaluateText\":\"<h4>Commission official insists it has to protect itself against US subsidies</h4> <p>Moves to fight off a new \\\"rules of origin\\\" edict that some electric vehicle automakers claim could shut down their operations in the UK aren\\\\'t going anywhere, judging by the words of a senior Euro Commish official.…</p> <p><!--#include virtual=\\\\'/data_centre/_whitepaper_textlinks_top.html\\\\' --></p>\",\r\n            \"evaluateTime\":\"2023-07-10T09:40:55.7254672+02:00\",\r\n            \"evaluateTitle\":\"Post-Brexit tariffs on cross EU-UK electrical vehicle imports still going ahead\"\r\n         },\r\n         {\r\n\r\n         \"tags\":[\r\n            \"postman-test\"\r\n         ],\r\n\r\n\r\n            \"contentItemSummary\":{\r\n               \"augmentations\":{\r\n                  \"labelsMulti\":{\r\n                     \r\n                  },\r\n                  \"labelsSingle\":{\r\n                     \"PRIORITY_CLASSIFICATION\":\"high\",\r\n                     \"PERSONAL_PROFESSIONAL_CLASSIFICATION\":\"professional\"\r\n                  },\r\n                  \"summaryText\":\"Test message\"\r\n               },\r\n               \"body\":\"Test message\",\r\n               \"channel\":\"corp-chat-general\",\r\n               \"date\":\"2023-07-10T07:42:26.018Z\",\r\n               \"from\":{\r\n                  \"type\":\"rfc822\",\r\n                  \"address\":\"slack.com\",\r\n                  \"personal\":\"dmg\",\r\n                  \"group\":false\r\n               },\r\n               \"itemId\":\"xx-{{randomString}}-3\",\r\n               \"itemUrl\":\"https://awag-scratch.slack.com/archives/C054RJVQ7DM/p1688974946017689\",\r\n               \"originator\":\"dmg <slack.com>\",\r\n               \"prominence\":\"LOW\",\r\n               \"providerDescription\":\"\",\r\n               \"providerName\":\"Awareness Agent (Scratch)\",\r\n               \"providerUrl\":\"https://awag-scratch.slack.com/\",\r\n               \"to\":[\r\n                  {\r\n                     \"type\":\"rfc822\",\r\n                     \"address\":\"C054RJVQ7DM\",\r\n                     \"personal\":\"corp-chat-general\",\r\n                     \"group\":false\r\n                  }\r\n               ],\r\n               \"type\":\"message\",\r\n               \"typeDescription\":\"Slack message\"\r\n            },\r\n            \"evaluateClassifications\":[\r\n               {\r\n                  \"classificationName\":\"PERSONAL_PROFESSIONAL_CLASSIFICATION\",\r\n                  \"classificationOptions\":[\r\n                     \"personal\",\r\n                     \"professional\"\r\n                  ],\r\n                  \"classificationValue\":\"professional\"\r\n               },\r\n               {\r\n                  \"classificationName\":\"PRIORITY_CLASSIFICATION\",\r\n                  \"classificationOptions\":[\r\n                     \"general\",\r\n                     \"high\"\r\n                  ],\r\n                  \"classificationValue\":\"high\"\r\n               }\r\n            ],\r\n            \"evaluateSourceChannel\":\"corp-chat-general\",\r\n            \"evaluateSourceOriginator\":\"dmg <slack.com>\",\r\n            \"evaluateSourceType\":\"Slack message\",\r\n            \"evaluateText\":\"Test message\",\r\n            \"evaluateTime\":\"2023-07-10T09:42:29.0387854+02:00\"\r\n         }\r\n      ]\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_prefix}}/api/v1/awag/data/eval/record-evaluation-items",
					"host": [
						"{{url_prefix}}"
					],
					"path": [
						"api",
						"v1",
						"awag",
						"data",
						"eval",
						"record-evaluation-items"
					]
				}
			},
			"response": []
		},
		{
			"name": "AwAgData Fetch Evaluation Items",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_prefix}}/api/v1/awag/data/eval/fetch-evaluation-items?client_id={{agent_id_susan}}&page=1&count=10&desc=true&tag=phase2&excludeExistingWithTag=phase2-vanilla4o-mode2-01",
					"host": [
						"{{url_prefix}}"
					],
					"path": [
						"api",
						"v1",
						"awag",
						"data",
						"eval",
						"fetch-evaluation-items"
					],
					"query": [
						{
							"key": "client_id",
							"value": "{{agent_id_susan}}",
							"description": "Overides the x-client-id header to specify different agent"
						},
						{
							"key": "itemId",
							"value": "9ca005e6-3809-4f30-b90a-35c8a66ab6f8",
							"disabled": true
						},
						{
							"key": "evaluateSourceType",
							"value": "Slack message",
							"disabled": true
						},
						{
							"key": "personaId",
							"value": "beth",
							"disabled": true
						},
						{
							"key": "lastNHours",
							"value": "2",
							"disabled": true
						},
						{
							"key": "includeDetail",
							"value": "true",
							"disabled": true
						},
						{
							"key": "contextId",
							"value": "CONTEXT-QPDdCpNnmfuQ8LsjPMAH",
							"disabled": true
						},
						{
							"key": "dataIssueFlag",
							"value": "1",
							"disabled": true
						},
						{
							"key": "page",
							"value": "1"
						},
						{
							"key": "count",
							"value": "10"
						},
						{
							"key": "desc",
							"value": "true"
						},
						{
							"key": "tag",
							"value": "phase2"
						},
						{
							"key": "excludeExistingWithTag",
							"value": "phase2-vanilla4o-mode2-01"
						},
						{
							"key": "subsetPercent",
							"value": "30",
							"disabled": true
						},
						{
							"key": "subsetTag",
							"value": "phase2",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "AwAgData Get Tags",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{agent-id-test-1}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "eb059f77-bb22-4dde-9607-{{agent_id_test_1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_prefix}}/api/v1/awag/data/misc/get-tags?client_id={{agent_id_kenton}}&type=classification",
					"host": [
						"{{url_prefix}}"
					],
					"path": [
						"api",
						"v1",
						"awag",
						"data",
						"misc",
						"get-tags"
					],
					"query": [
						{
							"key": "client_id",
							"value": "{{agent_id_kenton}}",
							"description": "Overides the x-client-id header to specify different agent"
						},
						{
							"key": "lastNHours",
							"value": "2000",
							"disabled": true
						},
						{
							"key": "type",
							"value": "classification"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "AwAgData Fetch Evaluation Feedback",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_prefix_int_dev}}/api/v1/awag/data/eval/fetch-evaluation-feedback?client_id={{agent_id_dev}}&itemId=test-item-4&page=1&count=5&desc=true&tag=postman-test&valuesSame=true",
					"host": [
						"{{url_prefix_int_dev}}"
					],
					"path": [
						"api",
						"v1",
						"awag",
						"data",
						"eval",
						"fetch-evaluation-feedback"
					],
					"query": [
						{
							"key": "client_id",
							"value": "{{agent_id_dev}}"
						},
						{
							"key": "itemId",
							"value": "test-item-4"
						},
						{
							"key": "evaluateSourceType",
							"value": "Slack message",
							"disabled": true
						},
						{
							"key": "personaId",
							"value": "beth",
							"disabled": true
						},
						{
							"key": "lastNHours",
							"value": "2",
							"disabled": true
						},
						{
							"key": "includeDetail",
							"value": "true",
							"disabled": true
						},
						{
							"key": "contextId",
							"value": "CONTEXT-QPDdCpNnmfuQ8LsjPMAH",
							"disabled": true
						},
						{
							"key": "dataIssueFlag",
							"value": "1",
							"disabled": true
						},
						{
							"key": "page",
							"value": "1"
						},
						{
							"key": "count",
							"value": "5"
						},
						{
							"key": "desc",
							"value": "true"
						},
						{
							"key": "tag",
							"value": "postman-test"
						},
						{
							"key": "valuesSame",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "AwAgData Fetch Classification Actions",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{agent-id-test-1}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "eb059f77-bb22-4dde-9607-{{agent_id_test_1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_prefix}}/api/v1/awag/data/class/fetch-classification-actions?client_id={{agent_id_susan}}&page=1&count=20&tag=phase2&subsetTag=phase2&subsetPercent=15",
					"host": [
						"{{url_prefix}}"
					],
					"path": [
						"api",
						"v1",
						"awag",
						"data",
						"class",
						"fetch-classification-actions"
					],
					"query": [
						{
							"key": "client_id",
							"value": "{{agent_id_susan}}",
							"description": "Overides the x-client-id header to specify different agent"
						},
						{
							"key": "itemId",
							"value": "06994964-0438-44c6-ab3a-bf7cb11bbd8a",
							"disabled": true
						},
						{
							"key": "page",
							"value": "1"
						},
						{
							"key": "count",
							"value": "20"
						},
						{
							"key": "desc",
							"value": "true",
							"disabled": true
						},
						{
							"key": "lastNHours",
							"value": "1",
							"disabled": true
						},
						{
							"key": "classificationName",
							"value": "tech,cycling",
							"disabled": true
						},
						{
							"key": "tag",
							"value": "phase2"
						},
						{
							"key": "type",
							"value": "message",
							"disabled": true
						},
						{
							"key": "subsetTag",
							"value": "phase2"
						},
						{
							"key": "subsetPercent",
							"value": "15"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "AwAgData Do Evaluation (Mode 1)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"function randomString(minValue, maxValue, dataSet = 'abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ') {\r",
							"    if (!minValue) {\r",
							"        minValue = 20;\r",
							"        maxValue = 20;\r",
							"    }\r",
							"\r",
							"    if (!maxValue) {\r",
							"        maxValue = minValue;\r",
							"    }\r",
							"\r",
							"    let length = _.random(minValue, maxValue),\r",
							"        randomString = \"\";\r",
							"\r",
							"    for (let i = 0; i < length; i++)\r",
							"        randomString += dataSet.charAt(Math.floor(Math.random() * dataSet.length));\r",
							"    return randomString;\r",
							"}\r",
							"\r",
							"pm.variables.set('random_string', randomString());\r",
							"\r",
							"\r",
							"function escapeJsonString(variableName) {\r",
							"  const jsonString = pm.variables.get(variableName);\r",
							"  const escapedString = JSON.stringify(jsonString)\r",
							"    .replace(/\\\\/g, '\\\\\\\\')\r",
							"    .replace(/\"/g, '\\\\\"');\r",
							"\r",
							"  pm.variables.set(`${variableName}_escaped`, escapedString);\r",
							"}\r",
							"\r",
							"//escapeJsonString('evaluation_system_message');\r",
							"escapeJsonString('evaluation_request_schema');\r",
							"escapeJsonString('evaluation_result_schema');\r",
							"//escapeJsonString('evaluation_user_message_base');\r",
							"//escapeJsonString('evaluation_user_message_extra');\r",
							"//escapeJsonString('evaluation_user_message');\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const requestBody = JSON.parse(pm.request.body.raw);\r",
							"\r",
							"if (requestBody.content && requestBody.content.items) {\r",
							"    requestBody.content.items.forEach(item => {\r",
							"        if (item.classifications) {\r",
							"            item.classifications.forEach(classification => {\r",
							"                console.log(`${item.itemId} ~ ${classification.name} ~ ${classification.selected}`);\r",
							"            });\r",
							"        }\r",
							"    });\r",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"model\":\"{{eval_model_vanilla_4o}}\",\r\n   \"modelX\":\"gpt-3.5-turbo-0125\",\r\n   \"modelY\":\"ft:gpt-3.5-turbo-1106:hylozoical:base-kenton-0221:8ug1tjME\",\r\n   \"modelZ\":\"ft:gpt-3.5-turbo-1106:hylozoical:ext-kenton-0229:8xestEEA\",\r\n   \"lightweight_mode\": false,\r\n   \"openai_params\":{},\r\n   \"content\": {\r\n    \"persona\":{{persona_json_kenton}}, \r\n    \"perspectives\":[{{perspective_json_classification}}],\r\n      \"items\":[\r\n         {\r\n            \"itemId\":\"{{random_string}}_1\",\r\n            \"sent\":1710777356.1113026,\r\n            \"title\":\"\",\r\n            \"summary\":\"Please can you get back to me as soon as possible about the customer meeting this afternoon\",\r\n            \"source\":{\r\n               \"type\":\"Simulated Item\",\r\n               \"originator\":\"David Williams <davidwilliams78>\",\r\n               \"channel\":\"t\"\r\n            },\r\n            \"classifications\":[\r\n               {\r\n                  \"name\":\"work-pers\",\r\n                  \"desc\":\"Does this item relate to my work or personal life?\",\r\n                  \"available\":[\r\n                     \"work\",\r\n                     \"personal\"\r\n                  ],\r\n                  \"selected\":\"personal\"\r\n               },\r\n               {\r\n                  \"name\":\"urgency\",\r\n                  \"desc\":\"Is this item in relation to something that I think is urgent?\",\r\n                  \"available\":[\r\n                     \"urgent\",\r\n                     \"not\"\r\n                  ],\r\n                  \"selected\":\"not\"\r\n               },\r\n               {\r\n                  \"name\":\"work-logistics\",\r\n                  \"desc\":\"Is this item related to logistics at work?\",\r\n                  \"available\":[\r\n                     \"logistics\",\r\n                     \"not\"\r\n                  ],\r\n                  \"selected\":\"logistics\"\r\n               },\r\n               {\r\n                  \"name\":\"football\",\r\n                  \"desc\":\"Is this item related to my hobby/interest of Football?\",\r\n                  \"available\":[\r\n                     \"football\",\r\n                     \"not\"\r\n                  ],\r\n                  \"selected\":\"football\"\r\n               },\r\n               {\r\n                  \"name\":\"interested\",\r\n                  \"desc\":\"Am I interested in this item, from a work or a personal perspective?\",\r\n                  \"available\":[\r\n                     \"work\",\r\n                     \"personal\",\r\n                     \"not\"\r\n                  ],\r\n                  \"selected\":\"not\"\r\n               }\r\n            ]\r\n         }\r\n      ]\r\n   }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_prefix}}/api/v1/awag/data/eval/do-eval/:mode?client_id={{agent_id_kenton}}",
					"host": [
						"{{url_prefix}}"
					],
					"path": [
						"api",
						"v1",
						"awag",
						"data",
						"eval",
						"do-eval",
						":mode"
					],
					"query": [
						{
							"key": "client_id",
							"value": "{{agent_id_kenton}}",
							"description": "Overides the x-client-id header to specify different agent"
						}
					],
					"variable": [
						{
							"key": "mode",
							"value": "mode1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "AwAgData Do Evaluation (Mode 2/3)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"function randomString(minValue, maxValue, dataSet = 'abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ') {\r",
							"    if (!minValue) {\r",
							"        minValue = 20;\r",
							"        maxValue = 20;\r",
							"    }\r",
							"\r",
							"    if (!maxValue) {\r",
							"        maxValue = minValue;\r",
							"    }\r",
							"\r",
							"    let length = _.random(minValue, maxValue),\r",
							"        randomString = \"\";\r",
							"\r",
							"    for (let i = 0; i < length; i++)\r",
							"        randomString += dataSet.charAt(Math.floor(Math.random() * dataSet.length));\r",
							"    return randomString;\r",
							"}\r",
							"\r",
							"pm.variables.set('random_string', randomString());\r",
							"\r",
							"\r",
							"function escapeJsonString(variableName) {\r",
							"  const jsonString = pm.variables.get(variableName);\r",
							"  const escapedString = JSON.stringify(jsonString)\r",
							"    .replace(/\\\\/g, '\\\\\\\\')\r",
							"    .replace(/\"/g, '\\\\\"');\r",
							"\r",
							"  pm.variables.set(`${variableName}_escaped`, escapedString);\r",
							"}\r",
							"\r",
							"//escapeJsonString('evaluation_system_message');\r",
							"escapeJsonString('evaluation_request_schema');\r",
							"escapeJsonString('evaluation_result_schema');\r",
							"//escapeJsonString('evaluation_user_message_base');\r",
							"//escapeJsonString('evaluation_user_message_extra');\r",
							"//escapeJsonString('evaluation_user_message');\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const requestBody = JSON.parse(pm.request.body.raw);\r",
							"\r",
							"if (requestBody.content && requestBody.content.items) {\r",
							"    requestBody.content.items.forEach(item => {\r",
							"        if (item.classifications) {\r",
							"            item.classifications.forEach(classification => {\r",
							"                console.log(`${item.itemId} ~ ${classification.name} ~ ${classification.selected}`);\r",
							"            });\r",
							"        }\r",
							"    });\r",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"modelA\":\"gpt-3.5-turbo-1106\",\r\n   \"model\":\"{{ft_model_id_base_mode2}}\",\r\n   \"modelX\":\"gpt-3.5-turbo-0613\",\r\n   \"modelY\":\"ft:gpt-3.5-turbo-1106:hylozoical:base-kenton-0221:8ug1tjME\",\r\n   \"modelZ\":\"ft:gpt-3.5-turbo-1106:hylozoical:ext-kenton-0229:8xestEEA\",\r\n   \"model4\":\"gpt-4\",\r\n   \"openai_params\":{},\r\n   \"content\":{\r\n      \"persona\":{{persona_json_kenton}},\r\n      \"perspective\":\"Has this item been correctly classified?\",\r\n      \"items\":[\r\n         {\r\n            \"id\":{\r\n                \"item_id\": \"{{random_string}}_1\",\r\n                \"perspective_id\": \"classification\",\r\n                \"classification_id\": \"work-pers\"\r\n            },\r\n            \"content\":\"1710777356.1113026\\nPlease can you get back to me as soon as possible about the customer meeting this afternoon\",\r\n            \"classification\":{\r\n               \"description\":\"Does this item relate to my work or personal life?\",\r\n               \"classified_as\":\"work\",\r\n               \"from_available_classifications\":[\r\n                  \"work\",\r\n                  \"personal\"\r\n               ]\r\n            }\r\n         },\r\n         {\r\n            \"id\":{\r\n                \"item_id\": \"{{random_string}}_1\",\r\n                \"perspective_id\": \"classification\",\r\n                \"classification_id\": \"urgency\"\r\n            },\r\n            \"content\":\"1710777356.1113026\\nPlease can you get back to me as soon as possible about the customer meeting this afternoon\",\r\n            \"classification\":{\r\n               \"description\":\"Is this item in relation to something that I think is urgent?\",\r\n               \"classified_as\":\"urgent\",\r\n               \"from_available_classifications\":[\r\n                     \"urgent\",\r\n                     \"not\"\r\n                  ]\r\n            }\r\n         }\r\n      ]\r\n   }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_prefix_int_dev}}/api/v1/awag/data/eval/do-eval/:mode?client_id={{agent_id_kenton}}",
					"host": [
						"{{url_prefix_int_dev}}"
					],
					"path": [
						"api",
						"v1",
						"awag",
						"data",
						"eval",
						"do-eval",
						":mode"
					],
					"query": [
						{
							"key": "client_id",
							"value": "{{agent_id_kenton}}",
							"description": "Overides the x-client-id header to specify different agent"
						}
					],
					"variable": [
						{
							"key": "mode",
							"value": "mode3"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "AwAgData Process Evaluations (Mode 2)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"function randomString(minValue, maxValue, dataSet = 'abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ') {\r",
							"    if (!minValue) {\r",
							"        minValue = 20;\r",
							"        maxValue = 20;\r",
							"    }\r",
							"\r",
							"    if (!maxValue) {\r",
							"        maxValue = minValue;\r",
							"    }\r",
							"\r",
							"    let length = _.random(minValue, maxValue),\r",
							"        randomString = \"\";\r",
							"\r",
							"    for (let i = 0; i < length; i++)\r",
							"        randomString += dataSet.charAt(Math.floor(Math.random() * dataSet.length));\r",
							"    return randomString;\r",
							"}\r",
							"\r",
							"pm.variables.set('random_string', randomString());\r",
							"\r",
							"\r",
							"function escapeJsonString(variableName) {\r",
							"  const jsonString = pm.variables.get(variableName);\r",
							"  const escapedString = JSON.stringify(jsonString)\r",
							"    .replace(/\\\\/g, '\\\\\\\\')\r",
							"    .replace(/\"/g, '\\\\\"');\r",
							"\r",
							"  pm.variables.set(`${variableName}_escaped`, escapedString);\r",
							"}\r",
							"\r",
							"//escapeJsonString('evaluation_system_message');\r",
							"escapeJsonString('evaluation_request_schema');\r",
							"escapeJsonString('evaluation_result_schema');\r",
							"//escapeJsonString('evaluation_user_message_base');\r",
							"//escapeJsonString('evaluation_user_message_extra');\r",
							"//escapeJsonString('evaluation_user_message');\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"const requestBody = JSON.parse(pm.request.body.raw);\r",
							"/*\r",
							"if (requestBody.content && requestBody.content.items) {\r",
							"    requestBody.content.items.forEach(item => {\r",
							"        if (item.classifications) {\r",
							"            item.classifications.forEach(classification => {\r",
							"                console.log(`${item.itemId} ~ ${classification.name} ~ ${classification.selected}`);\r",
							"            });\r",
							"        }\r",
							"    });\r",
							"}\r",
							"*/"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"modelX\":\"{{ft_model_id_base_mode2}}\",\r\n   \"modela\":\"gpt-3.5-turbo-1106\",\r\n   \"model\":\"gpt-4\",\r\n   \"tag_source\":\"phase2\",\r\n   \"tags_dest\":[\r\n      \"phase2-vanilla-mode1-01\"\r\n   ],\r\n   \"persona\":{{persona_json_susan}},\r\n   \"perspectives\":[{{perspective_json_classification}}],\r\n   \"is_exclude_existing\":true,\r\n   \"is_most_recent\":false,\r\n   \"last_n_hours\":null,\r\n   \"by_uuid\":true,\r\n   \"subset_tag\":null,\r\n   \"subset_percent\":null,\r\n   \"items_to_process\":1,\r\n   \"openai_params\":{\r\n      \r\n   }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url_prefix_int_dev}}/api/v1/awag/data/eval/process-evals/:mode?client_id={{agent_id_susan}}&async=false&dry_run=true",
					"host": [
						"{{url_prefix_int_dev}}"
					],
					"path": [
						"api",
						"v1",
						"awag",
						"data",
						"eval",
						"process-evals",
						":mode"
					],
					"query": [
						{
							"key": "client_id",
							"value": "{{agent_id_susan}}",
							"description": "Overides the x-client-id header to specify different agent"
						},
						{
							"key": "async",
							"value": "false"
						},
						{
							"key": "dry_run",
							"value": "true"
						}
					],
					"variable": [
						{
							"key": "mode",
							"value": "mode1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "AwAgData Query Evaluations (Mode 2)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_prefix_int_dev}}/api/v1/awag/data/eval/process-evals/:mode/:job_id?client_id={{agent_id_susan}}",
					"host": [
						"{{url_prefix_int_dev}}"
					],
					"path": [
						"api",
						"v1",
						"awag",
						"data",
						"eval",
						"process-evals",
						":mode",
						":job_id"
					],
					"query": [
						{
							"key": "client_id",
							"value": "{{agent_id_susan}}",
							"description": "Overides the x-client-id header to specify different agent"
						}
					],
					"variable": [
						{
							"key": "mode",
							"value": "{{last_eval_mode}}"
						},
						{
							"key": "job_id",
							"value": "{{last_eval_job_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "AwAgData Generate Subset",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"function randomString(minValue, maxValue, dataSet = 'abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ') {\r",
							"    if (!minValue) {\r",
							"        minValue = 20;\r",
							"        maxValue = 20;\r",
							"    }\r",
							"\r",
							"    if (!maxValue) {\r",
							"        maxValue = minValue;\r",
							"    }\r",
							"\r",
							"    let length = _.random(minValue, maxValue),\r",
							"        randomString = \"\";\r",
							"\r",
							"    for (let i = 0; i < length; i++)\r",
							"        randomString += dataSet.charAt(Math.floor(Math.random() * dataSet.length));\r",
							"    return randomString;\r",
							"}\r",
							"\r",
							"pm.variables.set('randomString', randomString());\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{url_prefix}}/api/v1/awag/data/subsets/subset/:tag/:subset_percent?client_id={{agent_id_susan}}&output_tag=phase2",
					"host": [
						"{{url_prefix}}"
					],
					"path": [
						"api",
						"v1",
						"awag",
						"data",
						"subsets",
						"subset",
						":tag",
						":subset_percent"
					],
					"query": [
						{
							"key": "client_id",
							"value": "{{agent_id_susan}}",
							"description": "Overides the x-client-id header to specify different agent"
						},
						{
							"key": "output_tag",
							"value": "phase2"
						},
						{
							"key": "incremental",
							"value": "true",
							"disabled": true
						}
					],
					"variable": [
						{
							"key": "tag",
							"value": "phase2"
						},
						{
							"key": "subset_percent",
							"value": "25"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "AwAgData Get Subset Tags",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_prefix_int_prod}}/api/v1/awag/data/subsets/subset?client_id={{agent_id_kenton}}",
					"host": [
						"{{url_prefix_int_prod}}"
					],
					"path": [
						"api",
						"v1",
						"awag",
						"data",
						"subsets",
						"subset"
					],
					"query": [
						{
							"key": "client_id",
							"value": "{{agent_id_kenton}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "AwAgData Get Subsets",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_prefix}}/api/v1/awag/data/subsets/subset/:tag?client_id={{agent_id_kenton}}",
					"host": [
						"{{url_prefix}}"
					],
					"path": [
						"api",
						"v1",
						"awag",
						"data",
						"subsets",
						"subset",
						":tag"
					],
					"query": [
						{
							"key": "client_id",
							"value": "{{agent_id_kenton}}"
						}
					],
					"variable": [
						{
							"key": "tag",
							"value": "phase2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "AwAgData Get Subset Items",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url_prefix}}/api/v1/awag/data/subsets/subset/:tag/:subset_percent?client_id={{agent_id_kenton}}",
					"host": [
						"{{url_prefix}}"
					],
					"path": [
						"api",
						"v1",
						"awag",
						"data",
						"subsets",
						"subset",
						":tag",
						":subset_percent"
					],
					"query": [
						{
							"key": "client_id",
							"value": "{{agent_id_kenton}}"
						}
					],
					"variable": [
						{
							"key": "tag",
							"value": "phase2"
						},
						{
							"key": "subset_percent",
							"value": "20"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.request.headers.add({key: 'x-client-id', value: pm.environment.get('agent_id') })",
					"pm.request.headers.add({key: 'x-client-token', value: pm.environment.get('awagdata_api_key') })",
					"",
					"function randomString(minValue, maxValue, dataSet = 'abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ') {",
					"    if (!minValue) {",
					"        minValue = 20;",
					"        maxValue = 20;",
					"    }",
					"",
					"    if (!maxValue) {",
					"        maxValue = minValue;",
					"    }",
					"",
					"    let length = _.random(minValue, maxValue),",
					"        randomString = \"\";",
					"",
					"    for (let i = 0; i < length; i++)",
					"        randomString += dataSet.charAt(Math.floor(Math.random() * dataSet.length));",
					"    return randomString;",
					"}",
					"pm.globals.set(\"function_randomString\", \"(\" + sanitiseStringForJson.toString() + \")\");",
					"",
					"",
					"pm.variables.set('randomString', randomString());",
					"",
					"function sanitiseStringForJson(str) {",
					"",
					"    return str",
					"        .replace(/\\\\/g, '\\\\\\\\') // Escape backslashes",
					"        .replace(/\"/g, '\\\\\"') // Escape double quotes",
					"        .replace(/\\n/g, '\\\\n') // Escape newlines",
					"        .replace(/\\r/g, '\\\\r') // Escape carriage returns",
					"        .replace(/\\t/g, '\\\\t') // Escape tabs",
					"        .replace(/\\f/g, '\\\\f') // Escape form feeds",
					"        //.replace(/\\b/g, '\\\\b'); // Escape backspaces",
					"}",
					"//pm.globals.set(\"function_sanitiseStringForJson\", sanitiseStringForJson.toString());",
					"pm.globals.set(\"function_sanitiseStringForJson\", \"(\" + sanitiseStringForJson.toString() + \")\");",
					"",
					"",
					"console.log(pm.globals.get(\"function_sanitiseStringForJson\"));",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "last_job_id",
			"value": ""
		}
	]
}